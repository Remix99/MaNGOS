diff --git a/VC100/100ScriptDev2.vcxproj b/VC100/100ScriptDev2.vcxproj
index d46f2be..9e11e0d 100644
--- a/VC100/100ScriptDev2.vcxproj
+++ b/VC100/100ScriptDev2.vcxproj
@@ -225,6 +225,8 @@
     <ClCompile Include="..\scripts\eastern_kingdoms\elwynn_forest.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\eversong_woods.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\ghostlands.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\gilneas.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\gilneas_city.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\hinterlands.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\ironforge.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\isle_of_queldanas.cpp" />
@@ -237,51 +239,89 @@
     <ClCompile Include="..\scripts\eastern_kingdoms\stranglethorn_vale.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\swamp_of_sorrows.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\tirisfal_glades.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\twilight_highlands.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\undercity.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\vashjir.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\western_plaguelands.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\westfall.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\wetlands.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\blackrock_depths.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\boss_ambassador_flamelash.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\boss_anubshiah.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\boss_coren_direbrew.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\boss_emperor_dagran_thaurissan.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\boss_general_angerforge.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\boss_gorosh_the_dervish.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\boss_grizzle.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\boss_high_interrogator_gerstahn.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\boss_magmus.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\boss_tomb_of_seven.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\instance_blackrock_depths.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_drakkisath.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_gyth.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_halycon.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_highlord_omokk.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_mother_smolderweb.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_overlord_wyrmthalak.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_pyroguard_emberseer.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_quartermaster_zigris.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_rend_blackhand.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_shadow_hunter_voshgajin.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_the_beast.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_warmaster_voone.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\instance_blackrock_spire.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackwing_lair\boss_broodlord_lashlayer.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackwing_lair\boss_chromaggus.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackwing_lair\boss_ebonroc.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackwing_lair\boss_firemaw.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackwing_lair\boss_flamegor.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackwing_lair\boss_nefarian.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackwing_lair\boss_razorgore.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackwing_lair\boss_vaelastrasz.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackwing_lair\boss_victor_nefarius.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackwing_lair\instance_blackwing_lair.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\bastion_of_twilight\ascendant_council.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\bastion_of_twilight\boss_chogall.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\bastion_of_twilight\boss_halfus_wyrmbreaker.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\bastion_of_twilight\boss_sinestra.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\bastion_of_twilight\boss_valiona_and_theralion.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\bastion_of_twilight\instance_bastion_of_twilight.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\boss_beauty.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\boss_corla.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\boss_karsh_steelbender.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\boss_lord_obsidius.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\boss_romogg.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\instance_blackrock_caverns.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\blackrock_depths.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_ambassador_flamelash.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_anubshiah.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_coren_direbrew.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_emperor_dagran_thaurissan.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_general_angerforge.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_gorosh_the_dervish.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_grizzle.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_high_interrogator_gerstahn.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_magmus.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_tomb_of_seven.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\instance_blackrock_depths.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_drakkisath.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_gyth.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_halycon.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_highlord_omokk.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_mother_smolderweb.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_overlord_wyrmthalak.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_pyroguard_emberseer.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_quartermaster_zigris.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_rend_blackhand.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_shadow_hunter_voshgajin.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_the_beast.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_warmaster_voone.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\instance_blackrock_spire.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\boss_atramedes.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\boss_chimaeron.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\boss_magmaw.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\boss_maloriak.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\boss_nefarian_descent.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\instance_blackwing_descent.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\omnotron_defense.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_broodlord_lashlayer.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_chromaggus.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_ebonroc.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_firemaw.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_flamegor.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_nefarian.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_razorgore.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_vaelastrasz.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_victor_nefarius.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\instance_blackwing_lair.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_baron_geddon.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_garr.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_gehennas.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_golemagg.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_lucifron.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_magmadar.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_majordomo_executus.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_ragnaros.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_shazzrah.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_sulfuron_harbinger.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\instance_molten_core.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\molten_core.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\deadmines\boss_mr_smite.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\deadmines\deadmines.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\deadmines\instance_deadmines.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\gnomeregan\boss_thermaplugg.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\gnomeregan\gnomeregan.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\gnomeregan\instance_gnomeregan.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\grim_batol\boss_drahga_shadowburner.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\grim_batol\boss_erudax.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\grim_batol\boss_forgemaster_throngus.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\grim_batol\boss_general_umbriss.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\grim_batol\instance_grim_batol.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\karazhan\boss_curator.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\karazhan\boss_maiden_of_virtue.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\karazhan\boss_midnight.cpp" />
@@ -301,18 +341,6 @@
     <ClCompile Include="..\scripts\eastern_kingdoms\magisters_terrace\boss_vexallus.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\magisters_terrace\instance_magisters_terrace.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\magisters_terrace\magisters_terrace.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\boss_baron_geddon.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\boss_garr.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\boss_gehennas.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\boss_golemagg.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\boss_lucifron.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\boss_magmadar.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\boss_majordomo_executus.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\boss_ragnaros.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\boss_shazzrah.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\boss_sulfuron_harbinger.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\instance_molten_core.cpp" />
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\molten_core.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\scarlet_enclave\ebon_hold.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\scarlet_monastery\boss_arcanist_doan.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\scarlet_monastery\boss_azshir_the_sleepless.cpp" />
@@ -356,6 +384,11 @@
     <ClCompile Include="..\scripts\eastern_kingdoms\sunwell_plateau\boss_kiljaeden.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\sunwell_plateau\boss_muru.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\sunwell_plateau\instance_sunwell_plateau.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\throne_of_the_tides\boss_commander_ulthok.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\throne_of_the_tides\boss_erunak_and_ghursha.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\throne_of_the_tides\boss_lady_nazjar.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\throne_of_the_tides\boss_ozumat.cpp" />
+    <ClCompile Include="..\scripts\eastern_kingdoms\throne_of_the_tides\instance_throne_of_the_tides.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\uldaman\boss_archaedas.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\uldaman\uldaman.cpp" />
     <ClCompile Include="..\scripts\eastern_kingdoms\uldaman\instance_uldaman.cpp" />
@@ -396,7 +429,9 @@
     <ClCompile Include="..\scripts\kalimdor\dustwallow_marsh.cpp" />
     <ClCompile Include="..\scripts\kalimdor\felwood.cpp" />
     <ClCompile Include="..\scripts\kalimdor\feralas.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\molten_front.cpp" />
     <ClCompile Include="..\scripts\kalimdor\moonglade.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\mount_hyjal.cpp" />
     <ClCompile Include="..\scripts\kalimdor\mulgore.cpp" />
     <ClCompile Include="..\scripts\kalimdor\orgrimmar.cpp" />
     <ClCompile Include="..\scripts\kalimdor\silithus.cpp" />
@@ -406,6 +441,7 @@
     <ClCompile Include="..\scripts\kalimdor\the_barrens.cpp" />
     <ClCompile Include="..\scripts\kalimdor\thousand_needles.cpp" />
     <ClCompile Include="..\scripts\kalimdor\thunder_bluff.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\uldum.cpp" />
     <ClCompile Include="..\scripts\kalimdor\ungoro_crater.cpp" />
     <ClCompile Include="..\scripts\kalimdor\winterspring.cpp" />
     <ClCompile Include="..\scripts\kalimdor\blackfathom_deeps\instance_blackfathom_deeps.cpp" />
@@ -416,17 +452,49 @@
     <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dark_portal\boss_temporus.cpp" />
     <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dark_portal\dark_portal.cpp" />
     <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dark_portal\instance_dark_portal.cpp" />
-    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hyjal\boss_archimonde.cpp" />
-    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hyjal\hyjal.cpp" />
-    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hyjal\hyjalAI.cpp" />
-    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hyjal\instance_hyjal.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_deathwing.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_hagara.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_morchok.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_ultraxion.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_warlord_zonozz.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_warmaster_blackhorn.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_yorsahj.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dragon_soul\dragon_soul.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dragon_soul\instance_dragon_soul.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\end_of_time\end_of_time.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\end_of_time\instance_end_of_time.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hour_of_twilight\boss_archbishop_benedictus.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hour_of_twilight\boss_arcurion.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hour_of_twilight\boss_asira_dawnslayer.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hour_of_twilight\instance_hour_of_twilight.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hyjal_summit\boss_archimonde.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hyjal_summit\hyjal.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hyjal_summit\hyjalAI.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hyjal_summit\instance_hyjal.cpp" />
     <ClCompile Include="..\scripts\kalimdor\caverns_of_time\old_hillsbrad\boss_captain_skarloc.cpp" />
     <ClCompile Include="..\scripts\kalimdor\caverns_of_time\old_hillsbrad\boss_epoch_hunter.cpp" />
     <ClCompile Include="..\scripts\kalimdor\caverns_of_time\old_hillsbrad\boss_leutenant_drake.cpp" />
     <ClCompile Include="..\scripts\kalimdor\caverns_of_time\old_hillsbrad\instance_old_hillsbrad.cpp" />
     <ClCompile Include="..\scripts\kalimdor\caverns_of_time\old_hillsbrad\old_hillsbrad.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\well_of_eternity\boss_mannoroth_and_varothen.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\well_of_eternity\boss_perotharn.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\well_of_eternity\boss_queen_azshara.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\well_of_eternity\instance_well_of_eternity.cpp" />
     <ClCompile Include="..\scripts\kalimdor\dire_maul\dire_maul.cpp" />
     <ClCompile Include="..\scripts\kalimdor\dire_maul\instance_dire_maul.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\firelands\boss_alysrazor.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\firelands\boss_baleroc.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\firelands\boss_bethtilac.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\firelands\boss_lord_rhyolith.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\firelands\boss_majordomo_staghelm.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\firelands\boss_ragnaros_firelands.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\firelands\boss_shannox.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\firelands\instance_firelands.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\lost_city_of_tolvir\boss_general_husam.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\lost_city_of_tolvir\boss_lockmaw.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\lost_city_of_tolvir\boss_prophet_barim.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\lost_city_of_tolvir\boss_siamat.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\lost_city_of_tolvir\instance_lost_city_of_tolvir.cpp" />
     <ClCompile Include="..\scripts\kalimdor\maraudon\boss_celebras_the_cursed.cpp" />
     <ClCompile Include="..\scripts\kalimdor\maraudon\boss_landslide.cpp" />
     <ClCompile Include="..\scripts\kalimdor\maraudon\boss_noxxion.cpp" />
@@ -456,11 +524,26 @@
     <ClCompile Include="..\scripts\kalimdor\temple_of_ahnqiraj\boss_viscidus.cpp" />
     <ClCompile Include="..\scripts\kalimdor\temple_of_ahnqiraj\instance_temple_of_ahnqiraj.cpp" />
     <ClCompile Include="..\scripts\kalimdor\temple_of_ahnqiraj\mob_anubisath_sentinel.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\throne_of_the_four_winds\boss_alakir.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\throne_of_the_four_winds\conclave_of_the_wind.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\throne_of_the_four_winds\instance_throne_of_the_four_winds.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\vortex_pinnacle\boss_altairus.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\vortex_pinnacle\boss_asaad.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\vortex_pinnacle\boss_grand_vizier_ertan.cpp" />
+    <ClCompile Include="..\scripts\kalimdor\vortex_pinnacle\instance_vortex_pinnacle.cpp" />
     <ClCompile Include="..\scripts\kalimdor\wailing_caverns\instance_wailing_caverns.cpp" />
     <ClCompile Include="..\scripts\kalimdor\wailing_caverns\wailing_caverns.cpp" />
     <ClCompile Include="..\scripts\kalimdor\zulfarrak\boss_zumrah.cpp" />
     <ClCompile Include="..\scripts\kalimdor\zulfarrak\instance_zulfarrak.cpp" />
     <ClCompile Include="..\scripts\kalimdor\zulfarrak\zulfarrak.cpp" />
+    <ClCompile Include="..\scripts\maelstrom\deepholm.cpp" />
+    <ClCompile Include="..\scripts\maelstrom\kezan.cpp" />
+    <ClCompile Include="..\scripts\maelstrom\lost_isles.cpp" />
+    <ClCompile Include="..\scripts\maelstrom\stonecore\boss_corborus.cpp" />
+    <ClCompile Include="..\scripts\maelstrom\stonecore\boss_ozruk.cpp" />
+    <ClCompile Include="..\scripts\maelstrom\stonecore\boss_priestess_azil.cpp" />
+    <ClCompile Include="..\scripts\maelstrom\stonecore\boss_slabhide.cpp" />
+    <ClCompile Include="..\scripts\maelstrom\stonecore\instance_stonecore.cpp" />
     <ClCompile Include="..\scripts\northrend\borean_tundra.cpp" />
     <ClCompile Include="..\scripts\northrend\dalaran.cpp" />
     <ClCompile Include="..\scripts\northrend\dragonblight.cpp" />
@@ -714,36 +797,50 @@
     <ClInclude Include="..\base\follower_ai.h" />
     <ClInclude Include="..\base\guard_ai.h" />
     <ClInclude Include="..\base\pet_ai.h" />
-    <ClInclude Include="..\scripts\eastern_kingdoms\blackrock_depths\blackrock_depths.h" />
-    <ClInclude Include="..\scripts\eastern_kingdoms\blackrock_spire\blackrock_spire.h" />
-    <ClInclude Include="..\scripts\eastern_kingdoms\blackwing_lair\blackwing_lair.h" />
+    <ClInclude Include="..\scripts\eastern_kingdoms\bastion_of_twilight\bastion_of_twilight.h" />
+    <ClInclude Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\blackrock_caverns.h" />
+    <ClInclude Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\blackrock_depths.h" />
+    <ClInclude Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\blackrock_spire.h" />
+    <ClInclude Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\blackwing_descent.h" />
+    <ClInclude Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\blackwing_lair.h" />
+    <ClInclude Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\molten_core.h" />
     <ClInclude Include="..\scripts\eastern_kingdoms\deadmines\deadmines.h" />
     <ClInclude Include="..\scripts\eastern_kingdoms\gnomeregan\gnomeregan.h" />
+    <ClInclude Include="..\scripts\eastern_kingdoms\grim_batol\grim_batol.h" />
     <ClInclude Include="..\scripts\eastern_kingdoms\karazhan\karazhan.h" />
     <ClInclude Include="..\scripts\eastern_kingdoms\magisters_terrace\magisters_terrace.h" />
-    <ClInclude Include="..\scripts\eastern_kingdoms\molten_core\molten_core.h" />
     <ClInclude Include="..\scripts\eastern_kingdoms\scarlet_monastery\scarlet_monastery.h" />
     <ClInclude Include="..\scripts\eastern_kingdoms\scholomance\scholomance.h" />
     <ClInclude Include="..\scripts\eastern_kingdoms\shadowfang_keep\shadowfang_keep.h" />
     <ClInclude Include="..\scripts\eastern_kingdoms\stratholme\stratholme.h" />
     <ClInclude Include="..\scripts\eastern_kingdoms\sunken_temple\sunken_temple.h" />
     <ClInclude Include="..\scripts\eastern_kingdoms\sunwell_plateau\sunwell_plateau.h" />
+    <ClInclude Include="..\scripts\eastern_kingdoms\throne_of_the_tides\throne_of_the_tides.h" />
     <ClInclude Include="..\scripts\eastern_kingdoms\uldaman\uldaman.h" />
     <ClInclude Include="..\scripts\eastern_kingdoms\zulaman\zulaman.h" />
     <ClInclude Include="..\scripts\eastern_kingdoms\zulgurub\zulgurub.h" />
     <ClInclude Include="..\scripts\kalimdor\blackfathom_deeps\blackfathom_deeps.h" />
     <ClInclude Include="..\scripts\kalimdor\caverns_of_time\culling_of_stratholme\culling_of_stratholme.h" />
     <ClInclude Include="..\scripts\kalimdor\caverns_of_time\dark_portal\dark_portal.h" />
-    <ClInclude Include="..\scripts\kalimdor\caverns_of_time\hyjal\hyjal.h" />
-    <ClInclude Include="..\scripts\kalimdor\caverns_of_time\hyjal\hyjalAI.h" />
+    <ClInclude Include="..\scripts\kalimdor\caverns_of_time\dragon_soul\dragon_soul.h" />
+    <ClInclude Include="..\scripts\kalimdor\caverns_of_time\end_of_time\end_of_time.h" />
+    <ClInclude Include="..\scripts\kalimdor\caverns_of_time\hour_of_twilight\hour_of_twilight.h" />
+    <ClInclude Include="..\scripts\kalimdor\caverns_of_time\hyjal_summit\hyjal.h" />
+    <ClInclude Include="..\scripts\kalimdor\caverns_of_time\hyjal_summit\hyjalAI.h" />
     <ClInclude Include="..\scripts\kalimdor\caverns_of_time\old_hillsbrad\old_hillsbrad.h" />
+    <ClInclude Include="..\scripts\kalimdor\caverns_of_time\well_of_eternity\well_of_eternity.h" />
     <ClInclude Include="..\scripts\kalimdor\dire_maul\dire_maul.h" />
+    <ClInclude Include="..\scripts\kalimdor\firelands\firelands.h" />
+    <ClInclude Include="..\scripts\kalimdor\lost_city_of_tolvir\lost_city_of_tolvir.h" />
     <ClInclude Include="..\scripts\kalimdor\onyxias_lair\onyxias_lair.h" />
     <ClInclude Include="..\scripts\kalimdor\razorfen_kraul\razorfen_kraul.h" />
     <ClInclude Include="..\scripts\kalimdor\ruins_of_ahnqiraj\ruins_of_ahnqiraj.h" />
     <ClInclude Include="..\scripts\kalimdor\temple_of_ahnqiraj\temple_of_ahnqiraj.h" />
+    <ClInclude Include="..\scripts\kalimdor\throne_of_the_four_winds\throne_of_the_four_winds.h" />
+    <ClInclude Include="..\scripts\kalimdor\vortex_pinnacle\vortex_pinnacle.h" />
     <ClInclude Include="..\scripts\kalimdor\wailing_caverns\wailing_caverns.h" />
     <ClInclude Include="..\scripts\kalimdor\zulfarrak\zulfarrak.h" />
+    <ClInclude Include="..\scripts\maelstrom\stonecore\stonecore.h" />
     <ClInclude Include="..\scripts\northrend\azjol-nerub\ahnkahet\ahnkahet.h" />
     <ClInclude Include="..\scripts\northrend\azjol-nerub\azjol-nerub\azjol-nerub.h" />
     <ClInclude Include="..\scripts\northrend\crusaders_coliseum\trial_of_the_champion\trial_of_the_champion.h" />
diff --git a/VC100/100ScriptDev2.vcxproj.filters b/VC100/100ScriptDev2.vcxproj.filters
index 3a382cb..8e24471 100644
--- a/VC100/100ScriptDev2.vcxproj.filters
+++ b/VC100/100ScriptDev2.vcxproj.filters
@@ -16,30 +16,45 @@
     <Filter Include="scripts\eastern_kingdoms">
       <UniqueIdentifier>{ca2551e0-68d0-4331-88f3-ab0cdaa2bf9a}</UniqueIdentifier>
     </Filter>
-    <Filter Include="scripts\eastern_kingdoms\blackrock_depths">
+    <Filter Include="scripts\eastern_kingdoms\bastion_of_twilight">
+      <UniqueIdentifier>{043f49c3-d844-4833-b5bc-bf88638c47b5}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="scripts\eastern_kingdoms\blackrock_mountain">
+      <UniqueIdentifier>{1bb5cf47-7950-4b49-8e5d-9ee37108f2c5}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns">
+      <UniqueIdentifier>{434e1621-9e58-44d9-b5a6-d0f5dea495b4}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths">
       <UniqueIdentifier>{45c59280-02fb-482f-859b-bd47cc230f0f}</UniqueIdentifier>
     </Filter>
-    <Filter Include="scripts\eastern_kingdoms\blackrock_spire">
+    <Filter Include="scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire">
       <UniqueIdentifier>{5631f38e-66c8-4efd-ad3a-2834fbb49a6e}</UniqueIdentifier>
     </Filter>
-    <Filter Include="scripts\eastern_kingdoms\blackwing_lair">
+    <Filter Include="scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent">
+      <UniqueIdentifier>{9887f0b1-d8ca-49a5-b1a7-aaf30ed4452f}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair">
       <UniqueIdentifier>{31605090-12b9-4d42-a5e9-1cbfac8ab384}</UniqueIdentifier>
     </Filter>
+    <Filter Include="scripts\eastern_kingdoms\blackrock_mountain\molten_core">
+      <UniqueIdentifier>{920d1832-b347-4afd-bd05-4c943e5555f0}</UniqueIdentifier>
+    </Filter>
     <Filter Include="scripts\eastern_kingdoms\deadmines">
       <UniqueIdentifier>{08fb5b22-710d-46d6-9893-f567aa75a5e6}</UniqueIdentifier>
     </Filter>
     <Filter Include="scripts\eastern_kingdoms\gnomeregan">
       <UniqueIdentifier>{cef5c3c5-f434-4b9f-9bad-8c106d46c755}</UniqueIdentifier>
     </Filter>
+    <Filter Include="scripts\eastern_kingdoms\grim_batol">
+      <UniqueIdentifier>{cc0c8231-75d8-456e-bca8-7d0a122eee52}</UniqueIdentifier>
+    </Filter>
     <Filter Include="scripts\eastern_kingdoms\karazhan">
       <UniqueIdentifier>{66bc2cec-8372-4191-991c-1c23275fa13c}</UniqueIdentifier>
     </Filter>
     <Filter Include="scripts\eastern_kingdoms\magisters_terrace">
       <UniqueIdentifier>{af465469-5a16-4908-aa08-39c77d02cd88}</UniqueIdentifier>
     </Filter>
-    <Filter Include="scripts\eastern_kingdoms\molten_core">
-      <UniqueIdentifier>{920d1832-b347-4afd-bd05-4c943e5555f0}</UniqueIdentifier>
-    </Filter>
     <Filter Include="scripts\eastern_kingdoms\scarlet_enclave">
       <UniqueIdentifier>{6ffd42e5-ac49-4635-8087-77ad2b7b0866}</UniqueIdentifier>
     </Filter>
@@ -64,6 +79,9 @@
     <Filter Include="scripts\eastern_kingdoms\sunwell_plateau">
       <UniqueIdentifier>{1d718eaa-2a8d-4cb9-9abf-17fcf0d91f83}</UniqueIdentifier>
     </Filter>
+    <Filter Include="scripts\eastern_kingdoms\throne_of_the_tides">
+      <UniqueIdentifier>{f00c08b4-1c1d-4379-8b0c-2a1a51c14bb2}</UniqueIdentifier>
+    </Filter>
     <Filter Include="scripts\eastern_kingdoms\uldaman">
       <UniqueIdentifier>{c929f54b-22dd-49b4-862c-92dfa9a2d1f7}</UniqueIdentifier>
     </Filter>
@@ -91,15 +109,33 @@
     <Filter Include="scripts\kalimdor\caverns_of_time\dark_portal">
       <UniqueIdentifier>{dc38d3fe-d1fe-49f2-bd8f-758cd270dd62}</UniqueIdentifier>
     </Filter>
-    <Filter Include="scripts\kalimdor\caverns_of_time\hyjal">
+    <Filter Include="scripts\kalimdor\caverns_of_time\dragon_soul">
+      <UniqueIdentifier>{ad315c26-01fe-4431-96bf-7b3dc3402e1a}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="scripts\kalimdor\caverns_of_time\end_of_time">
+      <UniqueIdentifier>{b8416f00-9151-4ab5-abe1-bc06af42d736}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="scripts\kalimdor\caverns_of_time\hour_of_twilight">
+      <UniqueIdentifier>{4df3cb5e-8de9-4082-a35a-72a2c589779c}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="scripts\kalimdor\caverns_of_time\hyjal_summit">
       <UniqueIdentifier>{2552ab59-1f73-4778-a6db-6f03e405622d}</UniqueIdentifier>
     </Filter>
     <Filter Include="scripts\kalimdor\caverns_of_time\old_hillsbrad">
       <UniqueIdentifier>{8206776b-4d43-431d-bca5-5f6cff157ea4}</UniqueIdentifier>
     </Filter>
+    <Filter Include="scripts\kalimdor\caverns_of_time\well_of_eternity">
+      <UniqueIdentifier>{708d3668-ff97-46b8-a75e-6f5d20ee3ec8}</UniqueIdentifier>
+    </Filter>
     <Filter Include="scripts\kalimdor\dire_maul">
       <UniqueIdentifier>{02135a7c-33cc-444e-af90-48a5193e5a6f}</UniqueIdentifier>
     </Filter>
+    <Filter Include="scripts\kalimdor\firelands">
+      <UniqueIdentifier>{094d5051-4784-4b79-8875-a87d4ed6d5b1}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="scripts\kalimdor\lost_city_of_tolvir">
+      <UniqueIdentifier>{dd6326cc-bcd9-4642-a049-7911cda0bc85}</UniqueIdentifier>
+    </Filter>
     <Filter Include="scripts\kalimdor\maraudon">
       <UniqueIdentifier>{014ada9a-13bf-4540-a0ce-5132bdc36fcf}</UniqueIdentifier>
     </Filter>
@@ -121,12 +157,24 @@
     <Filter Include="scripts\kalimdor\temple_of_ahnqiraj">
       <UniqueIdentifier>{ba031a13-787e-41da-bcaf-1986fdea8069}</UniqueIdentifier>
     </Filter>
+    <Filter Include="scripts\kalimdor\throne_of_the_four_winds">
+      <UniqueIdentifier>{17496c60-f5f8-4e29-ab2b-d480296e0eb4}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="scripts\kalimdor\vortex_pinnacle">
+      <UniqueIdentifier>{397252e0-5267-4571-b9e1-cb45a1bbd1ab}</UniqueIdentifier>
+    </Filter>
     <Filter Include="scripts\kalimdor\wailing_caverns">
       <UniqueIdentifier>{0412262e-b05b-4827-adef-97507204cb69}</UniqueIdentifier>
     </Filter>
     <Filter Include="scripts\kalimdor\zulfarrak">
       <UniqueIdentifier>{e775610e-fa3c-4355-9c4c-473a6a5e57d5}</UniqueIdentifier>
     </Filter>
+    <Filter Include="scripts\maelstrom">
+      <UniqueIdentifier>{d85193fb-5107-4a82-86b9-fff6c2ffb537}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="scripts\maelstrom\stonecore">
+      <UniqueIdentifier>{6089ced5-7090-4294-bd63-c036335880be}</UniqueIdentifier>
+    </Filter>
     <Filter Include="scripts\northrend">
       <UniqueIdentifier>{6c5f7fd4-671b-4cba-aa95-7758b93dc844}</UniqueIdentifier>
     </Filter>
@@ -154,6 +202,24 @@
     <Filter Include="scripts\northrend\gundrak">
       <UniqueIdentifier>{9c5d9a0f-8967-4cf6-a047-3b724f81dc29}</UniqueIdentifier>
     </Filter>
+    <Filter Include="scripts\northrend\icecrown_citadel">
+      <UniqueIdentifier>{88c327d5-0768-465f-b954-30eca0d31f45}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="scripts\northrend\icecrown_citadel\icecrown_citadel">
+      <UniqueIdentifier>{b20efa19-1e16-42e4-bc29-a9c8e282d17c}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="scripts\northrend\icecrown_citadel\frozen_halls">
+      <UniqueIdentifier>{fec1fbfa-5119-4bb0-98bc-f8d4583521f7}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="scripts\northrend\icecrown_citadel\frozen_halls\pit_of_saron">
+      <UniqueIdentifier>{1cb43523-dc33-4c49-a5b7-6e700fe0ecd6}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="scripts\northrend\icecrown_citadel\frozen_halls\halls_of_reflection">
+      <UniqueIdentifier>{7289cc07-6956-4b09-8dc5-753c82abe8c9}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="scripts\northrend\icecrown_citadel\frozen_halls\forge_of_souls">
+      <UniqueIdentifier>{e834cf7b-88ad-4bae-9fc8-8e027136c63b}</UniqueIdentifier>
+    </Filter>
     <Filter Include="scripts\northrend\naxxramas">
       <UniqueIdentifier>{42501e94-f91e-40be-a02a-472b5ca1e22c}</UniqueIdentifier>
     </Filter>
@@ -172,6 +238,9 @@
     <Filter Include="scripts\northrend\obsidian_sanctum">
       <UniqueIdentifier>{d47410b0-3184-40e2-8704-cea9b97e20ed}</UniqueIdentifier>
     </Filter>
+    <Filter Include="scripts\northrend\ruby_sanctum">
+      <UniqueIdentifier>{e35abead-2389-4eb9-88bd-70e6fe5636b5}</UniqueIdentifier>
+    </Filter>
     <Filter Include="scripts\northrend\ulduar">
       <UniqueIdentifier>{1b2f0d99-82b0-4a96-aaac-c485830eb1b3}</UniqueIdentifier>
     </Filter>
@@ -199,24 +268,6 @@
     <Filter Include="scripts\northrend\violet_hold">
       <UniqueIdentifier>{728148f8-18a0-4606-a2ec-2c9eae4e5e7e}</UniqueIdentifier>
     </Filter>
-    <Filter Include="scripts\northrend\icecrown_citadel">
-      <UniqueIdentifier>{88c327d5-0768-465f-b954-30eca0d31f45}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="scripts\northrend\icecrown_citadel\icecrown_citadel">
-      <UniqueIdentifier>{b20efa19-1e16-42e4-bc29-a9c8e282d17c}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="scripts\northrend\icecrown_citadel\frozen_halls">
-      <UniqueIdentifier>{fec1fbfa-5119-4bb0-98bc-f8d4583521f7}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="scripts\northrend\icecrown_citadel\frozen_halls\pit_of_saron">
-      <UniqueIdentifier>{1cb43523-dc33-4c49-a5b7-6e700fe0ecd6}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="scripts\northrend\icecrown_citadel\frozen_halls\halls_of_reflection">
-      <UniqueIdentifier>{7289cc07-6956-4b09-8dc5-753c82abe8c9}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="scripts\northrend\icecrown_citadel\frozen_halls\forge_of_souls">
-      <UniqueIdentifier>{e834cf7b-88ad-4bae-9fc8-8e027136c63b}</UniqueIdentifier>
-    </Filter>
     <Filter Include="scripts\outland">
       <UniqueIdentifier>{cfb08e82-63e6-49ca-bff2-533f8647797b}</UniqueIdentifier>
     </Filter>
@@ -295,9 +346,6 @@
     <Filter Include="system">
       <UniqueIdentifier>{90f3df6a-a1d0-4a6e-b8d7-d1d993fc795b}</UniqueIdentifier>
     </Filter>
-    <Filter Include="scripts\northrend\ruby_sanctum">
-      <UniqueIdentifier>{e35abead-2389-4eb9-88bd-70e6fe5636b5}</UniqueIdentifier>
-    </Filter>
   </ItemGroup>
   <ItemGroup>
     <ClCompile Include="..\base\escort_ai.cpp">
@@ -345,6 +393,12 @@
     <ClCompile Include="..\scripts\eastern_kingdoms\ghostlands.cpp">
       <Filter>scripts\eastern_kingdoms</Filter>
     </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\gilneas.cpp">
+      <Filter>scripts\eastern_kingdoms</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\gilneas_city.cpp">
+      <Filter>scripts\eastern_kingdoms</Filter>
+    </ClCompile>
     <ClCompile Include="..\scripts\eastern_kingdoms\hinterlands.cpp">
       <Filter>scripts\eastern_kingdoms</Filter>
     </ClCompile>
@@ -381,9 +435,15 @@
     <ClCompile Include="..\scripts\eastern_kingdoms\tirisfal_glades.cpp">
       <Filter>scripts\eastern_kingdoms</Filter>
     </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\twilight_highlands.cpp">
+      <Filter>scripts\eastern_kingdoms</Filter>
+    </ClCompile>
     <ClCompile Include="..\scripts\eastern_kingdoms\undercity.cpp">
       <Filter>scripts\eastern_kingdoms</Filter>
     </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\vashjir.cpp">
+      <Filter>scripts\eastern_kingdoms</Filter>
+    </ClCompile>
     <ClCompile Include="..\scripts\eastern_kingdoms\western_plaguelands.cpp">
       <Filter>scripts\eastern_kingdoms</Filter>
     </ClCompile>
@@ -393,110 +453,204 @@
     <ClCompile Include="..\scripts\eastern_kingdoms\wetlands.cpp">
       <Filter>scripts\eastern_kingdoms</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\blackrock_depths.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_depths</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\bastion_of_twilight\ascendant_council.cpp">
+      <Filter>scripts\eastern_kingdoms\bastion_of_twilight</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\bastion_of_twilight\boss_chogall.cpp">
+      <Filter>scripts\eastern_kingdoms\bastion_of_twilight</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\bastion_of_twilight\boss_halfus_wyrmbreaker.cpp">
+      <Filter>scripts\eastern_kingdoms\bastion_of_twilight</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\bastion_of_twilight\boss_sinestra.cpp">
+      <Filter>scripts\eastern_kingdoms\bastion_of_twilight</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\bastion_of_twilight\boss_valiona_and_theralion.cpp">
+      <Filter>scripts\eastern_kingdoms\bastion_of_twilight</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\bastion_of_twilight\instance_bastion_of_twilight.cpp">
+      <Filter>scripts\eastern_kingdoms\bastion_of_twilight</Filter>
+    </ClCompile>
+    
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\boss_beauty.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\boss_corla.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\boss_karsh_steelbender.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\boss_lord_obsidius.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\boss_romogg.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\instance_blackrock_caverns.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\blackrock_depths.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_ambassador_flamelash.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_anubshiah.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_coren_direbrew.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_emperor_dagran_thaurissan.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_general_angerforge.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_gorosh_the_dervish.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_grizzle.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_high_interrogator_gerstahn.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_magmus.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_tomb_of_seven.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\instance_blackrock_depths.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_drakkisath.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_gyth.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_halycon.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\boss_ambassador_flamelash.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_depths</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_highlord_omokk.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\boss_anubshiah.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_depths</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_mother_smolderweb.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\boss_coren_direbrew.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_depths</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_overlord_wyrmthalak.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\boss_emperor_dagran_thaurissan.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_depths</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_pyroguard_emberseer.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\boss_general_angerforge.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_depths</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_quartermaster_zigris.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\boss_gorosh_the_dervish.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_depths</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_rend_blackhand.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\boss_grizzle.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_depths</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_shadow_hunter_voshgajin.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\boss_high_interrogator_gerstahn.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_depths</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_the_beast.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\boss_magmus.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_depths</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_warmaster_voone.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\boss_tomb_of_seven.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_depths</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\instance_blackrock_spire.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_depths\instance_blackrock_depths.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_depths</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\boss_atramedes.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_drakkisath.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_spire</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\boss_chimaeron.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_gyth.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_spire</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\boss_magmaw.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_halycon.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_spire</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\boss_maloriak.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_highlord_omokk.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_spire</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\boss_nefarian_descent.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_mother_smolderweb.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_spire</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\instance_blackwing_descent.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_overlord_wyrmthalak.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_spire</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\omnotron_defense.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_pyroguard_emberseer.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_spire</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_broodlord_lashlayer.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_quartermaster_zigris.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_spire</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_chromaggus.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_rend_blackhand.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_spire</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_ebonroc.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_shadow_hunter_voshgajin.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_spire</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_firemaw.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_the_beast.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_spire</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_flamegor.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\boss_warmaster_voone.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_spire</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_nefarian.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_spire\instance_blackrock_spire.cpp">
-      <Filter>scripts\eastern_kingdoms\blackrock_spire</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_razorgore.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackwing_lair\boss_broodlord_lashlayer.cpp">
-      <Filter>scripts\eastern_kingdoms\blackwing_lair</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_vaelastrasz.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackwing_lair\boss_chromaggus.cpp">
-      <Filter>scripts\eastern_kingdoms\blackwing_lair</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_victor_nefarius.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackwing_lair\boss_ebonroc.cpp">
-      <Filter>scripts\eastern_kingdoms\blackwing_lair</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\instance_blackwing_lair.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackwing_lair\boss_firemaw.cpp">
-      <Filter>scripts\eastern_kingdoms\blackwing_lair</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_baron_geddon.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\molten_core</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackwing_lair\boss_flamegor.cpp">
-      <Filter>scripts\eastern_kingdoms\blackwing_lair</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_garr.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\molten_core</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackwing_lair\boss_nefarian.cpp">
-      <Filter>scripts\eastern_kingdoms\blackwing_lair</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_gehennas.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\molten_core</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackwing_lair\boss_razorgore.cpp">
-      <Filter>scripts\eastern_kingdoms\blackwing_lair</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_golemagg.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\molten_core</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackwing_lair\boss_vaelastrasz.cpp">
-      <Filter>scripts\eastern_kingdoms\blackwing_lair</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_lucifron.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\molten_core</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackwing_lair\boss_victor_nefarius.cpp">
-      <Filter>scripts\eastern_kingdoms\blackwing_lair</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_magmadar.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\molten_core</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\blackwing_lair\instance_blackwing_lair.cpp">
-      <Filter>scripts\eastern_kingdoms\blackwing_lair</Filter>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_majordomo_executus.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\molten_core</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_ragnaros.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\molten_core</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_shazzrah.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\molten_core</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_sulfuron_harbinger.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\molten_core</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\instance_molten_core.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\molten_core</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\molten_core.cpp">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\molten_core</Filter>
     </ClCompile>
     <ClCompile Include="..\scripts\eastern_kingdoms\deadmines\boss_mr_smite.cpp">
       <Filter>scripts\eastern_kingdoms\deadmines</Filter>
@@ -516,6 +670,21 @@
     <ClCompile Include="..\scripts\eastern_kingdoms\gnomeregan\instance_gnomeregan.cpp">
       <Filter>scripts\eastern_kingdoms\gnomeregan</Filter>
     </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\grim_batol\boss_drahga_shadowburner.cpp">
+      <Filter>scripts\eastern_kingdoms\grim_batol</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\grim_batol\boss_erudax.cpp">
+      <Filter>scripts\eastern_kingdoms\grim_batol</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\grim_batol\boss_forgemaster_throngus.cpp">
+      <Filter>scripts\eastern_kingdoms\grim_batol</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\grim_batol\boss_general_umbriss.cpp">
+      <Filter>scripts\eastern_kingdoms\grim_batol</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\grim_batol\instance_grim_batol.cpp">
+      <Filter>scripts\eastern_kingdoms\grim_batol</Filter>
+    </ClCompile>
     <ClCompile Include="..\scripts\eastern_kingdoms\karazhan\boss_curator.cpp">
       <Filter>scripts\eastern_kingdoms\karazhan</Filter>
     </ClCompile>
@@ -573,42 +742,6 @@
     <ClCompile Include="..\scripts\eastern_kingdoms\magisters_terrace\magisters_terrace.cpp">
       <Filter>scripts\eastern_kingdoms\magisters_terrace</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\boss_baron_geddon.cpp">
-      <Filter>scripts\eastern_kingdoms\molten_core</Filter>
-    </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\boss_garr.cpp">
-      <Filter>scripts\eastern_kingdoms\molten_core</Filter>
-    </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\boss_gehennas.cpp">
-      <Filter>scripts\eastern_kingdoms\molten_core</Filter>
-    </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\boss_golemagg.cpp">
-      <Filter>scripts\eastern_kingdoms\molten_core</Filter>
-    </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\boss_lucifron.cpp">
-      <Filter>scripts\eastern_kingdoms\molten_core</Filter>
-    </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\boss_magmadar.cpp">
-      <Filter>scripts\eastern_kingdoms\molten_core</Filter>
-    </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\boss_majordomo_executus.cpp">
-      <Filter>scripts\eastern_kingdoms\molten_core</Filter>
-    </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\boss_ragnaros.cpp">
-      <Filter>scripts\eastern_kingdoms\molten_core</Filter>
-    </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\boss_shazzrah.cpp">
-      <Filter>scripts\eastern_kingdoms\molten_core</Filter>
-    </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\boss_sulfuron_harbinger.cpp">
-      <Filter>scripts\eastern_kingdoms\molten_core</Filter>
-    </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\instance_molten_core.cpp">
-      <Filter>scripts\eastern_kingdoms\molten_core</Filter>
-    </ClCompile>
-    <ClCompile Include="..\scripts\eastern_kingdoms\molten_core\molten_core.cpp">
-      <Filter>scripts\eastern_kingdoms\molten_core</Filter>
-    </ClCompile>
     <ClCompile Include="..\scripts\eastern_kingdoms\scarlet_enclave\ebon_hold.cpp">
       <Filter>scripts\eastern_kingdoms\scarlet_enclave</Filter>
     </ClCompile>
@@ -738,6 +871,21 @@
     <ClCompile Include="..\scripts\eastern_kingdoms\sunwell_plateau\instance_sunwell_plateau.cpp">
       <Filter>scripts\eastern_kingdoms\sunwell_plateau</Filter>
     </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\throne_of_the_tides\boss_commander_ulthok.cpp">
+      <Filter>scripts\eastern_kingdoms\throne_of_the_tides</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\throne_of_the_tides\boss_erunak_and_ghursha.cpp">
+      <Filter>scripts\eastern_kingdoms\throne_of_the_tides</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\throne_of_the_tides\boss_lady_nazjar.cpp">
+      <Filter>scripts\eastern_kingdoms\throne_of_the_tides</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\throne_of_the_tides\boss_ozumat.cpp">
+      <Filter>scripts\eastern_kingdoms\throne_of_the_tides</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\eastern_kingdoms\throne_of_the_tides\instance_throne_of_the_tides.cpp">
+      <Filter>scripts\eastern_kingdoms\throne_of_the_tides</Filter>
+    </ClCompile>
     <ClCompile Include="..\scripts\eastern_kingdoms\uldaman\boss_archaedas.cpp">
       <Filter>scripts\eastern_kingdoms\uldaman</Filter>
     </ClCompile>
@@ -858,9 +1006,15 @@
     <ClCompile Include="..\scripts\kalimdor\feralas.cpp">
       <Filter>scripts\kalimdor</Filter>
     </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\molten_front.cpp">
+      <Filter>scripts\kalimdor</Filter>
+    </ClCompile>
     <ClCompile Include="..\scripts\kalimdor\moonglade.cpp">
       <Filter>scripts\kalimdor</Filter>
     </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\mount_hyjal.cpp">
+      <Filter>scripts\kalimdor</Filter>
+    </ClCompile>
     <ClCompile Include="..\scripts\kalimdor\mulgore.cpp">
       <Filter>scripts\kalimdor</Filter>
     </ClCompile>
@@ -888,6 +1042,9 @@
     <ClCompile Include="..\scripts\kalimdor\thunder_bluff.cpp">
       <Filter>scripts\kalimdor</Filter>
     </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\uldum.cpp">
+      <Filter>scripts\kalimdor</Filter>
+    </ClCompile>
     <ClCompile Include="..\scripts\kalimdor\ungoro_crater.cpp">
       <Filter>scripts\kalimdor</Filter>
     </ClCompile>
@@ -918,17 +1075,62 @@
     <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dark_portal\instance_dark_portal.cpp">
       <Filter>scripts\kalimdor\caverns_of_time\dark_portal</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hyjal\boss_archimonde.cpp">
-      <Filter>scripts\kalimdor\caverns_of_time\hyjal</Filter>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_deathwing.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\dragon_soul</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_hagara.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\dragon_soul</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_morchok.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\dragon_soul</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_ultraxion.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\dragon_soul</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_warlord_zonozz.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\dragon_soul</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_warmaster_blackhorn.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\dragon_soul</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_yorsahj.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\dragon_soul</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dragon_soul\dragon_soul.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\dragon_soul</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\dragon_soul\instance_dragon_soul.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\dragon_soul</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\end_of_time\end_of_time.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\end_of_time</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\end_of_time\instance_end_of_time.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\end_of_time</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hour_of_twilight\boss_archbishop_benedictus.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\hour_of_twilight</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hour_of_twilight\boss_arcurion.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\hour_of_twilight</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hour_of_twilight\boss_asira_dawnslayer.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\hour_of_twilight</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hour_of_twilight\instance_hour_of_twilight.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\hour_of_twilight</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hyjal_summit\boss_archimonde.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\hyjal_summit</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hyjal\hyjal.cpp">
-      <Filter>scripts\kalimdor\caverns_of_time\hyjal</Filter>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hyjal_summit\hyjal.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\hyjal_summit</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hyjal\hyjalAI.cpp">
-      <Filter>scripts\kalimdor\caverns_of_time\hyjal</Filter>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hyjal_summit\hyjalAI.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\hyjal_summit</Filter>
     </ClCompile>
-    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hyjal\instance_hyjal.cpp">
-      <Filter>scripts\kalimdor\caverns_of_time\hyjal</Filter>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\hyjal_summit\instance_hyjal.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\hyjal_summit</Filter>
     </ClCompile>
     <ClCompile Include="..\scripts\kalimdor\caverns_of_time\old_hillsbrad\boss_captain_skarloc.cpp">
       <Filter>scripts\kalimdor\caverns_of_time\old_hillsbrad</Filter>
@@ -945,12 +1147,63 @@
     <ClCompile Include="..\scripts\kalimdor\caverns_of_time\old_hillsbrad\old_hillsbrad.cpp">
       <Filter>scripts\kalimdor\caverns_of_time\old_hillsbrad</Filter>
     </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\well_of_eternity\boss_mannoroth_and_varothen.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\well_of_eternity</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\well_of_eternity\boss_perotharn.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\well_of_eternity</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\well_of_eternity\boss_queen_azshara.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\well_of_eternity</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\caverns_of_time\well_of_eternity\instance_well_of_eternity.cpp">
+      <Filter>scripts\kalimdor\caverns_of_time\well_of_eternity</Filter>
+    </ClCompile>
     <ClCompile Include="..\scripts\kalimdor\dire_maul\dire_maul.cpp">
       <Filter>scripts\kalimdor\dire_maul</Filter>
     </ClCompile>
     <ClCompile Include="..\scripts\kalimdor\dire_maul\instance_dire_maul.cpp">
       <Filter>scripts\kalimdor\dire_maul</Filter>
     </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\firelands\boss_alysrazor.cpp">
+      <Filter>scripts\kalimdor\firelands</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\firelands\boss_baleroc.cpp">
+      <Filter>scripts\kalimdor\firelands</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\firelands\boss_bethtilac.cpp">
+      <Filter>scripts\kalimdor\firelands</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\firelands\boss_lord_rhyolith.cpp">
+      <Filter>scripts\kalimdor\firelands</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\firelands\boss_majordomo_staghelm.cpp">
+      <Filter>scripts\kalimdor\firelands</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\firelands\boss_ragnaros_firelands.cpp">
+      <Filter>scripts\kalimdor\firelands</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\firelands\boss_shannox.cpp">
+      <Filter>scripts\kalimdor\firelands</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\firelands\instance_firelands.cpp">
+      <Filter>scripts\kalimdor\firelands</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\lost_city_of_tolvir\boss_general_husam.cpp">
+      <Filter>scripts\kalimdor\lost_city_of_tolvir</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\lost_city_of_tolvir\boss_lockmaw.cpp">
+      <Filter>scripts\kalimdor\lost_city_of_tolvir</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\lost_city_of_tolvir\boss_prophet_barim.cpp">
+      <Filter>scripts\kalimdor\lost_city_of_tolvir</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\lost_city_of_tolvir\boss_siamat.cpp">
+      <Filter>scripts\kalimdor\lost_city_of_tolvir</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\lost_city_of_tolvir\instance_lost_city_of_tolvir.cpp">
+      <Filter>scripts\kalimdor\lost_city_of_tolvir</Filter>
+    </ClCompile>
     <ClCompile Include="..\scripts\kalimdor\maraudon\boss_celebras_the_cursed.cpp">
       <Filter>scripts\kalimdor\maraudon</Filter>
     </ClCompile>
@@ -1038,6 +1291,27 @@
     <ClCompile Include="..\scripts\kalimdor\temple_of_ahnqiraj\mob_anubisath_sentinel.cpp">
       <Filter>scripts\kalimdor\temple_of_ahnqiraj</Filter>
     </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\throne_of_the_four_winds\boss_alakir.cpp">
+      <Filter>scripts\kalimdor\throne_of_the_four_winds</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\throne_of_the_four_winds\conclave_of_the_wind.cpp">
+      <Filter>scripts\kalimdor\throne_of_the_four_winds</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\throne_of_the_four_winds\instance_throne_of_the_four_winds.cpp">
+      <Filter>scripts\kalimdor\throne_of_the_four_winds</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\vortex_pinnacle\boss_altairus.cpp">
+      <Filter>scripts\kalimdor\vortex_pinnacle</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\vortex_pinnacle\boss_asaad.cpp">
+      <Filter>scripts\kalimdor\vortex_pinnacle</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\vortex_pinnacle\boss_grand_vizier_ertan.cpp">
+      <Filter>scripts\kalimdor\vortex_pinnacle</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\kalimdor\vortex_pinnacle\instance_vortex_pinnacle.cpp">
+      <Filter>scripts\kalimdor\vortex_pinnacle</Filter>
+    </ClCompile>
     <ClCompile Include="..\scripts\kalimdor\wailing_caverns\instance_wailing_caverns.cpp">
       <Filter>scripts\kalimdor\wailing_caverns</Filter>
     </ClCompile>
@@ -1053,6 +1327,30 @@
     <ClCompile Include="..\scripts\kalimdor\zulfarrak\zulfarrak.cpp">
       <Filter>scripts\kalimdor\zulfarrak</Filter>
     </ClCompile>
+    <ClCompile Include="..\scripts\maelstrom\deepholm.cpp">
+      <Filter>scripts\maelstrom</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\maelstrom\kezan.cpp">
+      <Filter>scripts\maelstrom</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\maelstrom\lost_isles.cpp">
+      <Filter>scripts\maelstrom</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\maelstrom\stonecore\boss_corborus.cpp">
+      <Filter>scripts\maelstrom\stonecore</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\maelstrom\stonecore\boss_ozruk.cpp">
+      <Filter>scripts\maelstrom\stonecore</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\maelstrom\stonecore\boss_priestess_azil.cpp">
+      <Filter>scripts\maelstrom\stonecore</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\maelstrom\stonecore\boss_slabhide.cpp">
+      <Filter>scripts\maelstrom\stonecore</Filter>
+    </ClCompile>
+    <ClCompile Include="..\scripts\maelstrom\stonecore\instance_stonecore.cpp">
+      <Filter>scripts\maelstrom\stonecore</Filter>
+    </ClCompile>
     <ClCompile Include="..\scripts\northrend\borean_tundra.cpp">
       <Filter>scripts\northrend</Filter>
     </ClCompile>
@@ -1785,14 +2083,26 @@
     <ClInclude Include="..\base\pet_ai.h">
       <Filter>base</Filter>
     </ClInclude>
-    <ClInclude Include="..\scripts\eastern_kingdoms\blackrock_depths\blackrock_depths.h">
-      <Filter>scripts\eastern_kingdoms\blackrock_depths</Filter>
+    <ClInclude Include="..\scripts\eastern_kingdoms\bastion_of_twilight\bastion_of_twilight.h">
+      <Filter>scripts\eastern_kingdoms\bastion_of_twilight</Filter>
+    </ClInclude>
+    <ClInclude Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\blackrock_caverns.h">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns</Filter>
+    </ClInclude>
+    <ClInclude Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\blackrock_depths.h">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths</Filter>
+    </ClInclude>
+    <ClInclude Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\blackrock_spire.h">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire</Filter>
+    </ClInclude>
+    <ClInclude Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\blackwing_descent.h">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent</Filter>
     </ClInclude>
-    <ClInclude Include="..\scripts\eastern_kingdoms\blackrock_spire\blackrock_spire.h">
-      <Filter>scripts\eastern_kingdoms\blackrock_spire</Filter>
+    <ClInclude Include="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\blackwing_lair.h">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair</Filter>
     </ClInclude>
-    <ClInclude Include="..\scripts\eastern_kingdoms\blackwing_lair\blackwing_lair.h">
-      <Filter>scripts\eastern_kingdoms\blackwing_lair</Filter>
+    <ClInclude Include="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\molten_core.h">
+      <Filter>scripts\eastern_kingdoms\blackrock_mountain\molten_core</Filter>
     </ClInclude>
     <ClInclude Include="..\scripts\eastern_kingdoms\deadmines\deadmines.h">
       <Filter>scripts\eastern_kingdoms\deadmines</Filter>
@@ -1800,15 +2110,15 @@
     <ClInclude Include="..\scripts\eastern_kingdoms\gnomeregan\gnomeregan.h">
       <Filter>scripts\eastern_kingdoms\gnomeregan</Filter>
     </ClInclude>
+    <ClInclude Include="..\scripts\eastern_kingdoms\grim_batol\grim_batol.h">
+      <Filter>scripts\eastern_kingdoms\grim_batol</Filter>
+    </ClInclude>
     <ClInclude Include="..\scripts\eastern_kingdoms\karazhan\karazhan.h">
       <Filter>scripts\eastern_kingdoms\karazhan</Filter>
     </ClInclude>
     <ClInclude Include="..\scripts\eastern_kingdoms\magisters_terrace\magisters_terrace.h">
       <Filter>scripts\eastern_kingdoms\magisters_terrace</Filter>
     </ClInclude>
-    <ClInclude Include="..\scripts\eastern_kingdoms\molten_core\molten_core.h">
-      <Filter>scripts\eastern_kingdoms\molten_core</Filter>
-    </ClInclude>
     <ClInclude Include="..\scripts\eastern_kingdoms\scarlet_monastery\scarlet_monastery.h">
       <Filter>scripts\eastern_kingdoms\scarlet_monastery</Filter>
     </ClInclude>
@@ -1827,6 +2137,9 @@
     <ClInclude Include="..\scripts\eastern_kingdoms\sunwell_plateau\sunwell_plateau.h">
       <Filter>scripts\eastern_kingdoms\sunwell_plateau</Filter>
     </ClInclude>
+    <ClInclude Include="..\scripts\eastern_kingdoms\throne_of_the_tides\throne_of_the_tides.h">
+      <Filter>scripts\eastern_kingdoms\throne_of_the_tides</Filter>
+    </ClInclude>
     <ClInclude Include="..\scripts\eastern_kingdoms\uldaman\uldaman.h">
       <Filter>scripts\eastern_kingdoms\uldaman</Filter>
     </ClInclude>
@@ -1845,18 +2158,36 @@
     <ClInclude Include="..\scripts\kalimdor\caverns_of_time\dark_portal\dark_portal.h">
       <Filter>scripts\kalimdor\caverns_of_time\dark_portal</Filter>
     </ClInclude>
-    <ClInclude Include="..\scripts\kalimdor\caverns_of_time\hyjal\hyjal.h">
-      <Filter>scripts\kalimdor\caverns_of_time\hyjal</Filter>
+    <ClInclude Include="..\scripts\kalimdor\caverns_of_time\dragon_soul\dragon_soul.h">
+      <Filter>scripts\kalimdor\caverns_of_time\dragon_soul</Filter>
+    </ClInclude>
+    <ClInclude Include="..\scripts\kalimdor\caverns_of_time\end_of_time\end_of_time.h">
+      <Filter>scripts\kalimdor\caverns_of_time\end_of_time</Filter>
+    </ClInclude>
+    <ClInclude Include="..\scripts\kalimdor\caverns_of_time\hour_of_twilight\hour_of_twilight.h">
+      <Filter>scripts\kalimdor\caverns_of_time\hour_of_twilight</Filter>
+    </ClInclude>
+    <ClInclude Include="..\scripts\kalimdor\caverns_of_time\hyjal_summit\hyjal.h">
+      <Filter>scripts\kalimdor\caverns_of_time\hyjal_summit</Filter>
     </ClInclude>
-    <ClInclude Include="..\scripts\kalimdor\caverns_of_time\hyjal\hyjalAI.h">
-      <Filter>scripts\kalimdor\caverns_of_time\hyjal</Filter>
+    <ClInclude Include="..\scripts\kalimdor\caverns_of_time\hyjal_summit\hyjalAI.h">
+      <Filter>scripts\kalimdor\caverns_of_time\hyjal_summit</Filter>
     </ClInclude>
     <ClInclude Include="..\scripts\kalimdor\caverns_of_time\old_hillsbrad\old_hillsbrad.h">
       <Filter>scripts\kalimdor\caverns_of_time\old_hillsbrad</Filter>
     </ClInclude>
+    <ClInclude Include="..\scripts\kalimdor\caverns_of_time\well_of_eternity\well_of_eternity.h">
+      <Filter>scripts\kalimdor\caverns_of_time\well_of_eternity</Filter>
+    </ClInclude>
     <ClInclude Include="..\scripts\kalimdor\dire_maul\dire_maul.h">
       <Filter>scripts\kalimdor\dire_maul</Filter>
     </ClInclude>
+    <ClInclude Include="..\scripts\kalimdor\firelands\firelands.h">
+      <Filter>scripts\kalimdor\firelands</Filter>
+    </ClInclude>
+    <ClInclude Include="..\scripts\kalimdor\lost_city_of_tolvir\lost_city_of_tolvir.h">
+      <Filter>scripts\kalimdor\lost_city_of_tolvir</Filter>
+    </ClInclude>
     <ClInclude Include="..\scripts\kalimdor\onyxias_lair\onyxias_lair.h">
       <Filter>scripts\kalimdor\onyxias_lair</Filter>
     </ClInclude>
@@ -1869,12 +2200,21 @@
     <ClInclude Include="..\scripts\kalimdor\temple_of_ahnqiraj\temple_of_ahnqiraj.h">
       <Filter>scripts\kalimdor\temple_of_ahnqiraj</Filter>
     </ClInclude>
+     <ClInclude Include="..\scripts\kalimdor\throne_of_the_four_winds\throne_of_the_four_winds.h">
+      <Filter>scripts\kalimdor\throne_of_the_four_winds</Filter>
+    </ClInclude>
+     <ClInclude Include="..\scripts\kalimdor\vortex_pinnacle\vortex_pinnacle.h">
+      <Filter>scripts\kalimdor\vortex_pinnacle</Filter>
+    </ClInclude>
     <ClInclude Include="..\scripts\kalimdor\wailing_caverns\wailing_caverns.h">
       <Filter>scripts\kalimdor\wailing_caverns</Filter>
     </ClInclude>
     <ClInclude Include="..\scripts\kalimdor\zulfarrak\zulfarrak.h">
       <Filter>scripts\kalimdor\zulfarrak</Filter>
     </ClInclude>
+    <ClInclude Include="..\scripts\maelstrom\stonecore\stonecore.h">
+      <Filter>scripts\maelstrom\stonecore</Filter>
+    </ClInclude>
     <ClInclude Include="..\scripts\northrend\azjol-nerub\ahnkahet\ahnkahet.h">
       <Filter>scripts\northrend\azjol-nerub\ahnkahet</Filter>
     </ClInclude>
diff --git a/VC80/80ScriptDev2.vcproj b/VC80/80ScriptDev2.vcproj
index 7d4a32b..0bff92c 100644
--- a/VC80/80ScriptDev2.vcproj
+++ b/VC80/80ScriptDev2.vcproj
@@ -449,6 +449,14 @@
 					>
 				</File>
 				<File
+					RelativePath="..\scripts\eastern_kingdoms\gilneas.cpp"
+					>
+				</File>
+				<File
+					RelativePath="..\scripts\eastern_kingdoms\gilneas_city.cpp"
+					>
+				</File>
+				<File
 					RelativePath="..\scripts\eastern_kingdoms\hinterlands.cpp"
 					>
 				</File>
@@ -497,10 +505,18 @@
 					>
 				</File>
 				<File
+					RelativePath="..\scripts\eastern_kingdoms\twilight_highlands.cpp"
+					>
+				</File>
+				<File
 					RelativePath="..\scripts\eastern_kingdoms\undercity.cpp"
 					>
 				</File>
 				<File
+					RelativePath="..\scripts\eastern_kingdoms\vashjir.cpp"
+					>
+				</File>
+				<File
 					RelativePath="..\scripts\eastern_kingdoms\western_plaguelands.cpp"
 					>
 				</File>
@@ -513,168 +529,328 @@
 					>
 				</File>
 				<Filter
-					Name="blackrock_depths"
+					Name="bastion_of_twilight"
 					>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\blackrock_depths.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\blackrock_depths.h"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\boss_ambassador_flamelash.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\boss_anubshiah.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\boss_coren_direbrew.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\boss_emperor_dagran_thaurissan.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\boss_general_angerforge.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\bastion_of_twilight\ascendant_council.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\boss_gorosh_the_dervish.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\bastion_of_twilight\bastion_of_twilight.h"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\boss_grizzle.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\bastion_of_twilight\boss_chogall.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\boss_high_interrogator_gerstahn.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\bastion_of_twilight\boss_halfus_wyrmbreaker.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\boss_magmus.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\bastion_of_twilight\boss_sinestra.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\boss_tomb_of_seven.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\bastion_of_twilight\boss_valiona_and_theralion.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\instance_blackrock_depths.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\bastion_of_twilight\instance_bastion_of_twilight.cpp"
 						>
 					</File>
 				</Filter>
 				<Filter
-					Name="blackrock_spire"
+					Name="blackrock_mountain"
 					>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_drakkisath.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_gyth.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_halycon.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_highlord_omokk.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_mother_smolderweb.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_overlord_wyrmthalak.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_pyroguard_emberseer.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_quartermaster_zigris.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_rend_blackhand.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_shadow_hunter_voshgajin.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_the_beast.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_warmaster_voone.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\instance_blackrock_spire.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\blackrock_spire.h"
-						>
-					</File>
-				</Filter>
-				<Filter
-					Name="blackwing_lair"
-					>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\blackwing_lair.h"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\boss_broodlord_lashlayer.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\boss_chromaggus.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\boss_ebonroc.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\boss_firemaw.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\boss_flamegor.cpp"
+					<Filter
+						Name="blackrock_caverns"
 						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\boss_nefarian.cpp"
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\blackrock_caverns.h"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\boss_beauty.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\boss_corla.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\boss_karsh_steelbender.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\boss_lord_obsidius.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\boss_romogg.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\instance_blackrock_caverns.cpp"
+							>
+						</File>
+					</Filter>
+					<Filter
+						Name="blackrock_depths"
 						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\boss_razorgore.cpp"
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\blackrock_depths.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\blackrock_depths.h"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_ambassador_flamelash.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_anubshiah.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_coren_direbrew.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_emperor_dagran_thaurissan.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_general_angerforge.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_gorosh_the_dervish.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_grizzle.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_high_interrogator_gerstahn.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_magmus.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_tomb_of_seven.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\instance_blackrock_depths.cpp"
+							>
+						</File>
+					</Filter>
+					<Filter
+						Name="blackrock_spire"
 						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\boss_vaelastrasz.cpp"
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_drakkisath.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_gyth.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_halycon.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_highlord_omokk.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_mother_smolderweb.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_overlord_wyrmthalak.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_pyroguard_emberseer.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_quartermaster_zigris.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_rend_blackhand.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_shadow_hunter_voshgajin.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_the_beast.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_warmaster_voone.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\instance_blackrock_spire.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\blackrock_spire.h"
+							>
+						</File>
+					</Filter>
+					<Filter
+						Name="blackwing_descent"
 						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\boss_victor_nefarius.cpp"
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\blackwing_descent.h"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\boss_atramedes.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\boss_chimaeron.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\boss_magmaw.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\boss_maloriak.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\boss_nefarian_descent.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\instance_blackwing_descent.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\omnotron_defense.cpp"
+							>
+						</File>
+					</Filter>
+					<Filter
+						Name="blackwing_lair"
 						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\instance_blackwing_lair.cpp"
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\blackwing_lair.h"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_broodlord_lashlayer.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_chromaggus.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_ebonroc.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_firemaw.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_flamegor.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_nefarian.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_razorgore.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_vaelastrasz.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_victor_nefarius.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\instance_blackwing_lair.cpp"
+							>
+						</File>
+					</Filter>
+					<Filter
+						Name="molten_core"
 						>
-					</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_baron_geddon.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_garr.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_gehennas.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_golemagg.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_lucifron.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_magmadar.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_majordomo_executus.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_ragnaros.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_shazzrah.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_sulfuron_harbinger.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\instance_molten_core.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\molten_core.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\molten_core.h"
+							>
+						</File>
+					</Filter>
 				</Filter>
 				<Filter
 					Name="deadmines"
@@ -717,150 +893,122 @@
 					</File>
 				</Filter>
 				<Filter
-					Name="karazhan"
+					Name="grim_batol"
 					>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_curator.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_maiden_of_virtue.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_midnight.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\grim_batol\boss_drahga_shadowburner.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_moroes.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\grim_batol\boss_erudax.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_netherspite.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\grim_batol\boss_forgemaster_throngus.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_nightbane.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\grim_batol\boss_general_umbriss.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_prince_malchezaar.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\grim_batol\grim_batol.h"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_shade_of_aran.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_terestian_illhoof.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\bosses_opera.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\chess_event.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\instance_karazhan.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\karazhan.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\karazhan.h"
+						RelativePath="..\scripts\eastern_kingdoms\grim_batol\instance_grim_batol.cpp"
 						>
 					</File>
 				</Filter>
 				<Filter
-					Name="magisters_terrace"
+					Name="karazhan"
 					>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\boss_felblood_kaelthas.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_curator.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\boss_priestess_delrissa.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_maiden_of_virtue.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\boss_selin_fireheart.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_midnight.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_moroes.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\boss_vexallus.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_netherspite.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\instance_magisters_terrace.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_nightbane.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\magisters_terrace.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_prince_malchezaar.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\magisters_terrace.h"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_shade_of_aran.cpp"
 						>
 					</File>
-				</Filter>
-				<Filter
-					Name="molten_core"
-					>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\boss_baron_geddon.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_terestian_illhoof.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\boss_garr.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\bosses_opera.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\boss_gehennas.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\chess_event.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\boss_golemagg.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\instance_karazhan.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\boss_lucifron.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\karazhan.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\boss_magmadar.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\karazhan.h"
 						>
 					</File>
+				</Filter>
+				<Filter
+					Name="magisters_terrace"
+					>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\boss_majordomo_executus.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\boss_felblood_kaelthas.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\boss_ragnaros.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\boss_priestess_delrissa.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\boss_shazzrah.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\boss_selin_fireheart.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\boss_sulfuron_harbinger.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\boss_vexallus.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\instance_molten_core.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\instance_magisters_terrace.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\molten_core.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\magisters_terrace.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\molten_core.h"
+						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\magisters_terrace.h"
 						>
 					</File>
 				</Filter>
@@ -1093,6 +1241,34 @@
 					</File>
 				</Filter>
 				<Filter
+					Name="throne_of_the_tides"
+					>
+					<File
+						RelativePath="..\scripts\eastern_kingdoms\throne_of_the_tides\boss_commander_ulthok.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\eastern_kingdoms\throne_of_the_tides\boss_erunak_and_ghursha.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\eastern_kingdoms\throne_of_the_tides\boss_lady_nazjar.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\eastern_kingdoms\throne_of_the_tides\boss_ozumat.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\eastern_kingdoms\throne_of_the_tides\instance_throne_of_the_tides.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\eastern_kingdoms\throne_of_the_tides\throne_of_the_tides.h"
+						>
+					</File>
+				</Filter>
+				<Filter
 					Name="uldaman"
 					>
 					<File
@@ -1285,10 +1461,18 @@
 					>
 				</File>
 				<File
+					RelativePath="..\scripts\kalimdor\molten_front.cpp"
+					>
+				</File>
+				<File
 					RelativePath="..\scripts\kalimdor\moonglade.cpp"
 					>
 				</File>
 				<File
+					RelativePath="..\scripts\kalimdor\mount_hyjal.cpp"
+					>
+				</File>
+				<File
 					RelativePath="..\scripts\kalimdor\mulgore.cpp"
 					>
 				</File>
@@ -1325,6 +1509,10 @@
 					>
 				</File>
 				<File
+					RelativePath="..\scripts\kalimdor\uldum.cpp"
+					>
+				</File>
+				<File
 					RelativePath="..\scripts\kalimdor\ungoro_crater.cpp"
 					>
 				</File>
@@ -1392,30 +1580,114 @@
 						</File>
 					</Filter>
 					<Filter
-						Name="hyjal"
+						Name="dragon_soul"
+						>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_deathwing.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_hagara.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_morchok.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_ultraxion.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_warlord_zonozz.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_warmaster_blackhorn.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_yorsahj.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\dragon_soul\dragon_soul.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\dragon_soul\dragon_soul.h"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\dragon_soul\instance_dragon_soul.cpp"
+							>
+						</File>
+					</Filter>
+					<Filter
+						Name="end_of_time"
+						>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\end_of_time\end_of_time.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\end_of_time\end_of_time.h"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\end_of_time\instance_end_of_time.cpp"
+							>
+						</File>
+					</Filter>
+					<Filter
+						Name="hour_of_twilight"
+						>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hour_of_twilight\boss_archbishop_benedictus.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hour_of_twilight\boss_arcurion.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hour_of_twilight\boss_asira_dawnslayer.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hour_of_twilight\hour_of_twilight.h"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hour_of_twilight\instance_hour_of_twilight.cpp"
+							>
+						</File>
+					</Filter>
+					<Filter
+						Name="hyjal_summit"
 						>
 						<File
-							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal\boss_archimonde.cpp"
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal_summit\boss_archimonde.cpp"
 							>
 						</File>
 						<File
-							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal\hyjal.cpp"
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal_summit\hyjal.cpp"
 							>
 						</File>
 						<File
-							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal\hyjal.h"
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal_summit\hyjal.h"
 							>
 						</File>
 						<File
-							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal\hyjalAI.cpp"
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal_summit\hyjalAI.cpp"
 							>
 						</File>
 						<File
-							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal\hyjalAI.h"
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal_summit\hyjalAI.h"
 							>
 						</File>
 						<File
-							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal\instance_hyjal.cpp"
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal_summit\instance_hyjal.cpp"
 							>
 						</File>
 					</Filter>
@@ -1447,6 +1719,30 @@
 							>
 						</File>
 					</Filter>
+					<Filter
+						Name="well_of_eternity"
+						>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\well_of_eternity\boss_mannoroth_and_varothen.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\well_of_eternity\boss_perotharn.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\well_of_eternity\boss_queen_azshara.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\well_of_eternity\instance_well_of_eternity.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\well_of_eternity\well_of_eternity.h"
+							>
+						</File>
+					</Filter>
 				</Filter>
 				<Filter
 					Name="dire_maul"
@@ -1465,6 +1761,74 @@
 					</File>
 				</Filter>
 				<Filter
+					Name="firelands"
+					>
+					<File
+						RelativePath="..\scripts\kalimdor\firelands\boss_alysrazor.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\firelands\boss_baleroc.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\firelands\boss_bethtilac.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\firelands\boss_lord_rhyolith.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\firelands\boss_majordomo_staghelm.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\firelands\boss_ragnaros_firelands.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\firelands\boss_shannox.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\firelands\firelands.h"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\firelands\instance_firelands.cpp"
+						>
+					</File>
+				</Filter>
+				<Filter
+					Name="lost_city_of_tolvir"
+					>
+					<File
+						RelativePath="..\scripts\kalimdor\lost_city_of_tolvir\boss_general_husam.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\lost_city_of_tolvir\boss_lockmaw.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\lost_city_of_tolvir\boss_prophet_barim.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\lost_city_of_tolvir\boss_siamat.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\lost_city_of_tolvir\instance_lost_city_of_tolvir.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\lost_city_of_tolvir\lost_city_of_tolvir.h"
+						>
+					</File>
+				</Filter>
+				<Filter
 					Name="maraudon"
 					>
 					<File
@@ -1625,6 +1989,50 @@
 					</File>
 				</Filter>
 				<Filter
+					Name="throne_of_the_four_winds"
+					>
+					<File
+						RelativePath="..\scripts\kalimdor\throne_of_the_four_winds\boss_alakir.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\throne_of_the_four_winds\conclave_of_the_wind.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\throne_of_the_four_winds\instance_throne_of_the_four_winds.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\throne_of_the_four_winds\throne_of_the_four_winds.h"
+						>
+					</File>
+				</Filter>
+				<Filter
+					Name="vortex_pinnacle"
+					>
+					<File
+						RelativePath="..\scripts\kalimdor\vortex_pinnacle\boss_altairus.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\vortex_pinnacle\boss_asaad.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\vortex_pinnacle\boss_grand_vizier_ertan.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\vortex_pinnacle\instance_vortex_pinnacle.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\vortex_pinnacle\vortex_pinnacle.h"
+						>
+					</File>
+				</Filter>
+				<Filter
 					Name="wailing_caverns"
 					>
 					<File
@@ -1662,6 +2070,50 @@
 				</Filter>
 			</Filter>
 			<Filter
+				Name="maelstrom"
+				>
+				<File
+					RelativePath="..\scripts\maelstrom\deepholm.cpp"
+					>
+				</File>
+				<File
+					RelativePath="..\scripts\maelstrom\kezan.cpp"
+					>
+				</File>
+				<File
+					RelativePath="..\scripts\maelstrom\lost_isles.cpp"
+					>
+				</File>
+				<Filter
+					Name="stonecore"
+					>
+					<File
+						RelativePath="..\scripts\maelstrom\stonecore\boss_corborus.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\maelstrom\stonecore\boss_ozruk.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\maelstrom\stonecore\boss_priestess_azil.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\maelstrom\stonecore\boss_slabhide.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\maelstrom\stonecore\instance_stonecore.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\maelstrom\stonecore\stonecore.h"
+						>
+					</File>
+				</Filter>
+			</Filter>
+			<Filter
 				Name="northrend"
 				>
 				<File
diff --git a/VC90/90ScriptDev2.vcproj b/VC90/90ScriptDev2.vcproj
index 0631758..2a77c7a 100644
--- a/VC90/90ScriptDev2.vcproj
+++ b/VC90/90ScriptDev2.vcproj
@@ -448,6 +448,14 @@
 					>
 				</File>
 				<File
+					RelativePath="..\scripts\eastern_kingdoms\gilneas.cpp"
+					>
+				</File>
+				<File
+					RelativePath="..\scripts\eastern_kingdoms\gilneas_city.cpp"
+					>
+				</File>
+				<File
 					RelativePath="..\scripts\eastern_kingdoms\hinterlands.cpp"
 					>
 				</File>
@@ -496,10 +504,18 @@
 					>
 				</File>
 				<File
+					RelativePath="..\scripts\eastern_kingdoms\twilight_highlands.cpp"
+					>
+				</File>
+				<File
 					RelativePath="..\scripts\eastern_kingdoms\undercity.cpp"
 					>
 				</File>
 				<File
+					RelativePath="..\scripts\eastern_kingdoms\vashjir.cpp"
+					>
+				</File>
+				<File
 					RelativePath="..\scripts\eastern_kingdoms\western_plaguelands.cpp"
 					>
 				</File>
@@ -512,168 +528,328 @@
 					>
 				</File>
 				<Filter
-					Name="blackrock_depths"
+					Name="bastion_of_twilight"
 					>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\blackrock_depths.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\blackrock_depths.h"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\boss_ambassador_flamelash.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\boss_anubshiah.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\boss_coren_direbrew.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\boss_emperor_dagran_thaurissan.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\boss_general_angerforge.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\bastion_of_twilight\ascendant_council.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\boss_gorosh_the_dervish.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\bastion_of_twilight\bastion_of_twilight.h"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\boss_grizzle.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\bastion_of_twilight\boss_chogall.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\boss_high_interrogator_gerstahn.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\bastion_of_twilight\boss_halfus_wyrmbreaker.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\boss_magmus.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\bastion_of_twilight\boss_sinestra.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\boss_tomb_of_seven.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\bastion_of_twilight\boss_valiona_and_theralion.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_depths\instance_blackrock_depths.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\bastion_of_twilight\instance_bastion_of_twilight.cpp"
 						>
 					</File>
 				</Filter>
 				<Filter
-					Name="blackrock_spire"
+					Name="blackrock_mountain"
 					>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\blackrock_spire.h"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_drakkisath.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_gyth.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_halycon.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_highlord_omokk.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_mother_smolderweb.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_overlord_wyrmthalak.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_pyroguard_emberseer.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_quartermaster_zigris.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_rend_blackhand.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_shadow_hunter_voshgajin.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_the_beast.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\boss_warmaster_voone.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackrock_spire\instance_blackrock_spire.cpp"
-						>
-					</File>
-				</Filter>
-				<Filter
-					Name="blackwing_lair"
-					>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\blackwing_lair.h"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\boss_broodlord_lashlayer.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\boss_chromaggus.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\boss_ebonroc.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\boss_firemaw.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\boss_flamegor.cpp"
+					<Filter
+						Name="blackrock_caverns"
 						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\boss_nefarian.cpp"
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\blackrock_caverns.h"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\boss_beauty.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\boss_corla.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\boss_karsh_steelbender.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\boss_lord_obsidius.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\boss_romogg.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_caverns\instance_blackrock_caverns.cpp"
+							>
+						</File>
+					</Filter>
+					<Filter
+						Name="blackrock_depths"
 						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\boss_razorgore.cpp"
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\blackrock_depths.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\blackrock_depths.h"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_ambassador_flamelash.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_anubshiah.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_coren_direbrew.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_emperor_dagran_thaurissan.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_general_angerforge.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_gorosh_the_dervish.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_grizzle.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_high_interrogator_gerstahn.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_magmus.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\boss_tomb_of_seven.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_depths\instance_blackrock_depths.cpp"
+							>
+						</File>
+					</Filter>
+					<Filter
+						Name="blackrock_spire"
 						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\boss_vaelastrasz.cpp"
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_drakkisath.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_gyth.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_halycon.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_highlord_omokk.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_mother_smolderweb.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_overlord_wyrmthalak.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_pyroguard_emberseer.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_quartermaster_zigris.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_rend_blackhand.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_shadow_hunter_voshgajin.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_the_beast.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\boss_warmaster_voone.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\instance_blackrock_spire.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackrock_spire\blackrock_spire.h"
+							>
+						</File>
+					</Filter>
+					<Filter
+						Name="blackwing_descent"
 						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\boss_victor_nefarius.cpp"
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\blackwing_descent.h"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\boss_atramedes.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\boss_chimaeron.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\boss_magmaw.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\boss_maloriak.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\boss_nefarian_descent.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\instance_blackwing_descent.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_descent\omnotron_defense.cpp"
+							>
+						</File>
+					</Filter>
+					<Filter
+						Name="blackwing_lair"
 						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\blackwing_lair\instance_blackwing_lair.cpp"
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\blackwing_lair.h"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_broodlord_lashlayer.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_chromaggus.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_ebonroc.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_firemaw.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_flamegor.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_nefarian.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_razorgore.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_vaelastrasz.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\boss_victor_nefarius.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\blackwing_lair\instance_blackwing_lair.cpp"
+							>
+						</File>
+					</Filter>
+					<Filter
+						Name="molten_core"
 						>
-					</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_baron_geddon.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_garr.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_gehennas.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_golemagg.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_lucifron.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_magmadar.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_majordomo_executus.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_ragnaros.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_shazzrah.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\boss_sulfuron_harbinger.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\instance_molten_core.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\molten_core.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\eastern_kingdoms\blackrock_mountain\molten_core\molten_core.h"
+							>
+						</File>
+					</Filter>
 				</Filter>
 				<Filter
 					Name="deadmines"
@@ -716,150 +892,122 @@
 					</File>
 				</Filter>
 				<Filter
-					Name="karazhan"
+					Name="grim_batol"
 					>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_curator.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_maiden_of_virtue.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_midnight.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\grim_batol\boss_drahga_shadowburner.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_moroes.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\grim_batol\boss_erudax.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_netherspite.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\grim_batol\boss_forgemaster_throngus.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_nightbane.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\grim_batol\boss_general_umbriss.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_prince_malchezaar.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\grim_batol\grim_batol.h"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_shade_of_aran.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_terestian_illhoof.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\bosses_opera.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\chess_event.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\instance_karazhan.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\karazhan.cpp"
-						>
-					</File>
-					<File
-						RelativePath="..\scripts\eastern_kingdoms\karazhan\karazhan.h"
+						RelativePath="..\scripts\eastern_kingdoms\grim_batol\instance_grim_batol.cpp"
 						>
 					</File>
 				</Filter>
 				<Filter
-					Name="magisters_terrace"
+					Name="karazhan"
 					>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\boss_felblood_kaelthas.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_curator.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\boss_priestess_delrissa.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_maiden_of_virtue.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\boss_selin_fireheart.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_midnight.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_moroes.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\boss_vexallus.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_netherspite.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\instance_magisters_terrace.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_nightbane.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\magisters_terrace.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_prince_malchezaar.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\magisters_terrace.h"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_shade_of_aran.cpp"
 						>
 					</File>
-				</Filter>
-				<Filter
-					Name="molten_core"
-					>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\boss_baron_geddon.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\boss_terestian_illhoof.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\boss_garr.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\bosses_opera.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\boss_gehennas.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\chess_event.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\boss_golemagg.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\instance_karazhan.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\boss_lucifron.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\karazhan.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\boss_magmadar.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\karazhan\karazhan.h"
 						>
 					</File>
+				</Filter>
+				<Filter
+					Name="magisters_terrace"
+					>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\boss_majordomo_executus.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\boss_felblood_kaelthas.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\boss_ragnaros.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\boss_priestess_delrissa.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\boss_shazzrah.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\boss_selin_fireheart.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\boss_sulfuron_harbinger.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\boss_vexallus.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\instance_molten_core.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\instance_magisters_terrace.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\molten_core.cpp"
+						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\magisters_terrace.cpp"
 						>
 					</File>
 					<File
-						RelativePath="..\scripts\eastern_kingdoms\molten_core\molten_core.h"
+						RelativePath="..\scripts\eastern_kingdoms\magisters_terrace\magisters_terrace.h"
 						>
 					</File>
 				</Filter>
@@ -1092,6 +1240,34 @@
 					</File>
 				</Filter>
 				<Filter
+					Name="throne_of_the_tides"
+					>
+					<File
+						RelativePath="..\scripts\eastern_kingdoms\throne_of_the_tides\boss_commander_ulthok.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\eastern_kingdoms\throne_of_the_tides\boss_erunak_and_ghursha.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\eastern_kingdoms\throne_of_the_tides\boss_lady_nazjar.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\eastern_kingdoms\throne_of_the_tides\boss_ozumat.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\eastern_kingdoms\throne_of_the_tides\instance_throne_of_the_tides.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\eastern_kingdoms\throne_of_the_tides\throne_of_the_tides.h"
+						>
+					</File>
+				</Filter>
+				<Filter
 					Name="uldaman"
 					>
 					<File
@@ -1284,10 +1460,18 @@
 					>
 				</File>
 				<File
+					RelativePath="..\scripts\kalimdor\molten_front.cpp"
+					>
+				</File>
+				<File
 					RelativePath="..\scripts\kalimdor\moonglade.cpp"
 					>
 				</File>
 				<File
+					RelativePath="..\scripts\kalimdor\mount_hyjal.cpp"
+					>
+				</File>
+				<File
 					RelativePath="..\scripts\kalimdor\mulgore.cpp"
 					>
 				</File>
@@ -1324,6 +1508,10 @@
 					>
 				</File>
 				<File
+					RelativePath="..\scripts\kalimdor\uldum.cpp"
+					>
+				</File>
+				<File
 					RelativePath="..\scripts\kalimdor\ungoro_crater.cpp"
 					>
 				</File>
@@ -1391,30 +1579,114 @@
 						</File>
 					</Filter>
 					<Filter
-						Name="hyjal"
+						Name="dragon_soul"
+						>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_deathwing.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_hagara.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_morchok.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_ultraxion.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_warlord_zonozz.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_warmaster_blackhorn.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\dragon_soul\boss_yorsahj.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\dragon_soul\dragon_soul.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\dragon_soul\dragon_soul.h"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\dragon_soul\instance_dragon_soul.cpp"
+							>
+						</File>
+					</Filter>
+					<Filter
+						Name="end_of_time"
+						>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\end_of_time\end_of_time.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\end_of_time\end_of_time.h"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\end_of_time\instance_end_of_time.cpp"
+							>
+						</File>
+					</Filter>
+					<Filter
+						Name="hour_of_twilight"
+						>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hour_of_twilight\boss_archbishop_benedictus.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hour_of_twilight\boss_arcurion.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hour_of_twilight\boss_asira_dawnslayer.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hour_of_twilight\hour_of_twilight.h"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hour_of_twilight\instance_hour_of_twilight.cpp"
+							>
+						</File>
+					</Filter>
+					<Filter
+						Name="hyjal_summit"
 						>
 						<File
-							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal\boss_archimonde.cpp"
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal_summit\boss_archimonde.cpp"
 							>
 						</File>
 						<File
-							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal\hyjal.cpp"
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal_summit\hyjal.cpp"
 							>
 						</File>
 						<File
-							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal\hyjal.h"
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal_summit\hyjal.h"
 							>
 						</File>
 						<File
-							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal\hyjalAI.cpp"
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal_summit\hyjalAI.cpp"
 							>
 						</File>
 						<File
-							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal\hyjalAI.h"
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal_summit\hyjalAI.h"
 							>
 						</File>
 						<File
-							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal\instance_hyjal.cpp"
+							RelativePath="..\scripts\kalimdor\caverns_of_time\hyjal_summit\instance_hyjal.cpp"
 							>
 						</File>
 					</Filter>
@@ -1446,6 +1718,30 @@
 							>
 						</File>
 					</Filter>
+					<Filter
+						Name="well_of_eternity"
+						>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\well_of_eternity\boss_mannoroth_and_varothen.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\well_of_eternity\boss_perotharn.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\well_of_eternity\boss_queen_azshara.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\well_of_eternity\instance_well_of_eternity.cpp"
+							>
+						</File>
+						<File
+							RelativePath="..\scripts\kalimdor\caverns_of_time\well_of_eternity\well_of_eternity.h"
+							>
+						</File>
+					</Filter>
 				</Filter>
 				<Filter
 					Name="dire_maul"
@@ -1464,6 +1760,74 @@
 					</File>
 				</Filter>
 				<Filter
+					Name="firelands"
+					>
+					<File
+						RelativePath="..\scripts\kalimdor\firelands\boss_alysrazor.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\firelands\boss_baleroc.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\firelands\boss_bethtilac.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\firelands\boss_lord_rhyolith.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\firelands\boss_majordomo_staghelm.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\firelands\boss_ragnaros_firelands.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\firelands\boss_shannox.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\firelands\firelands.h"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\firelands\instance_firelands.cpp"
+						>
+					</File>
+				</Filter>
+				<Filter
+					Name="lost_city_of_tolvir"
+					>
+					<File
+						RelativePath="..\scripts\kalimdor\lost_city_of_tolvir\boss_general_husam.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\lost_city_of_tolvir\boss_lockmaw.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\lost_city_of_tolvir\boss_prophet_barim.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\lost_city_of_tolvir\boss_siamat.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\lost_city_of_tolvir\instance_lost_city_of_tolvir.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\lost_city_of_tolvir\lost_city_of_tolvir.h"
+						>
+					</File>
+				</Filter>
+				<Filter
 					Name="maraudon"
 					>
 					<File
@@ -1624,6 +1988,50 @@
 					</File>
 				</Filter>
 				<Filter
+					Name="throne_of_the_four_winds"
+					>
+					<File
+						RelativePath="..\scripts\kalimdor\throne_of_the_four_winds\boss_alakir.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\throne_of_the_four_winds\conclave_of_the_wind.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\throne_of_the_four_winds\instance_throne_of_the_four_winds.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\throne_of_the_four_winds\throne_of_the_four_winds.h"
+						>
+					</File>
+				</Filter>
+				<Filter
+					Name="vortex_pinnacle"
+					>
+					<File
+						RelativePath="..\scripts\kalimdor\vortex_pinnacle\boss_altairus.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\vortex_pinnacle\boss_asaad.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\vortex_pinnacle\boss_grand_vizier_ertan.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\vortex_pinnacle\instance_vortex_pinnacle.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\kalimdor\vortex_pinnacle\vortex_pinnacle.h"
+						>
+					</File>
+				</Filter>
+				<Filter
 					Name="wailing_caverns"
 					>
 					<File
@@ -1661,6 +2069,50 @@
 				</Filter>
 			</Filter>
 			<Filter
+				Name="maelstrom"
+				>
+				<File
+					RelativePath="..\scripts\maelstrom\deepholm.cpp"
+					>
+				</File>
+				<File
+					RelativePath="..\scripts\maelstrom\kezan.cpp"
+					>
+				</File>
+				<File
+					RelativePath="..\scripts\maelstrom\lost_isles.cpp"
+					>
+				</File>
+				<Filter
+					Name="stonecore"
+					>
+					<File
+						RelativePath="..\scripts\maelstrom\stonecore\boss_corborus.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\maelstrom\stonecore\boss_ozruk.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\maelstrom\stonecore\boss_priestess_azil.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\maelstrom\stonecore\boss_slabhide.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\maelstrom\stonecore\instance_stonecore.cpp"
+						>
+					</File>
+					<File
+						RelativePath="..\scripts\maelstrom\stonecore\stonecore.h"
+						>
+					</File>
+				</Filter>
+			</Filter>
+			<Filter
 				Name="northrend"
 				>
 				<File
diff --git a/scripts/eastern_kingdoms/bastion_of_twilight/ascendant_council.cpp b/scripts/eastern_kingdoms/bastion_of_twilight/ascendant_council.cpp
new file mode 100644
index 0000000..5669190
--- /dev/null
+++ b/scripts/eastern_kingdoms/bastion_of_twilight/ascendant_council.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: ascendant_council
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Bastion of Twilight
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_ascendant_council()
+{
+}
diff --git a/scripts/eastern_kingdoms/bastion_of_twilight/bastion_of_twilight.h b/scripts/eastern_kingdoms/bastion_of_twilight/bastion_of_twilight.h
new file mode 100644
index 0000000..56a35aa
--- /dev/null
+++ b/scripts/eastern_kingdoms/bastion_of_twilight/bastion_of_twilight.h
@@ -0,0 +1,4 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software licensed under GPL version 2
+ * Please see the included DOCS/LICENSE.TXT for more information */
+ 
\ No newline at end of file
diff --git a/scripts/eastern_kingdoms/bastion_of_twilight/boss_chogall.cpp b/scripts/eastern_kingdoms/bastion_of_twilight/boss_chogall.cpp
new file mode 100644
index 0000000..7a389c1
--- /dev/null
+++ b/scripts/eastern_kingdoms/bastion_of_twilight/boss_chogall.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_chogall
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Bastion of Twilight
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_chogall()
+{
+}
diff --git a/scripts/eastern_kingdoms/bastion_of_twilight/boss_halfus_wyrmbreaker.cpp b/scripts/eastern_kingdoms/bastion_of_twilight/boss_halfus_wyrmbreaker.cpp
new file mode 100644
index 0000000..053697b
--- /dev/null
+++ b/scripts/eastern_kingdoms/bastion_of_twilight/boss_halfus_wyrmbreaker.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_halfus_wyrmbreaker
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Bastion of Twilight
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_halfus_wyrmbreaker()
+{
+}
diff --git a/scripts/eastern_kingdoms/bastion_of_twilight/boss_sinestra.cpp b/scripts/eastern_kingdoms/bastion_of_twilight/boss_sinestra.cpp
new file mode 100644
index 0000000..2a99ac6
--- /dev/null
+++ b/scripts/eastern_kingdoms/bastion_of_twilight/boss_sinestra.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_sinestra
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Bastion of Twilight
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_sinestra()
+{
+}
diff --git a/scripts/eastern_kingdoms/bastion_of_twilight/boss_valiona_and_theralion.cpp b/scripts/eastern_kingdoms/bastion_of_twilight/boss_valiona_and_theralion.cpp
new file mode 100644
index 0000000..df8596e
--- /dev/null
+++ b/scripts/eastern_kingdoms/bastion_of_twilight/boss_valiona_and_theralion.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_valiona_and_theralion
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Bastion of Twilight
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_valiona_and_theralion()
+{
+}
diff --git a/scripts/eastern_kingdoms/bastion_of_twilight/instance_bastion_of_twilight.cpp b/scripts/eastern_kingdoms/bastion_of_twilight/instance_bastion_of_twilight.cpp
new file mode 100644
index 0000000..b475c7c
--- /dev/null
+++ b/scripts/eastern_kingdoms/bastion_of_twilight/instance_bastion_of_twilight.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: instance_bastion_of_twilight
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Bastion of Twilight
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_instance_bastion_of_twilight()
+{
+}
diff --git a/scripts/eastern_kingdoms/blackrock_depths/blackrock_depths.cpp b/scripts/eastern_kingdoms/blackrock_depths/blackrock_depths.cpp
deleted file mode 100644
index 60e01df..0000000
--- a/scripts/eastern_kingdoms/blackrock_depths/blackrock_depths.cpp
+++ /dev/null
@@ -1,858 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Blackrock_Depths
-SD%Complete: 80
-SDComment: Quest support: 4001, 4342, 7604, 9015. Vendor Lokhtos Darkbargainer.
-SDCategory: Blackrock Depths
-EndScriptData */
-
-/* ContentData
-go_shadowforge_brazier
-go_relic_coffer_door
-at_ring_of_law
-npc_grimstone
-mob_phalanx
-npc_kharan_mighthammer
-npc_lokhtos_darkbargainer
-EndContentData */
-
-#include "precompiled.h"
-#include "blackrock_depths.h"
-#include "escort_ai.h"
-
-/*######
-## go_shadowforge_brazier
-######*/
-
-bool GOUse_go_shadowforge_brazier(Player* pPlayer, GameObject* pGo)
-{
-    if (ScriptedInstance* pInstance = (ScriptedInstance*)pGo->GetInstanceData())
-    {
-        if (pInstance->GetData(TYPE_LYCEUM) == IN_PROGRESS)
-            pInstance->SetData(TYPE_LYCEUM, DONE);
-        else
-            pInstance->SetData(TYPE_LYCEUM, IN_PROGRESS);
-    }
-    return false;
-}
-
-/*######
-## go_relic_coffer_door
-######*/
-
-bool GOUse_go_relic_coffer_door(Player* pPlayer, GameObject* pGo)
-{
-    if (ScriptedInstance* pInstance = (ScriptedInstance*)pGo->GetInstanceData())
-    {
-        // check if the event is already done
-        if (pInstance->GetData(TYPE_VAULT) != DONE && pInstance->GetData(TYPE_VAULT) != IN_PROGRESS)
-            pInstance->SetData(TYPE_VAULT, SPECIAL);
-    }
-
-    return false;
-}
-
-/*######
-## npc_grimstone
-######*/
-
-/* Notes about this event:
- * Visual: Npc Grimstone should use some visual spell when appear/ disappear / opening/ closing doors
- * Texts: The texts and their positions need confirmation
- * Event timer might also need adjustment
- * Quest-Event: This needs to be clearified - there is some suggestion, that Theldren&Adds also might come as first wave.
- */
-
-enum
-{
-    SAY_START_1                     = -1230004,
-    SAY_START_2                     = -1230005,
-    SAY_OPEN_EAST_GATE              = -1230006,
-    SAY_SUMMON_BOSS_1               = -1230007,
-    SAY_SUMMON_BOSS_2               = -1230008,
-    SAY_OPEN_NORTH_GATE             = -1230009,
-
-    NPC_GRIMSTONE                   = 10096,
-    DATA_BANNER_BEFORE_EVENT        = 5,
-
-    //4 or 6 in total? 1+2+1 / 2+2+2 / 3+3. Depending on this, code should be changed.
-    MAX_MOB_AMOUNT                  = 4,
-    MAX_THELDREN_ADDS               = 4,
-    MAX_POSSIBLE_THELDREN_ADDS      = 8,
-
-    SPELL_SUMMON_THELRIN_DND        = 27517,
-    /* Other spells used by Grimstone
-    SPELL_ASHCROMBES_TELEPORT_A     = 15742
-    SPELL_ASHCROMBES_TELEPORT_B     = 6422,
-    SPELL_ARENA_FLASH_A             = 15737,
-    SPELL_ARENA_FLASH_B             = 15739,
-    */
-
-    QUEST_THE_CHALLENGE             = 9015,
-    NPC_THELDREN_QUEST_CREDIT       = 16166,
-};
-
-enum SpawnPosition
-{
-    POS_EAST                        = 0,
-    POS_NORTH                       = 1,
-    POS_GRIMSTONE                   = 2,
-};
-
-static const float aSpawnPositions[3][4] =
-{
-    {608.960f, -235.322f, -53.907f, 1.857f},                // Ring mob spawn position
-    {644.300f, -175.989f, -53.739f, 3.418f},                // Ring boss spawn position
-    {625.559f, -205.618f, -52.735f, 2.609f}                 // Grimstone spawn position
-};
-
-static const uint32 aGladiator[MAX_POSSIBLE_THELDREN_ADDS] = {NPC_LEFTY, NPC_ROTFANG, NPC_SNOKH, NPC_MALGEN, NPC_KORV, NPC_REZZNIK, NPC_VAJASHNI, NPC_VOLIDA};
-static const uint32 aRingMob[] = {NPC_WORM, NPC_STINGER, NPC_SCREECHER, NPC_THUNDERSNOUT, NPC_CREEPER, NPC_BEETLE};
-static const uint32 aRingBoss[] = {NPC_GOROSH, NPC_GRIZZLE, NPC_EVISCERATOR, NPC_OKTHOR, NPC_ANUBSHIAH, NPC_HEDRUM};
-
-enum Phases
-{
-    PHASE_MOBS                      = 0,
-    PHASE_BOSS                      = 2,
-    PHASE_GLADIATORS                = 3,
-};
-
-bool AreaTrigger_at_ring_of_law(Player* pPlayer, AreaTriggerEntry const* pAt)
-{
-    if (instance_blackrock_depths* pInstance = (instance_blackrock_depths*)pPlayer->GetInstanceData())
-    {
-        if (pInstance->GetData(TYPE_RING_OF_LAW) == IN_PROGRESS || pInstance->GetData(TYPE_RING_OF_LAW) == DONE || pInstance->GetData(TYPE_RING_OF_LAW) == SPECIAL)
-            return false;
-
-        if (pPlayer->isGameMaster())
-            return false;
-
-        pInstance->SetData(TYPE_RING_OF_LAW, pInstance->GetData(TYPE_RING_OF_LAW) == DATA_BANNER_BEFORE_EVENT ? SPECIAL : IN_PROGRESS);
-
-        pPlayer->SummonCreature(NPC_GRIMSTONE, aSpawnPositions[POS_GRIMSTONE][0], aSpawnPositions[POS_GRIMSTONE][1], aSpawnPositions[POS_GRIMSTONE][2], aSpawnPositions[POS_GRIMSTONE][3], TEMPSUMMON_DEAD_DESPAWN, 0);
-        pInstance->SetArenaCenterCoords(pAt->x, pAt->y, pAt->z);
-
-        return false;
-    }
-    return false;
-}
-
-/*######
-## npc_grimstone
-######*/
-
-struct MANGOS_DLL_DECL npc_grimstoneAI : public npc_escortAI
-{
-    npc_grimstoneAI(Creature* pCreature) : npc_escortAI(pCreature)
-    {
-        m_pInstance = (instance_blackrock_depths*)pCreature->GetInstanceData();
-        m_uiMobSpawnId = urand(0, 5);
-        // Select MAX_THELDREN_ADDS(4) random adds for Theldren encounter
-        uint8 uiCount = 0;
-        for (uint8 i = 0; i < MAX_POSSIBLE_THELDREN_ADDS && uiCount < MAX_THELDREN_ADDS; ++i)
-        {
-            if (urand(0, 1) || i >= MAX_POSSIBLE_THELDREN_ADDS - MAX_THELDREN_ADDS + uiCount)
-            {
-                m_uiGladiatorId[uiCount] = aGladiator[i];
-                ++uiCount;
-            }
-        }
-
-        Reset();
-    }
-
-    instance_blackrock_depths* m_pInstance;
-
-    uint8 m_uiEventPhase;
-    uint32 m_uiEventTimer;
-
-    uint8 m_uiMobSpawnId;
-    uint8 m_uiMobDeadCount;
-
-    Phases m_uiPhase;
-
-    uint32 m_uiGladiatorId[MAX_THELDREN_ADDS];
-
-    GuidList m_lSummonedGUIDList;
-
-    void Reset()
-    {
-        m_creature->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NON_ATTACKABLE);
-
-        m_uiEventTimer    = 1000;
-        m_uiEventPhase    = 0;
-        m_uiMobDeadCount  = 0;
-
-        m_uiPhase = PHASE_MOBS;
-    }
-
-    void JustSummoned(Creature* pSummoned)
-    {
-        if (!m_pInstance)
-            return;
-
-        // Ring mob or boss summoned
-        float fX, fY, fZ;
-        float fcX, fcY, fcZ;
-        m_pInstance->GetArenaCenterCoords(fX, fY, fZ);
-        m_creature->GetRandomPoint(fX, fY, fZ, 10.0f, fcX, fcY, fcZ);
-        pSummoned->GetMotionMaster()->MovePoint(1, fcX, fcY, fcZ);
-
-        m_lSummonedGUIDList.push_back(pSummoned->GetObjectGuid());
-    }
-
-    void DoChallengeQuestCredit()
-    {
-        Map::PlayerList const &PlayerList = m_creature->GetMap()->GetPlayers();
-
-        for (Map::PlayerList::const_iterator itr = PlayerList.begin(); itr != PlayerList.end(); ++itr)
-        {
-            Player* pPlayer = itr->getSource();
-            if (pPlayer && pPlayer->GetQuestStatus(QUEST_THE_CHALLENGE) == QUEST_STATUS_INCOMPLETE)
-                pPlayer->KilledMonsterCredit(NPC_THELDREN_QUEST_CREDIT);
-        }
-    }
-
-    void SummonedCreatureJustDied(Creature* pSummoned)
-    {
-        ++m_uiMobDeadCount;
-
-        switch (m_uiPhase)
-        {
-            case PHASE_MOBS:                                // Ring mob killed
-                if (m_uiMobDeadCount == MAX_MOB_AMOUNT)
-                {
-                    m_uiEventTimer = 5000;
-                    m_uiMobDeadCount = 0;
-                }
-                break;
-            case PHASE_BOSS:                                // Ring boss killed
-                // One Boss
-                if (m_uiMobDeadCount == 1)
-                {
-                    m_uiEventTimer = 5000;
-                    m_uiMobDeadCount = 0;
-                }
-                break;
-            case PHASE_GLADIATORS:                          // Theldren and his band killed
-                // Adds + Theldren
-                if (m_uiMobDeadCount == MAX_THELDREN_ADDS + 1)
-                {
-                    m_uiEventTimer = 5000;
-                    m_uiMobDeadCount = 0;
-                    DoChallengeQuestCredit();
-                }
-                break;
-        }
-    }
-
-    void SummonRingMob(uint32 uiEntry, SpawnPosition uiPosition)
-    {
-        float fX, fY, fZ;
-        m_creature->GetRandomPoint(aSpawnPositions[uiPosition][0], aSpawnPositions[uiPosition][1], aSpawnPositions[uiPosition][2], 2.0f, fX, fY, fZ);
-        m_creature->SummonCreature(uiEntry, fX, fY, fZ, 0, TEMPSUMMON_DEAD_DESPAWN, 0);
-    }
-
-    void WaypointReached(uint32 uiPointId)
-    {
-        switch(uiPointId)
-        {
-            case 0:                                         // Middle reached first time
-                DoScriptText(urand(0, 1) ? SAY_START_1 : SAY_START_2, m_creature);
-                SetEscortPaused(true);
-                m_uiEventTimer = 5000;
-                break;
-            case 1:                                         // Reached wall again
-                DoScriptText(SAY_OPEN_EAST_GATE, m_creature);
-                SetEscortPaused(true);
-                m_uiEventTimer = 5000;
-                break;
-            case 2:                                         // walking along the wall, while door opened
-                SetEscortPaused(true);
-                break;
-            case 3:                                         // Middle reached second time
-                DoScriptText(urand(0, 1) ? SAY_SUMMON_BOSS_1 : SAY_SUMMON_BOSS_2, m_creature);
-                break;
-            case 4:                                         // Reached North Gate
-                DoScriptText(SAY_OPEN_NORTH_GATE, m_creature);
-                SetEscortPaused(true);
-                m_uiEventTimer = 5000;
-                break;
-            case 5:
-                if (m_pInstance)
-                {
-                    m_pInstance->SetData(TYPE_RING_OF_LAW, DONE);
-                    debug_log("SD2: npc_grimstone: event reached end and set complete.");
-                }
-                break;
-        }
-    }
-
-    void UpdateEscortAI(const uint32 uiDiff)
-    {
-        if (!m_pInstance)
-            return;
-
-        if (m_pInstance->GetData(TYPE_RING_OF_LAW) == FAIL)
-        {
-            // Reset Doors
-            if (m_uiEventPhase >= 9)                        // North Gate is opened
-            {
-                m_pInstance->DoUseDoorOrButton(GO_ARENA_2);
-                m_pInstance->DoUseDoorOrButton(GO_ARENA_4);
-            }
-            else if (m_uiEventPhase >= 4)                   // East Gate is opened
-            {
-                m_pInstance->DoUseDoorOrButton(GO_ARENA_1);
-                m_pInstance->DoUseDoorOrButton(GO_ARENA_4);
-            }
-
-            // Despawn Summoned Mobs
-            for (GuidList::const_iterator itr = m_lSummonedGUIDList.begin(); itr != m_lSummonedGUIDList.end(); ++itr)
-            {
-                if (Creature* pSummoned = m_creature->GetMap()->GetCreature(*itr))
-                    pSummoned->ForcedDespawn();
-            }
-            m_lSummonedGUIDList.clear();
-
-            // Despawn NPC
-            m_creature->ForcedDespawn();
-            return;
-        }
-
-        if (m_uiEventTimer)
-        {
-            if (m_uiEventTimer <= uiDiff)
-            {
-                switch(m_uiEventPhase)
-                {
-                    case 0:
-                        // Shortly after spawn, start walking
-                        //DoScriptText(-1000000, m_creature); // no more text on spawn
-                        m_pInstance->DoUseDoorOrButton(GO_ARENA_4);
-                        Start(false);
-                        SetEscortPaused(false);
-                        m_uiEventTimer = 0;
-                        break;
-                    case 1:
-                        // Start walking towards wall
-                        SetEscortPaused(false);
-                        m_uiEventTimer = 0;
-                        break;
-                    case 2:
-                        m_uiEventTimer = 2000;
-                        break;
-                    case 3:
-                        // Open East Gate
-                        m_pInstance->DoUseDoorOrButton(GO_ARENA_1);
-                        m_uiEventTimer = 3000;
-                        break;
-                    case 4:
-                        SetEscortPaused(false);
-                        m_creature->SetVisibility(VISIBILITY_OFF);
-                        // Summon Ring Mob(s)
-                        SummonRingMob(aRingMob[m_uiMobSpawnId], POS_EAST);
-                        m_uiEventTimer = 8000;
-                        break;
-                    case 5:
-                        // Summon Ring Mob(s)
-                        SummonRingMob(aRingMob[m_uiMobSpawnId], POS_EAST);
-                        SummonRingMob(aRingMob[m_uiMobSpawnId], POS_EAST);
-                        m_uiEventTimer = 8000;
-                        break;
-                    case 6:
-                        // Summon Ring Mob(s)
-                        SummonRingMob(aRingMob[m_uiMobSpawnId], POS_EAST);
-                        m_uiEventTimer = 0;
-                        break;
-                    case 7:
-                        // Summoned Mobs are dead, continue event
-                        m_creature->SetVisibility(VISIBILITY_ON);
-                        m_pInstance->DoUseDoorOrButton(GO_ARENA_1);
-                        //DoScriptText(-1000000, m_creature); // after killed the mobs, no say here
-                        SetEscortPaused(false);
-                        m_uiEventTimer = 0;
-                        break;
-                    case 8:
-                        // Open North Gate
-                        m_pInstance->DoUseDoorOrButton(GO_ARENA_2);
-                        m_uiEventTimer = 5000;
-                        break;
-                    case 9:
-                        // Summon Boss
-                        m_creature->SetVisibility(VISIBILITY_OFF);
-                        // If banner summoned after start, then summon Thelden after the creatures are dead
-                        if (m_pInstance->GetData(TYPE_RING_OF_LAW) == SPECIAL && m_uiPhase == PHASE_MOBS)
-                        {
-                            m_uiPhase = PHASE_GLADIATORS;
-                            SummonRingMob(NPC_THELDREN, POS_NORTH);
-                            for (uint8 i = 0; i < MAX_THELDREN_ADDS; ++i)
-                                SummonRingMob(m_uiGladiatorId[i], POS_NORTH);
-                        }
-                        else
-                        {
-                            m_uiPhase = PHASE_BOSS;
-                            SummonRingMob(aRingBoss[urand(0, 5)], POS_NORTH);
-                        }
-                        m_uiEventTimer = 0;
-                        break;
-                    case 10:
-                        // Boss dead
-                        m_lSummonedGUIDList.clear();
-                        m_pInstance->DoUseDoorOrButton(GO_ARENA_2);
-                        m_pInstance->DoUseDoorOrButton(GO_ARENA_3);
-                        m_pInstance->DoUseDoorOrButton(GO_ARENA_4);
-                        SetEscortPaused(false);
-                        m_uiEventTimer = 0;
-                        break;
-                }
-                ++m_uiEventPhase;
-            }
-            else
-                m_uiEventTimer -= uiDiff;
-        }
-    }
-};
-
-CreatureAI* GetAI_npc_grimstone(Creature* pCreature)
-{
-    return new npc_grimstoneAI(pCreature);
-}
-
-bool EffectDummyCreature_spell_banner_of_provocation(Unit* pCaster, uint32 uiSpellId, SpellEffectIndex uiEffIndex, Creature* pCreatureTarget)
-{
-    if (uiSpellId == SPELL_SUMMON_THELRIN_DND && uiEffIndex != EFFECT_INDEX_0)
-    {
-        instance_blackrock_depths* pInstance = (instance_blackrock_depths*)pCreatureTarget->GetInstanceData();
-        if (pInstance && pInstance->GetData(TYPE_RING_OF_LAW) != DONE && pInstance->GetData(TYPE_RING_OF_LAW) != SPECIAL)
-            pInstance->SetData(TYPE_RING_OF_LAW, pInstance->GetData(TYPE_RING_OF_LAW) == IN_PROGRESS ? SPECIAL : DATA_BANNER_BEFORE_EVENT);
-
-        return true;
-    }
-    return false;
-}
-
-/*######
-## mob_phalanx
-######*/
-
-enum
-{
-    SPELL_THUNDERCLAP    = 15588,
-    SPELL_FIREBALLVOLLEY = 15285,
-    SPELL_MIGHTYBLOW     = 14099
-};
-
-struct MANGOS_DLL_DECL mob_phalanxAI : public ScriptedAI
-{
-    mob_phalanxAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
-
-    uint32 m_uiThunderClapTimer;
-    uint32 m_uiFireballVolleyTimer;
-    uint32 m_uiMightyBlowTimer;
-
-    void Reset()
-    {
-        m_uiThunderClapTimer    = 12000;
-        m_uiFireballVolleyTimer = 0;
-        m_uiMightyBlowTimer     = 15000;
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // ThunderClap
-        if (m_uiThunderClapTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(), SPELL_THUNDERCLAP);
-            m_uiThunderClapTimer = 10000;
-        }
-        else
-            m_uiThunderClapTimer -= uiDiff;
-
-        // FireballVolley
-        if (m_creature->GetHealthPercent() < 51.0f)
-        {
-            if (m_uiFireballVolleyTimer < uiDiff)
-            {
-                DoCastSpellIfCan(m_creature->getVictim(), SPELL_FIREBALLVOLLEY);
-                m_uiFireballVolleyTimer = 15000;
-            }
-            else
-                m_uiFireballVolleyTimer -= uiDiff;
-        }
-
-        // MightyBlow
-        if (m_uiMightyBlowTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(), SPELL_MIGHTYBLOW);
-            m_uiMightyBlowTimer = 10000;
-        }
-        else
-            m_uiMightyBlowTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_mob_phalanx(Creature* pCreature)
-{
-    return new mob_phalanxAI(pCreature);
-}
-
-/*######
-## npc_kharan_mighthammer
-######*/
-enum
-{
-    QUEST_WHAT_IS_GOING_ON = 4001,
-    QUEST_KHARANS_TALE     = 4342
-};
-
-#define GOSSIP_ITEM_KHARAN_1    "I need to know where the princess are, Kharan!"
-#define GOSSIP_ITEM_KHARAN_2    "All is not lost, Kharan!"
-
-#define GOSSIP_ITEM_KHARAN_3    "Gor'shak is my friend, you can trust me."
-#define GOSSIP_ITEM_KHARAN_4    "Not enough, you need to tell me more."
-#define GOSSIP_ITEM_KHARAN_5    "So what happened?"
-#define GOSSIP_ITEM_KHARAN_6    "Continue..."
-#define GOSSIP_ITEM_KHARAN_7    "So you suspect that someone on the inside was involved? That they were tipped off?"
-#define GOSSIP_ITEM_KHARAN_8    "Continue with your story please."
-#define GOSSIP_ITEM_KHARAN_9    "Indeed."
-#define GOSSIP_ITEM_KHARAN_10   "The door is open, Kharan. You are a free man."
-
-bool GossipHello_npc_kharan_mighthammer(Player* pPlayer, Creature* pCreature)
-{
-    if (pCreature->isQuestGiver())
-        pPlayer->PrepareQuestMenu(pCreature->GetObjectGuid());
-
-    if (pPlayer->GetQuestStatus(QUEST_WHAT_IS_GOING_ON) == QUEST_STATUS_INCOMPLETE)
-        pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_KHARAN_1, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+1);
-
-    if (pPlayer->GetQuestStatus(QUEST_KHARANS_TALE) == QUEST_STATUS_INCOMPLETE)
-        pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_KHARAN_2, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+3);
-
-    if (pPlayer->GetTeam() == HORDE)
-        pPlayer->SEND_GOSSIP_MENU(2473, pCreature->GetObjectGuid());
-    else
-        pPlayer->SEND_GOSSIP_MENU(2474, pCreature->GetObjectGuid());
-
-    return true;
-}
-
-bool GossipSelect_npc_kharan_mighthammer(Player* pPlayer, Creature* pCreature, uint32 uiSender, uint32 uiAction)
-{
-    switch(uiAction)
-    {
-        case GOSSIP_ACTION_INFO_DEF+1:
-            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_KHARAN_3, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+2);
-            pPlayer->SEND_GOSSIP_MENU(2475, pCreature->GetObjectGuid());
-            break;
-        case GOSSIP_ACTION_INFO_DEF+2:
-            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_KHARAN_4, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+3);
-            pPlayer->SEND_GOSSIP_MENU(2476, pCreature->GetObjectGuid());
-            break;
-
-        case GOSSIP_ACTION_INFO_DEF+3:
-            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_KHARAN_5, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+4);
-            pPlayer->SEND_GOSSIP_MENU(2477, pCreature->GetObjectGuid());
-            break;
-        case GOSSIP_ACTION_INFO_DEF+4:
-            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_KHARAN_6, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+5);
-            pPlayer->SEND_GOSSIP_MENU(2478, pCreature->GetObjectGuid());
-            break;
-        case GOSSIP_ACTION_INFO_DEF+5:
-            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_KHARAN_7, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+6);
-            pPlayer->SEND_GOSSIP_MENU(2479, pCreature->GetObjectGuid());
-            break;
-        case GOSSIP_ACTION_INFO_DEF+6:
-            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_KHARAN_8, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+7);
-            pPlayer->SEND_GOSSIP_MENU(2480, pCreature->GetObjectGuid());
-            break;
-        case GOSSIP_ACTION_INFO_DEF+7:
-            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_KHARAN_9, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+8);
-            pPlayer->SEND_GOSSIP_MENU(2481, pCreature->GetObjectGuid());
-            break;
-        case GOSSIP_ACTION_INFO_DEF+8:
-            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_KHARAN_10, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+9);
-            pPlayer->SEND_GOSSIP_MENU(2482, pCreature->GetObjectGuid());
-            break;
-        case GOSSIP_ACTION_INFO_DEF+9:
-            pPlayer->CLOSE_GOSSIP_MENU();
-            if (pPlayer->GetTeam() == HORDE)
-                pPlayer->AreaExploredOrEventHappens(QUEST_WHAT_IS_GOING_ON);
-            else
-                pPlayer->AreaExploredOrEventHappens(QUEST_KHARANS_TALE);
-            break;
-    }
-    return true;
-}
-
-/*######
-## npc_lokhtos_darkbargainer
-######*/
-
-enum
-{
-    FACTION_THORIUM_BROTHERHOOD               = 59,
-
-    ITEM_THRORIUM_BROTHERHOOD_CONTRACT        = 18628,
-    ITEM_SULFURON_INGOT                       = 17203,
-
-    QUEST_A_BINDING_CONTRACT                  = 7604,
-
-    SPELL_CREATE_THORIUM_BROTHERHOOD_CONTRACT = 23059
-};
-
-#define GOSSIP_ITEM_SHOW_ACCESS     "Show me what I have access to, Lothos."
-#define GOSSIP_ITEM_GET_CONTRACT    "Get Thorium Brotherhood Contract"
-
-bool GossipHello_npc_lokhtos_darkbargainer(Player* pPlayer, Creature* pCreature)
-{
-    if (pCreature->isQuestGiver())
-        pPlayer->PrepareQuestMenu(pCreature->GetObjectGuid());
-
-    if (pCreature->isVendor() && pPlayer->GetReputationRank(FACTION_THORIUM_BROTHERHOOD) >= REP_FRIENDLY)
-        pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_VENDOR, GOSSIP_ITEM_SHOW_ACCESS, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_TRADE);
-
-    if (!pPlayer->GetQuestRewardStatus(QUEST_A_BINDING_CONTRACT) &&
-        !pPlayer->HasItemCount(ITEM_THRORIUM_BROTHERHOOD_CONTRACT, 1, true) &&
-        pPlayer->HasItemCount(ITEM_SULFURON_INGOT, 1))
-    {
-        pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_GET_CONTRACT, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+1);
-    }
-
-    if (pPlayer->GetReputationRank(FACTION_THORIUM_BROTHERHOOD) < REP_FRIENDLY)
-        pPlayer->SEND_GOSSIP_MENU(3673, pCreature->GetObjectGuid());
-    else
-        pPlayer->SEND_GOSSIP_MENU(3677, pCreature->GetObjectGuid());
-
-    return true;
-}
-
-bool GossipSelect_npc_lokhtos_darkbargainer(Player* pPlayer, Creature* pCreature, uint32 uiSender, uint32 uiAction)
-{
-    if (uiAction == GOSSIP_ACTION_INFO_DEF + 1)
-    {
-        pPlayer->CLOSE_GOSSIP_MENU();
-        pPlayer->CastSpell(pPlayer, SPELL_CREATE_THORIUM_BROTHERHOOD_CONTRACT, false);
-    }
-
-    if (uiAction == GOSSIP_ACTION_TRADE)
-        pPlayer->SEND_VENDORLIST(pCreature->GetObjectGuid());
-
-    return true;
-}
-
-/*######
-## npc_rocknot
-######*/
-
-enum
-{
-    SAY_GOT_BEER       = -1230000,
-
-    SPELL_DRUNKEN_RAGE = 14872,
-
-    QUEST_ALE          = 4295
-};
-
-struct MANGOS_DLL_DECL npc_rocknotAI : public npc_escortAI
-{
-    npc_rocknotAI(Creature* pCreature) : npc_escortAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    uint32 m_uiBreakKegTimer;
-    uint32 m_uiBreakDoorTimer;
-
-    void Reset()
-    {
-        if (HasEscortState(STATE_ESCORT_ESCORTING))
-            return;
-
-        m_uiBreakKegTimer  = 0;
-        m_uiBreakDoorTimer = 0;
-    }
-
-    void DoGo(uint32 id, uint32 state)
-    {
-        if (GameObject* pGo = m_pInstance->GetSingleGameObjectFromStorage(id))
-            pGo->SetGoState(GOState(state));
-    }
-
-    void WaypointReached(uint32 uiPointId)
-    {
-        if (!m_pInstance)
-            return;
-
-        switch(uiPointId)
-        {
-            case 1:
-                m_creature->HandleEmote(EMOTE_ONESHOT_KICK);
-                break;
-            case 2:
-                m_creature->HandleEmote(EMOTE_ONESHOT_ATTACKUNARMED);
-                break;
-            case 3:
-                m_creature->HandleEmote(EMOTE_ONESHOT_ATTACKUNARMED);
-                break;
-            case 4:
-                m_creature->HandleEmote(EMOTE_ONESHOT_KICK);
-                break;
-            case 5:
-                m_creature->HandleEmote(EMOTE_ONESHOT_KICK);
-                m_uiBreakKegTimer = 2000;
-                break;
-        }
-    }
-
-    void UpdateEscortAI(const uint32 uiDiff)
-    {
-        if (!m_pInstance)
-            return;
-
-        if (m_uiBreakKegTimer)
-        {
-            if (m_uiBreakKegTimer <= uiDiff)
-            {
-                DoGo(GO_BAR_KEG_SHOT, 0);
-                m_uiBreakKegTimer = 0;
-                m_uiBreakDoorTimer = 1000;
-            }
-            else
-                m_uiBreakKegTimer -= uiDiff;
-        }
-
-        if (m_uiBreakDoorTimer)
-        {
-            if (m_uiBreakDoorTimer <= uiDiff)
-            {
-                DoGo(GO_BAR_DOOR, 2);
-                DoGo(GO_BAR_KEG_TRAP, 0);                   //doesn't work very well, leaving code here for future
-                                                            //spell by trap has effect61, this indicate the bar go hostile
-
-                if (Creature* pTmp = m_pInstance->GetSingleCreatureFromStorage(NPC_PHALANX))
-                    pTmp->setFaction(14);
-
-                // for later, this event(s) has alot more to it.
-                // optionally, DONE can trigger bar to go hostile.
-                m_pInstance->SetData(TYPE_BAR, DONE);
-
-                m_uiBreakDoorTimer = 0;
-            }
-            else
-                m_uiBreakDoorTimer -= uiDiff;
-        }
-    }
-};
-
-CreatureAI* GetAI_npc_rocknot(Creature* pCreature)
-{
-    return new npc_rocknotAI(pCreature);
-}
-
-bool QuestRewarded_npc_rocknot(Player* pPlayer, Creature* pCreature, Quest const* pQuest)
-{
-    ScriptedInstance* pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-
-    if (!pInstance)
-        return true;
-
-    if (pInstance->GetData(TYPE_BAR) == DONE || pInstance->GetData(TYPE_BAR) == SPECIAL)
-        return true;
-
-    if (pQuest->GetQuestId() == QUEST_ALE)
-    {
-        if (pInstance->GetData(TYPE_BAR) != IN_PROGRESS)
-            pInstance->SetData(TYPE_BAR,IN_PROGRESS);
-
-        pInstance->SetData(TYPE_BAR,SPECIAL);
-
-        // keep track of amount in instance script, returns SPECIAL if amount ok and event in progress
-        if (pInstance->GetData(TYPE_BAR) == SPECIAL)
-        {
-            DoScriptText(SAY_GOT_BEER, pCreature);
-            pCreature->CastSpell(pCreature, SPELL_DRUNKEN_RAGE, false);
-
-            if (npc_rocknotAI* pEscortAI = dynamic_cast<npc_rocknotAI*>(pCreature->AI()))
-                pEscortAI->Start(false, NULL, NULL, true);
-        }
-    }
-
-    return true;
-}
-
-void AddSC_blackrock_depths()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "go_shadowforge_brazier";
-    pNewScript->pGOUse = &GOUse_go_shadowforge_brazier;
-    pNewScript->RegisterSelf();
-
-    pNewScript = new Script;
-    pNewScript->Name = "go_relic_coffer_door";
-    pNewScript->pGOUse = &GOUse_go_relic_coffer_door;
-    pNewScript->RegisterSelf();
-
-    pNewScript = new Script;
-    pNewScript->Name = "at_ring_of_law";
-    pNewScript->pAreaTrigger = &AreaTrigger_at_ring_of_law;
-    pNewScript->RegisterSelf();
-
-    pNewScript = new Script;
-    pNewScript->Name = "npc_grimstone";
-    pNewScript->GetAI = &GetAI_npc_grimstone;
-    pNewScript->RegisterSelf();
-
-    pNewScript = new Script;
-    pNewScript->Name = "npc_theldren_trigger";
-    pNewScript->pEffectDummyNPC = &EffectDummyCreature_spell_banner_of_provocation;
-    pNewScript->RegisterSelf();
-
-    pNewScript = new Script;
-    pNewScript->Name = "mob_phalanx";
-    pNewScript->GetAI = &GetAI_mob_phalanx;
-    pNewScript->RegisterSelf();
-
-    pNewScript = new Script;
-    pNewScript->Name = "npc_kharan_mighthammer";
-    pNewScript->pGossipHello =  &GossipHello_npc_kharan_mighthammer;
-    pNewScript->pGossipSelect = &GossipSelect_npc_kharan_mighthammer;
-    pNewScript->RegisterSelf();
-
-    pNewScript = new Script;
-    pNewScript->Name = "npc_lokhtos_darkbargainer";
-    pNewScript->pGossipHello =  &GossipHello_npc_lokhtos_darkbargainer;
-    pNewScript->pGossipSelect = &GossipSelect_npc_lokhtos_darkbargainer;
-    pNewScript->RegisterSelf();
-
-    pNewScript = new Script;
-    pNewScript->Name = "npc_rocknot";
-    pNewScript->GetAI = &GetAI_npc_rocknot;
-    pNewScript->pQuestRewardedNPC = &QuestRewarded_npc_rocknot;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_depths/blackrock_depths.h b/scripts/eastern_kingdoms/blackrock_depths/blackrock_depths.h
deleted file mode 100644
index 14696ad..0000000
--- a/scripts/eastern_kingdoms/blackrock_depths/blackrock_depths.h
+++ /dev/null
@@ -1,136 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software licensed under GPL version 2
- * Please see the included DOCS/LICENSE.TXT for more information */
-
-#ifndef DEF_BRD_H
-#define DEF_BRD_H
-
-enum
-{
-    MAX_ENCOUNTER           = 6,
-    MAX_RELIC_DOORS         = 12,
-
-    TYPE_RING_OF_LAW        = 1,
-    TYPE_VAULT              = 2,
-    TYPE_BAR                = 3,
-    TYPE_TOMB_OF_SEVEN      = 4,
-    TYPE_LYCEUM             = 5,
-    TYPE_IRON_HALL          = 6,
-
-    NPC_EMPEROR             = 9019,
-    NPC_PRINCESS            = 8929,
-    NPC_PHALANX             = 9502,
-    NPC_HATEREL             = 9034,
-    NPC_ANGERREL            = 9035,
-    NPC_VILEREL             = 9036,
-    NPC_GLOOMREL            = 9037,
-    NPC_SEETHREL            = 9038,
-    // NPC_DOOMREL          = 9039,
-    NPC_DOPEREL             = 9040,
-    NPC_WATCHER_DOOMGRIP    = 9476,
-    NPC_WARBRINGER_CONST    = 8905,                         // Four of them in Relict Vault are related to Doomgrip summon event
-
-    GO_ARENA_1              = 161525,
-    GO_ARENA_2              = 161522,
-    GO_ARENA_3              = 161524,
-    GO_ARENA_4              = 161523,
-
-    GO_SHADOW_LOCK          = 161460,
-    GO_SHADOW_MECHANISM     = 161461,
-    GO_SHADOW_GIANT_DOOR    = 157923,
-    GO_SHADOW_DUMMY         = 161516,
-    GO_BAR_KEG_SHOT         = 170607,
-    GO_BAR_KEG_TRAP         = 171941,
-    GO_BAR_DOOR             = 170571,
-    GO_TOMB_ENTER           = 170576,
-    GO_TOMB_EXIT            = 170577,
-    GO_LYCEUM               = 170558,
-    GO_GOLEM_ROOM_N         = 170573,
-    GO_GOLEM_ROOM_S         = 170574,
-    GO_THRONE_ROOM          = 170575,
-
-    GO_SPECTRAL_CHALICE     = 164869,
-    GO_CHEST_SEVEN          = 169243,
-    GO_ARENA_SPOILS         = 181074,
-    GO_SECRET_DOOR          = 174553,
-
-    SPELL_STONED            = 10255,                        // Aura of Warbringer Constructs in Relict Vault
-};
-
-enum ArenaNPCs
-{
-    // Gladiators
-    NPC_LEFTY               = 16049,
-    NPC_ROTFANG             = 16050,
-    NPC_SNOKH               = 16051,
-    NPC_MALGEN              = 16052,
-    NPC_KORV                = 16053,
-    NPC_REZZNIK             = 16054,
-    NPC_VAJASHNI            = 16055,
-    NPC_VOLIDA              = 16058,
-    NPC_THELDREN            = 16059,
-    // Ring mobs
-    NPC_WORM                = 8925,
-    NPC_STINGER             = 8926,
-    NPC_SCREECHER           = 8927,
-    NPC_THUNDERSNOUT        = 8928,
-    NPC_CREEPER             = 8933,
-    NPC_BEETLE              = 8932,
-    // Ring bosses
-    NPC_GOROSH              = 9027,
-    NPC_GRIZZLE             = 9028,
-    NPC_EVISCERATOR         = 9029,
-    NPC_OKTHOR              = 9030,
-    NPC_ANUBSHIAH           = 9031,
-    NPC_HEDRUM              = 9032
-};
-
-static const uint32 aArenaNPCs[] =
-{
-    // Gladiators
-    NPC_LEFTY, NPC_ROTFANG, NPC_SNOKH, NPC_MALGEN, NPC_KORV, NPC_REZZNIK, NPC_VAJASHNI, NPC_VOLIDA, NPC_THELDREN,
-    // Ring mobs
-    NPC_WORM, NPC_STINGER, NPC_SCREECHER, NPC_THUNDERSNOUT, NPC_CREEPER, NPC_BEETLE,
-    // Ring bosses
-    NPC_GOROSH, NPC_GRIZZLE, NPC_EVISCERATOR, NPC_OKTHOR, NPC_ANUBSHIAH, NPC_HEDRUM
-};
-
-// Used to summon Watcher Doomgrip
-static const float aVaultPositions[4] = {821.905f, -338.382f, -50.134f, 3.78736f};
-
-class MANGOS_DLL_DECL instance_blackrock_depths : public ScriptedInstance
-{
-    public:
-        instance_blackrock_depths(Map* pMap);
-        ~instance_blackrock_depths() {}
-
-        void Initialize();
-
-        void OnCreatureCreate(Creature* pCreature);
-        void OnCreatureDeath(Creature* pCreature);
-        void OnObjectCreate(GameObject* pGo);
-
-        void SetData(uint32 uiType, uint32 uiData);
-        uint32 GetData(uint32 uiType);
-
-        const char* Save() { return m_strInstData.c_str(); }
-        void Load(const char* chrIn);
-        void OnCreatureEvade(Creature* pCreature);
-
-        // Arena Event
-        void SetArenaCenterCoords(float fX, float fY, float fZ) { m_fArenaCenterX = fX; m_fArenaCenterY = fY; m_fArenaCenterZ = fZ; }
-        void GetArenaCenterCoords(float &fX, float &fY, float &fZ) { fX = m_fArenaCenterX; fY = m_fArenaCenterY; fZ = m_fArenaCenterZ; }
-
-    private:
-        uint32 m_auiEncounter[MAX_ENCOUNTER];
-        std::string m_strInstData;
-
-        uint32 m_uiBarAleCount;
-        uint8 m_uiCofferDoorsOpened;
-
-        float m_fArenaCenterX, m_fArenaCenterY, m_fArenaCenterZ;
-
-        GuidSet m_sVaultNpcGuids;
-};
-
-#endif
diff --git a/scripts/eastern_kingdoms/blackrock_depths/boss_ambassador_flamelash.cpp b/scripts/eastern_kingdoms/blackrock_depths/boss_ambassador_flamelash.cpp
deleted file mode 100644
index b071ad1..0000000
--- a/scripts/eastern_kingdoms/blackrock_depths/boss_ambassador_flamelash.cpp
+++ /dev/null
@@ -1,122 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Ambassador_Flamelash
-SD%Complete: 80
-SDComment: Texts missing, Add handling rather guesswork, Add spell Burning Spirit likely won't work
-SDCategory: Blackrock Depths
-EndScriptData */
-
-#include "precompiled.h"
-
-enum
-{
-    SPELL_FIREBLAST             = 15573,
-    SPELL_BURNING_SPIRIT        = 13489,
-    SPELL_BURNING_SPIRIT_BUFF   = 14744,
-
-    NPC_BURNING_SPIRIT          = 9178,
-};
-
-struct MANGOS_DLL_DECL boss_ambassador_flamelashAI : public ScriptedAI
-{
-    boss_ambassador_flamelashAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
-
-    uint32 m_uiSpiritTimer;
-    int Rand;
-    int RandX;
-    int RandY;
-
-    void Reset()
-    {
-        m_uiSpiritTimer = 12000;
-    }
-
-    void SummonSpirits()
-    {
-        float fX, fY, fZ;
-        m_creature->GetRandomPoint(m_creature->GetPositionX(), m_creature->GetPositionY(), m_creature->GetPositionZ(), 30.0f, fX, fY, fZ);
-        m_creature->SummonCreature(NPC_BURNING_SPIRIT, fX, fY, fZ, m_creature->GetAngle(fX, fY)+M_PI_F, TEMPSUMMON_TIMED_OR_DEAD_DESPAWN, 60000);
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        DoCastSpellIfCan(m_creature, SPELL_FIREBLAST);
-    }
-
-    void JustSummoned(Creature* pSummoned)
-    {
-        pSummoned->GetMotionMaster()->MovePoint(1, m_creature->GetPositionX(), m_creature->GetPositionY(), m_creature->GetPositionZ());
-    }
-
-    void SummonedMovementInform(Creature* pSummoned, uint32 uiMotionType, uint32 uiPointId)
-    {
-        if (uiPointId != 1)
-            return;
-
-        pSummoned->CastSpell(m_creature, SPELL_BURNING_SPIRIT, true);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        //Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        //m_uiSpiritTimer
-        if (m_uiSpiritTimer < uiDiff)
-        {
-            SummonSpirits();
-            SummonSpirits();
-            SummonSpirits();
-            SummonSpirits();
-
-            m_uiSpiritTimer = 20000;
-        }
-        else
-            m_uiSpiritTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-bool EffectDummyCreature_spell_boss_ambassador_flamelash(Unit* pCaster, uint32 uiSpellId, SpellEffectIndex uiEffIndex, Creature* pCreatureTarget)
-{
-    if (uiSpellId == SPELL_BURNING_SPIRIT && uiEffIndex == EFFECT_INDEX_1)
-    {
-        pCreatureTarget->CastSpell(pCreatureTarget, SPELL_BURNING_SPIRIT_BUFF, true);
-        return true;
-    }
-
-    return false;
-}
-
-CreatureAI* GetAI_boss_ambassador_flamelash(Creature* pCreature)
-{
-    return new boss_ambassador_flamelashAI(pCreature);
-}
-
-void AddSC_boss_ambassador_flamelash()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_ambassador_flamelash";
-    pNewScript->GetAI = &GetAI_boss_ambassador_flamelash;
-    pNewScript->pEffectDummyNPC = &EffectDummyCreature_spell_boss_ambassador_flamelash;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_depths/boss_anubshiah.cpp b/scripts/eastern_kingdoms/blackrock_depths/boss_anubshiah.cpp
deleted file mode 100644
index 870d20f..0000000
--- a/scripts/eastern_kingdoms/blackrock_depths/boss_anubshiah.cpp
+++ /dev/null
@@ -1,124 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Anubshiah
-SD%Complete: 100
-SDComment:
-SDCategory: Blackrock Depths
-EndScriptData */
-
-#include "precompiled.h"
-
-enum
-{
-    SPELL_SHADOWBOLT            = 17228,
-    SPELL_CURSEOFTONGUES        = 15470,
-    SPELL_CURSEOFWEAKNESS       = 17227,
-    SPELL_DEMONARMOR            = 11735,
-    SPELL_ENVELOPINGWEB         = 15471
-};
-
-struct MANGOS_DLL_DECL boss_anubshiahAI : public ScriptedAI
-{
-    boss_anubshiahAI(Creature* pCreature) : ScriptedAI(pCreature) { Reset(); }
-
-    uint32 m_uiShadowBoltTimer;
-    uint32 m_uiCurseOfTonguesTimer;
-    uint32 m_uiCurseOfWeaknessTimer;
-    uint32 m_uiDemonArmorTimer;
-    uint32 m_uiEnvelopingWebTimer;
-
-    void Reset()
-    {
-        m_uiShadowBoltTimer = 7000;
-        m_uiCurseOfTonguesTimer = 24000;
-        m_uiCurseOfWeaknessTimer = 12000;
-        m_uiDemonArmorTimer = 3000;
-        m_uiEnvelopingWebTimer = 16000;
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        //Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        //ShadowBolt_Timer
-        if (m_uiShadowBoltTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(), SPELL_SHADOWBOLT);
-            m_uiShadowBoltTimer = 7000;
-        }
-        else
-            m_uiShadowBoltTimer -= uiDiff;
-
-        //CurseOfTongues_Timer
-        if (m_uiCurseOfTonguesTimer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-                DoCastSpellIfCan(pTarget, SPELL_CURSEOFTONGUES);
-            m_uiCurseOfTonguesTimer = 18000;
-        }
-        else
-            m_uiCurseOfTonguesTimer -= uiDiff;
-
-        //CurseOfWeakness_Timer
-        if (m_uiCurseOfWeaknessTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(), SPELL_CURSEOFWEAKNESS);
-            m_uiCurseOfWeaknessTimer = 45000;
-        }
-        else
-            m_uiCurseOfWeaknessTimer -= uiDiff;
-
-        //DemonArmor_Timer
-        if (m_uiDemonArmorTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_DEMONARMOR);
-            m_uiDemonArmorTimer = 300000;
-        }
-        else
-            m_uiDemonArmorTimer -= uiDiff;
-
-        //EnvelopingWeb_Timer
-        if (m_uiEnvelopingWebTimer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-                DoCastSpellIfCan(pTarget, SPELL_ENVELOPINGWEB);
-            m_uiEnvelopingWebTimer = 12000;
-        }
-        else
-            m_uiEnvelopingWebTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_anubshiah(Creature* pCreature)
-{
-    return new boss_anubshiahAI(pCreature);
-}
-
-void AddSC_boss_anubshiah()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_anubshiah";
-    pNewScript->GetAI = &GetAI_boss_anubshiah;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_depths/boss_coren_direbrew.cpp b/scripts/eastern_kingdoms/blackrock_depths/boss_coren_direbrew.cpp
deleted file mode 100644
index c7aaf79..0000000
--- a/scripts/eastern_kingdoms/blackrock_depths/boss_coren_direbrew.cpp
+++ /dev/null
@@ -1,28 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: boss_coren_direbrew
-SD%Complete: 0
-SDComment: Placeholder
-SDCategory: Blackrock Depths
-EndScriptData */
-
-#include "precompiled.h"
-
-void AddSC_boss_coren_direbrew()
-{
-}
diff --git a/scripts/eastern_kingdoms/blackrock_depths/boss_emperor_dagran_thaurissan.cpp b/scripts/eastern_kingdoms/blackrock_depths/boss_emperor_dagran_thaurissan.cpp
deleted file mode 100644
index 0755cce..0000000
--- a/scripts/eastern_kingdoms/blackrock_depths/boss_emperor_dagran_thaurissan.cpp
+++ /dev/null
@@ -1,260 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Emperor_Dagran_Thaurissan
-SD%Complete: 90
-SDComment: With script for Moria
-SDCategory: Blackrock Depths
-EndScriptData */
-
-#include "precompiled.h"
-#include "blackrock_depths.h"
-
-enum eEmperor
-{
-    FACTION_NEUTRAL             = 734,
-    SAY_AGGRO                   = -1230001,
-    SAY_SLAY                    = -1230002,
-
-    SPELL_HANDOFTHAURISSAN      = 17492,
-    SPELL_AVATAROFFLAME         = 15636
-};
-
-struct MANGOS_DLL_DECL boss_emperor_dagran_thaurissanAI : public ScriptedAI
-{
-    boss_emperor_dagran_thaurissanAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    uint32 m_uiHandOfThaurissan_Timer;
-    uint32 m_uiAvatarOfFlame_Timer;
-    //uint32 m_uiCounter;
-
-    void Reset()
-    {
-        m_uiHandOfThaurissan_Timer = 4000;
-        m_uiAvatarOfFlame_Timer = 25000;
-        //m_uiCounter = 0;
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        DoScriptText(SAY_AGGRO, m_creature);
-        m_creature->CallForHelp(VISIBLE_RANGE);
-    }
-
-    void JustDied(Unit* pVictim)
-    {
-        if (!m_pInstance)
-            return;
-
-        if (Creature* pPrincess = m_pInstance->GetSingleCreatureFromStorage(NPC_PRINCESS))
-        {
-            if (pPrincess->isAlive())
-            {
-                pPrincess->setFaction(FACTION_NEUTRAL);
-                pPrincess->AI()->EnterEvadeMode();
-            }
-        }
-    }
-
-    void KilledUnit(Unit* pVictim)
-    {
-        DoScriptText(SAY_SLAY, m_creature);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        if (m_uiHandOfThaurissan_Timer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM,0))
-                DoCastSpellIfCan(pTarget,SPELL_HANDOFTHAURISSAN);
-
-            //3 Hands of Thaurissan will be casted
-            //if (m_uiCounter < 3)
-            //{
-            //    m_uiHandOfThaurissan_Timer = 1000;
-            //    ++m_uiCounter;
-            //}
-            //else
-            //{
-                m_uiHandOfThaurissan_Timer = 5000;
-                //m_uiCounter = 0;
-            //}
-        }
-        else
-            m_uiHandOfThaurissan_Timer -= uiDiff;
-
-        //AvatarOfFlame_Timer
-        if (m_uiAvatarOfFlame_Timer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(),SPELL_AVATAROFFLAME);
-            m_uiAvatarOfFlame_Timer = 18000;
-        }
-        else
-            m_uiAvatarOfFlame_Timer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_emperor_dagran_thaurissan(Creature* pCreature)
-{
-    return new boss_emperor_dagran_thaurissanAI(pCreature);
-}
-
-/*######
-## boss_moira_bronzebeard
-######*/
-
-enum ePrincess
-{
-    SPELL_HEAL                  = 15586,
-    SPELL_RENEW                 = 10929,
-    SPELL_SHIELD                = 10901,
-    SPELL_MINDBLAST             = 15587,
-    SPELL_SHADOWWORDPAIN        = 15654,
-    SPELL_SMITE                 = 10934,
-    SPELL_SHADOW_BOLT           = 15537,
-    SPELL_OPEN_PORTAL           = 13912
-};
-
-struct MANGOS_DLL_DECL boss_moira_bronzebeardAI : public ScriptedAI
-{
-    boss_moira_bronzebeardAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    uint32 m_uiHeal_Timer;
-    uint32 m_uiMindBlast_Timer;
-    uint32 m_uiShadowWordPain_Timer;
-    uint32 m_uiSmite_Timer;
-
-    void Reset()
-    {
-        m_uiHeal_Timer = 12000;                                 //These times are probably wrong
-        m_uiMindBlast_Timer = 16000;
-        m_uiShadowWordPain_Timer = 2000;
-        m_uiSmite_Timer = 8000;
-    }
-
-    void AttackStart(Unit* pWho)
-    {
-        if (m_creature->Attack(pWho, false))
-        {
-            m_creature->AddThreat(pWho);
-            m_creature->SetInCombatWith(pWho);
-            pWho->SetInCombatWith(m_creature);
-
-            m_creature->GetMotionMaster()->MoveChase(pWho, 25.0f);
-        }
-    }
-
-    void JustReachedHome()
-    {
-        if (m_pInstance)
-        {
-            if (Creature* pEmperor = m_pInstance->GetSingleCreatureFromStorage(NPC_EMPEROR))
-            {
-                // if evade, then check if he is alive. If not, start make portal
-                if (!pEmperor->isAlive())
-                    m_creature->CastSpell(m_creature, SPELL_OPEN_PORTAL, false);
-            }
-        }
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        //Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        //MindBlast_Timer
-        if (m_uiMindBlast_Timer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(),SPELL_MINDBLAST);
-            m_uiMindBlast_Timer = 14000;
-        }
-        else
-            m_uiMindBlast_Timer -= uiDiff;
-
-        //ShadowWordPain_Timer
-        if (m_uiShadowWordPain_Timer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(),SPELL_SHADOWWORDPAIN);
-            m_uiShadowWordPain_Timer = 18000;
-        }
-        else
-            m_uiShadowWordPain_Timer -= uiDiff;
-
-        //Smite_Timer
-        if (m_uiSmite_Timer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(),SPELL_SMITE);
-            m_uiSmite_Timer = 10000;
-        }
-        else
-            m_uiSmite_Timer -= uiDiff;
-
-        //Heal_Timer
-        if (m_uiHeal_Timer < uiDiff)
-        {
-            if (Creature* pEmperor = m_pInstance->GetSingleCreatureFromStorage(NPC_EMPEROR))
-            {
-                if (pEmperor->isAlive() && pEmperor->GetHealthPercent() != 100.0f)
-                    DoCastSpellIfCan(pEmperor, SPELL_HEAL);
-            }
-
-            m_uiHeal_Timer = 10000;
-        }
-        else
-            m_uiHeal_Timer -= uiDiff;
-
-        //No meele?
-    }
-};
-
-CreatureAI* GetAI_boss_moira_bronzebeard(Creature* pCreature)
-{
-    return new boss_moira_bronzebeardAI(pCreature);
-}
-
-void AddSC_boss_draganthaurissan()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_emperor_dagran_thaurissan";
-    pNewScript->GetAI = &GetAI_boss_emperor_dagran_thaurissan;
-    pNewScript->RegisterSelf();
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_moira_bronzebeard";
-    pNewScript->GetAI = &GetAI_boss_moira_bronzebeard;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_depths/boss_general_angerforge.cpp b/scripts/eastern_kingdoms/blackrock_depths/boss_general_angerforge.cpp
deleted file mode 100644
index 2c20c71..0000000
--- a/scripts/eastern_kingdoms/blackrock_depths/boss_general_angerforge.cpp
+++ /dev/null
@@ -1,142 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_General_Angerforge
-SD%Complete: 100
-SDComment:
-SDCategory: Blackrock Depths
-EndScriptData */
-
-#include "precompiled.h"
-
-enum
-{
-    SPELL_MIGHTYBLOW            = 14099,
-    SPELL_HAMSTRING             = 9080,
-    SPELL_CLEAVE                = 20691,
-
-    NPC_ANVILRAGE_RESERVIST     = 8901,
-    NPC_ANVILRAGE_MEDIC         = 8894,
-};
-
-struct MANGOS_DLL_DECL boss_general_angerforgeAI : public ScriptedAI
-{
-    boss_general_angerforgeAI(Creature* pCreature) : ScriptedAI(pCreature) { Reset(); }
-
-    uint32 m_uiMightyBlowTimer;
-    uint32 m_uiHamStringTimer;
-    uint32 m_uiCleaveTimer;
-    uint32 m_uiAddsTimer;
-    bool m_bSummonedMedics;
-
-    void Reset()
-    {
-        m_uiMightyBlowTimer = 8000;
-        m_uiHamStringTimer = 12000;
-        m_uiCleaveTimer = 16000;
-        m_uiAddsTimer = 0;
-        m_bSummonedMedics = false;
-    }
-
-    void SummonAdd(uint32 uiEntry)
-    {
-        float fX, fY, fZ;
-        m_creature->GetRandomPoint(m_creature->GetPositionX(), m_creature->GetPositionY(), m_creature->GetPositionZ(), 20.0f, fX, fY, fZ);
-        m_creature->SummonCreature(uiEntry, fX, fY, fZ, 0.0f, TEMPSUMMON_TIMED_OR_DEAD_DESPAWN, 60000);
-    }
-
-    void JustSummoned(Creature* pSummoned)
-    {
-        if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-            pSummoned->AI()->AttackStart(pTarget);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        //Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        //MightyBlow_Timer
-        if (m_uiMightyBlowTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(), SPELL_MIGHTYBLOW);
-            m_uiMightyBlowTimer = 18000;
-        }
-        else
-            m_uiMightyBlowTimer -= uiDiff;
-
-        //HamString_Timer
-        if (m_uiHamStringTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(), SPELL_HAMSTRING);
-            m_uiHamStringTimer = 15000;
-        }
-        else
-            m_uiHamStringTimer -= uiDiff;
-
-        //Cleave_Timer
-        if (m_uiCleaveTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(), SPELL_CLEAVE);
-            m_uiCleaveTimer = 9000;
-        }
-        else
-            m_uiCleaveTimer -= uiDiff;
-
-        //Adds_Timer
-        if (m_creature->GetHealthPercent() < 21.0f)
-        {
-            if (m_uiAddsTimer < uiDiff)
-            {
-                // summon 3 Adds every 25s
-                SummonAdd(NPC_ANVILRAGE_RESERVIST);
-                SummonAdd(NPC_ANVILRAGE_RESERVIST);
-                SummonAdd(NPC_ANVILRAGE_RESERVIST);
-
-                m_uiAddsTimer = 25000;
-            }
-            else
-                m_uiAddsTimer -= uiDiff;
-        }
-
-        //Summon Medics
-        if (!m_bSummonedMedics && m_creature->GetHealthPercent() < 21.0f)
-        {
-            SummonAdd(NPC_ANVILRAGE_MEDIC);
-            SummonAdd(NPC_ANVILRAGE_MEDIC);
-            m_bSummonedMedics = true;
-        }
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_general_angerforge(Creature* pCreature)
-{
-    return new boss_general_angerforgeAI(pCreature);
-}
-
-void AddSC_boss_general_angerforge()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_general_angerforge";
-    pNewScript->GetAI = &GetAI_boss_general_angerforge;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_depths/boss_gorosh_the_dervish.cpp b/scripts/eastern_kingdoms/blackrock_depths/boss_gorosh_the_dervish.cpp
deleted file mode 100644
index df22713..0000000
--- a/scripts/eastern_kingdoms/blackrock_depths/boss_gorosh_the_dervish.cpp
+++ /dev/null
@@ -1,86 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Gorosh_the_Dervish
-SD%Complete: 100
-SDComment:
-SDCategory: Blackrock Depths
-EndScriptData */
-
-#include "precompiled.h"
-
-enum
-{
-    SPELL_WHIRLWIND             = 15589,
-    SPELL_MORTALSTRIKE          = 24573,
-};
-
-struct MANGOS_DLL_DECL boss_gorosh_the_dervishAI : public ScriptedAI
-{
-    boss_gorosh_the_dervishAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
-
-    uint32 m_uiWhirlWindTimer;
-    uint32 m_uiMortalStrikeTimer;
-
-    void Reset()
-    {
-        m_uiWhirlWindTimer = 12000;
-        m_uiMortalStrikeTimer = 22000;
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        //Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        //WhirlWind_Timer
-        if (m_uiWhirlWindTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_WHIRLWIND);
-            m_uiWhirlWindTimer = 15000;
-        }
-        else
-            m_uiWhirlWindTimer -= uiDiff;
-
-        //MortalStrike_Timer
-        if (m_uiMortalStrikeTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(), SPELL_MORTALSTRIKE);
-            m_uiMortalStrikeTimer = 15000;
-        }
-        else
-            m_uiMortalStrikeTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_gorosh_the_dervish(Creature* pCreature)
-{
-    return new boss_gorosh_the_dervishAI(pCreature);
-}
-
-void AddSC_boss_gorosh_the_dervish()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_gorosh_the_dervish";
-    pNewScript->GetAI = &GetAI_boss_gorosh_the_dervish;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_depths/boss_grizzle.cpp b/scripts/eastern_kingdoms/blackrock_depths/boss_grizzle.cpp
deleted file mode 100644
index d89545b..0000000
--- a/scripts/eastern_kingdoms/blackrock_depths/boss_grizzle.cpp
+++ /dev/null
@@ -1,94 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Grizzle
-SD%Complete: 100
-SDComment:
-SDCategory: Blackrock Depths
-EndScriptData */
-
-#include "precompiled.h"
-
-enum
-{
-    EMOTE_GENERIC_FRENZY_KILL   = -1000001,
-
-    SPELL_GROUNDTREMOR          = 6524,
-    SPELL_FRENZY                = 28371,
-};
-
-struct MANGOS_DLL_DECL boss_grizzleAI : public ScriptedAI
-{
-    boss_grizzleAI(Creature* pCreature) : ScriptedAI(pCreature) { Reset(); }
-
-    uint32 m_uiGroundTremorTimer;
-    uint32 m_uiFrenzyTimer;
-
-    void Reset()
-    {
-        m_uiGroundTremorTimer = 12000;
-        m_uiFrenzyTimer = 0;
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        //Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        //GroundTremor_Timer
-        if (m_uiGroundTremorTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_GROUNDTREMOR);
-            m_uiGroundTremorTimer = 8000;
-        }
-        else
-            m_uiGroundTremorTimer -= uiDiff;
-
-        //Frenzy_Timer
-        if (m_creature->GetHealthPercent() < 51.0f)
-        {
-            if (m_uiFrenzyTimer < uiDiff)
-            {
-                if (DoCastSpellIfCan(m_creature, SPELL_FRENZY) == CAST_OK)
-                {
-                    DoScriptText(EMOTE_GENERIC_FRENZY_KILL, m_creature);
-                    m_uiFrenzyTimer = 15000;
-                }
-            }
-            else
-                m_uiFrenzyTimer -= uiDiff;
-        }
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_grizzle(Creature* pCreature)
-{
-    return new boss_grizzleAI(pCreature);
-}
-
-void AddSC_boss_grizzle()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_grizzle";
-    pNewScript->GetAI = &GetAI_boss_grizzle;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_depths/boss_high_interrogator_gerstahn.cpp b/scripts/eastern_kingdoms/blackrock_depths/boss_high_interrogator_gerstahn.cpp
deleted file mode 100644
index ca64987..0000000
--- a/scripts/eastern_kingdoms/blackrock_depths/boss_high_interrogator_gerstahn.cpp
+++ /dev/null
@@ -1,114 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_High_Interrogator_Gerstahn
-SD%Complete: 100
-SDComment:
-SDCategory: Blackrock Depths
-EndScriptData */
-
-#include "precompiled.h"
-
-enum
-{
-    SPELL_SHADOWWORDPAIN        = 14032,
-    SPELL_MANABURN              = 14033,
-    SPELL_PSYCHICSCREAM         = 13704,
-    SPELL_SHADOWSHIELD          = 12040
-};
-
-struct MANGOS_DLL_DECL boss_high_interrogator_gerstahnAI : public ScriptedAI
-{
-    boss_high_interrogator_gerstahnAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
-
-    uint32 m_uiShadowWordPainTimer;
-    uint32 m_uiManaBurnTimer;
-    uint32 m_uiPsychicScreamTimer;
-    uint32 m_uiShadowShieldTimer;
-
-    void Reset()
-    {
-        m_uiShadowWordPainTimer = 4000;
-        m_uiManaBurnTimer = 14000;
-        m_uiPsychicScreamTimer = 32000;
-        m_uiShadowShieldTimer = 8000;
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        //Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        //ShadowWordPain_Timer
-        if (m_uiShadowWordPainTimer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-                DoCastSpellIfCan(pTarget, SPELL_SHADOWWORDPAIN);
-
-            m_uiShadowWordPainTimer = 7000;
-        }
-        else
-            m_uiShadowWordPainTimer -= uiDiff;
-
-        //ManaBurn_Timer
-        if (m_uiManaBurnTimer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0, SPELL_MANABURN, SELECT_FLAG_POWER_MANA))
-                DoCastSpellIfCan(pTarget, SPELL_MANABURN);
-
-            m_uiManaBurnTimer = 10000;
-        }
-        else
-            m_uiManaBurnTimer -= uiDiff;
-
-        //PsychicScream_Timer
-        if (m_uiPsychicScreamTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_PSYCHICSCREAM);
-            m_uiPsychicScreamTimer = 30000;
-        }
-        else
-            m_uiPsychicScreamTimer -= uiDiff;
-
-        //ShadowShield_Timer
-        if (m_uiShadowShieldTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_SHADOWSHIELD);
-            m_uiShadowShieldTimer = 25000;
-        }
-        else
-            m_uiShadowShieldTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_high_interrogator_gerstahn(Creature* pCreature)
-{
-    return new boss_high_interrogator_gerstahnAI(pCreature);
-}
-
-void AddSC_boss_high_interrogator_gerstahn()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_high_interrogator_gerstahn";
-    pNewScript->GetAI = &GetAI_boss_high_interrogator_gerstahn;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_depths/boss_magmus.cpp b/scripts/eastern_kingdoms/blackrock_depths/boss_magmus.cpp
deleted file mode 100644
index 25dc1a2..0000000
--- a/scripts/eastern_kingdoms/blackrock_depths/boss_magmus.cpp
+++ /dev/null
@@ -1,114 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Magmus
-SD%Complete: 80
-SDComment: Missing pre-event to open doors
-SDCategory: Blackrock Depths
-EndScriptData */
-
-#include "precompiled.h"
-#include "blackrock_depths.h"
-
-enum
-{
-    SPELL_FIERYBURST        = 13900,
-    SPELL_WARSTOMP          = 24375
-};
-
-struct MANGOS_DLL_DECL boss_magmusAI : public ScriptedAI
-{
-    boss_magmusAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    uint32 m_uiFieryBurstTimer;
-    uint32 m_uiWarStompTimer;
-
-    void Reset()
-    {
-        m_uiFieryBurstTimer = 5000;
-        m_uiWarStompTimer = 0;
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_IRON_HALL, IN_PROGRESS);
-    }
-
-    void JustReachedHome()
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_IRON_HALL, FAIL);
-    }
-
-    void JustDied(Unit* pVictim)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_IRON_HALL, DONE);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        //Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        //FieryBurst_Timer
-        if (m_uiFieryBurstTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(), SPELL_FIERYBURST);
-            m_uiFieryBurstTimer = 6000;
-        }
-        else
-            m_uiFieryBurstTimer -= uiDiff;
-
-        //WarStomp_Timer
-        if (m_creature->GetHealthPercent() < 51.0f)
-        {
-            if (m_uiWarStompTimer < uiDiff)
-            {
-                DoCastSpellIfCan(m_creature, SPELL_WARSTOMP);
-                m_uiWarStompTimer = 8000;
-            }
-            else
-                m_uiWarStompTimer -= uiDiff;
-        }
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_magmus(Creature* pCreature)
-{
-    return new boss_magmusAI(pCreature);
-}
-
-void AddSC_boss_magmus()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_magmus";
-    pNewScript->GetAI = &GetAI_boss_magmus;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_depths/boss_tomb_of_seven.cpp b/scripts/eastern_kingdoms/blackrock_depths/boss_tomb_of_seven.cpp
deleted file mode 100644
index c8096a9..0000000
--- a/scripts/eastern_kingdoms/blackrock_depths/boss_tomb_of_seven.cpp
+++ /dev/null
@@ -1,325 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Tomb_Of_Seven
-SD%Complete: 90
-SDComment: Learning Smelt Dark Iron if tribute quest rewarded. Basic event implemented. Correct order and timing of event is unknown.
-SDCategory: Blackrock Depths
-EndScriptData */
-
-#include "precompiled.h"
-#include "blackrock_depths.h"
-
-enum
-{
-    FACTION_NEUTRAL             = 734,
-    FACTION_HOSTILE             = 754,
-
-    SPELL_SMELT_DARK_IRON       = 14891,
-    SPELL_LEARN_SMELT           = 14894,
-    QUEST_SPECTRAL_CHALICE      = 4083,
-    SKILLPOINT_MIN              = 230
-};
-
-#define GOSSIP_ITEM_TEACH_1 "Teach me the art of smelting dark iron"
-#define GOSSIP_ITEM_TEACH_2 "Continue..."
-#define GOSSIP_ITEM_TRIBUTE "I want to pay tribute"
-
-bool GossipHello_boss_gloomrel(Player* pPlayer, Creature* pCreature)
-{
-    if (ScriptedInstance* pInstance = (ScriptedInstance*)pCreature->GetInstanceData())
-    {
-        if (pInstance->GetData(TYPE_TOMB_OF_SEVEN) == NOT_STARTED)
-        {
-            if (pPlayer->GetQuestRewardStatus(QUEST_SPECTRAL_CHALICE) &&
-                pPlayer->GetSkillValue(SKILL_MINING) >= SKILLPOINT_MIN &&
-                !pPlayer->HasSpell(SPELL_SMELT_DARK_IRON))
-                pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_TEACH_1, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 1);
-
-            if (!pPlayer->GetQuestRewardStatus(QUEST_SPECTRAL_CHALICE) &&
-                pPlayer->GetSkillValue(SKILL_MINING) >= SKILLPOINT_MIN)
-                pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_TRIBUTE, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 2);
-        }
-    }
-    pPlayer->SEND_GOSSIP_MENU(pPlayer->GetGossipTextId(pCreature), pCreature->GetObjectGuid());
-    return true;
-}
-
-bool GossipSelect_boss_gloomrel(Player* pPlayer, Creature* pCreature, uint32 uiSender, uint32 uiAction)
-{
-    switch(uiAction)
-    {
-        case GOSSIP_ACTION_INFO_DEF+1:
-            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_TEACH_2, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 11);
-            pPlayer->SEND_GOSSIP_MENU(2606, pCreature->GetObjectGuid());
-            break;
-        case GOSSIP_ACTION_INFO_DEF+11:
-            pPlayer->CLOSE_GOSSIP_MENU();
-            pCreature->CastSpell(pPlayer, SPELL_LEARN_SMELT, false);
-            break;
-        case GOSSIP_ACTION_INFO_DEF+2:
-            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, "[PH] Continue...", GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 22);
-            pPlayer->SEND_GOSSIP_MENU(2604, pCreature->GetObjectGuid());
-            break;
-        case GOSSIP_ACTION_INFO_DEF+22:
-            pPlayer->CLOSE_GOSSIP_MENU();
-            if (ScriptedInstance* pInstance = (ScriptedInstance*)pCreature->GetInstanceData())
-            {
-                //are 5 minutes expected? go template may have data to despawn when used at quest
-                pInstance->DoRespawnGameObject(GO_SPECTRAL_CHALICE, MINUTE*5);
-            }
-            break;
-    }
-    return true;
-}
-
-enum
-{
-    SPELL_SHADOWBOLTVOLLEY              = 15245,
-    SPELL_IMMOLATE                      = 12742,
-    SPELL_CURSEOFWEAKNESS               = 12493,
-    SPELL_DEMONARMOR                    = 13787,
-    SPELL_SUMMON_VOIDWALKERS            = 15092,
-
-    SAY_DOOMREL_START_EVENT             = -1230003,
-
-    MAX_DWARF                           = 7
-};
-
-#define GOSSIP_ITEM_CHALLENGE   "Your bondage is at an end, Doom'rel. I challenge you!"
-
-struct MANGOS_DLL_DECL boss_doomrelAI : public ScriptedAI
-{
-    boss_doomrelAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    uint32 m_uiShadowVolley_Timer;
-    uint32 m_uiImmolate_Timer;
-    uint32 m_uiCurseOfWeakness_Timer;
-    uint32 m_uiDemonArmor_Timer;
-    uint32 m_uiCallToFight_Timer;
-    uint8 m_uiDwarfRound;
-    bool m_bHasSummoned;
-
-    void Reset()
-    {
-        m_uiShadowVolley_Timer = 10000;
-        m_uiImmolate_Timer = 18000;
-        m_uiCurseOfWeakness_Timer = 5000;
-        m_uiDemonArmor_Timer = 16000;
-        m_uiCallToFight_Timer = 0;
-        m_uiDwarfRound = 0;
-        m_bHasSummoned = false;
-    }
-
-    void JustReachedHome()
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_TOMB_OF_SEVEN, FAIL);
-    }
-
-    void JustDied(Unit *victim)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_TOMB_OF_SEVEN, DONE);
-    }
-
-    void JustSummoned(Creature* pSummoned)
-    {
-        if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM,0))
-            pSummoned->AI()->AttackStart(pTarget);
-    }
-
-    Creature* GetDwarfForPhase(uint8 uiPhase)
-    {
-        switch(uiPhase)
-        {
-            case 0:
-                return m_pInstance->GetSingleCreatureFromStorage(NPC_ANGERREL);
-            case 1:
-                return m_pInstance->GetSingleCreatureFromStorage(NPC_SEETHREL);
-            case 2:
-                return m_pInstance->GetSingleCreatureFromStorage(NPC_DOPEREL);
-            case 3:
-                return m_pInstance->GetSingleCreatureFromStorage(NPC_GLOOMREL);
-            case 4:
-                return m_pInstance->GetSingleCreatureFromStorage(NPC_VILEREL);
-            case 5:
-                return m_pInstance->GetSingleCreatureFromStorage(NPC_HATEREL);
-            case 6:
-                return m_creature;
-        }
-        return NULL;
-    }
-
-    void CallToFight(bool bStartFight)
-    {
-        if (Creature* pDwarf = GetDwarfForPhase(m_uiDwarfRound))
-        {
-            if (bStartFight && pDwarf->isAlive())
-            {
-                pDwarf->setFaction(FACTION_HOSTILE);
-                pDwarf->SetInCombatWithZone();              // attackstart
-            }
-            else
-            {
-                if (!pDwarf->isAlive() || pDwarf->isDead())
-                    pDwarf->Respawn();
-
-                pDwarf->setFaction(FACTION_NEUTRAL);
-            }
-        }
-    }
-
-    void UpdateAI(const uint32 diff)
-    {
-        if (m_pInstance)
-        {
-            if (m_pInstance->GetData(TYPE_TOMB_OF_SEVEN) == IN_PROGRESS)
-            {
-                if (m_uiDwarfRound < MAX_DWARF)
-                {
-                    if (m_uiCallToFight_Timer < diff)
-                    {
-                        CallToFight(true);
-                        ++m_uiDwarfRound;
-                        m_uiCallToFight_Timer = 30000;
-                    }
-                    else
-                        m_uiCallToFight_Timer -= diff;
-                }
-            }
-            else if (m_pInstance->GetData(TYPE_TOMB_OF_SEVEN) == FAIL)
-            {
-                for (m_uiDwarfRound = 0; m_uiDwarfRound < MAX_DWARF; ++m_uiDwarfRound)
-                    CallToFight(false);
-
-                m_uiDwarfRound = 0;
-                m_uiCallToFight_Timer = 0;
-
-                if (m_pInstance)
-                    m_pInstance->SetData(TYPE_TOMB_OF_SEVEN, NOT_STARTED);
-            }
-        }
-
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        //ShadowVolley_Timer
-        if (m_uiShadowVolley_Timer < diff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(),SPELL_SHADOWBOLTVOLLEY);
-            m_uiShadowVolley_Timer = 12000;
-        }
-        else
-            m_uiShadowVolley_Timer -= diff;
-
-        //Immolate_Timer
-        if (m_uiImmolate_Timer < diff)
-        {
-            if (Unit* target = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM,0))
-                DoCastSpellIfCan(target,SPELL_IMMOLATE);
-
-            m_uiImmolate_Timer = 25000;
-        }
-        else
-            m_uiImmolate_Timer -= diff;
-
-        //CurseOfWeakness_Timer
-        if (m_uiCurseOfWeakness_Timer < diff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(),SPELL_CURSEOFWEAKNESS);
-            m_uiCurseOfWeakness_Timer = 45000;
-        }
-        else
-            m_uiCurseOfWeakness_Timer -= diff;
-
-        //DemonArmor_Timer
-        if (m_uiDemonArmor_Timer < diff)
-        {
-            DoCastSpellIfCan(m_creature,SPELL_DEMONARMOR);
-            m_uiDemonArmor_Timer = 300000;
-        }
-        else
-            m_uiDemonArmor_Timer -= diff;
-
-        //Summon Voidwalkers
-        if (!m_bHasSummoned && m_creature->GetHealthPercent() <= 50.0f)
-        {
-            m_creature->CastSpell(m_creature, SPELL_SUMMON_VOIDWALKERS, true);
-            m_bHasSummoned = true;
-        }
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_doomrel(Creature* pCreature)
-{
-    return new boss_doomrelAI(pCreature);
-}
-
-bool GossipHello_boss_doomrel(Player* pPlayer, Creature* pCreature)
-{
-    if (ScriptedInstance* pInstance = (ScriptedInstance*)pCreature->GetInstanceData())
-    {
-        if (pInstance->GetData(TYPE_TOMB_OF_SEVEN) == NOT_STARTED)
-            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_CHALLENGE, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 1);
-    }
-
-    pPlayer->SEND_GOSSIP_MENU(2601, pCreature->GetObjectGuid());
-    return true;
-}
-
-bool GossipSelect_boss_doomrel(Player* pPlayer, Creature* pCreature, uint32 uiSender, uint32 uiAction)
-{
-    switch(uiAction)
-    {
-        case GOSSIP_ACTION_INFO_DEF+1:
-            pPlayer->CLOSE_GOSSIP_MENU();
-            DoScriptText(SAY_DOOMREL_START_EVENT, pCreature, pPlayer);
-            // start event
-            if (ScriptedInstance* pInstance = (ScriptedInstance*)pCreature->GetInstanceData())
-                pInstance->SetData(TYPE_TOMB_OF_SEVEN, IN_PROGRESS);
-
-            break;
-    }
-    return true;
-}
-
-void AddSC_boss_tomb_of_seven()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_gloomrel";
-    pNewScript->pGossipHello = &GossipHello_boss_gloomrel;
-    pNewScript->pGossipSelect = &GossipSelect_boss_gloomrel;
-    pNewScript->RegisterSelf();
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_doomrel";
-    pNewScript->GetAI = &GetAI_boss_doomrel;
-    pNewScript->pGossipHello = &GossipHello_boss_doomrel;
-    pNewScript->pGossipSelect = &GossipSelect_boss_doomrel;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_depths/instance_blackrock_depths.cpp b/scripts/eastern_kingdoms/blackrock_depths/instance_blackrock_depths.cpp
deleted file mode 100644
index 7474eed..0000000
--- a/scripts/eastern_kingdoms/blackrock_depths/instance_blackrock_depths.cpp
+++ /dev/null
@@ -1,305 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Instance_Blackrock_Depths
-SD%Complete: 80
-SDComment:
-SDCategory: Blackrock Depths
-EndScriptData */
-
-#include "precompiled.h"
-#include "blackrock_depths.h"
-
-instance_blackrock_depths::instance_blackrock_depths(Map* pMap) : ScriptedInstance(pMap),
-    m_uiBarAleCount(0),
-    m_uiCofferDoorsOpened(0),
-
-    m_fArenaCenterX(0.0f),
-    m_fArenaCenterY(0.0f),
-    m_fArenaCenterZ(0.0f)
-{
-    Initialize();
-}
-
-void instance_blackrock_depths::Initialize()
-{
-    memset(&m_auiEncounter, 0, sizeof(m_auiEncounter));
-}
-
-void instance_blackrock_depths::OnCreatureCreate(Creature* pCreature)
-{
-    switch(pCreature->GetEntry())
-    {
-        case NPC_EMPEROR:
-        case NPC_PRINCESS:
-        case NPC_PHALANX:
-        case NPC_HATEREL:
-        case NPC_ANGERREL:
-        case NPC_VILEREL:
-        case NPC_GLOOMREL:
-        case NPC_SEETHREL:
-        case NPC_DOPEREL:
-            m_mNpcEntryGuidStore[pCreature->GetEntry()] = pCreature->GetObjectGuid();
-            break;
-
-        case NPC_WARBRINGER_CONST:
-            // Golems not in the Relict Vault?
-            if (std::abs(pCreature->GetPositionZ() - aVaultPositions[2]) > 1.0f || !pCreature->IsWithinDist2d(aVaultPositions[0], aVaultPositions[1], 20.0f))
-                break;
-            // Golems in Relict Vault need to have a stoned aura, set manually to prevent reapply when reached home
-            pCreature->CastSpell(pCreature, SPELL_STONED, true);
-            // Store the Relict Vault Golems into m_sVaultNpcGuids
-        case NPC_WATCHER_DOOMGRIP:
-            m_sVaultNpcGuids.insert(pCreature->GetObjectGuid());
-            break;
-    }
-}
-
-void instance_blackrock_depths::OnObjectCreate(GameObject* pGo)
-{
-    switch(pGo->GetEntry())
-    {
-        case GO_ARENA_1:
-        case GO_ARENA_2:
-        case GO_ARENA_3:
-        case GO_ARENA_4:
-        case GO_SHADOW_LOCK:
-        case GO_SHADOW_MECHANISM:
-        case GO_SHADOW_GIANT_DOOR:
-        case GO_SHADOW_DUMMY:
-        case GO_BAR_KEG_SHOT:
-        case GO_BAR_KEG_TRAP:
-        case GO_BAR_DOOR:
-        case GO_TOMB_ENTER:
-        case GO_TOMB_EXIT:
-        case GO_LYCEUM:
-        case GO_GOLEM_ROOM_N:
-        case GO_GOLEM_ROOM_S:
-        case GO_THRONE_ROOM:
-        case GO_SPECTRAL_CHALICE:
-        case GO_CHEST_SEVEN:
-        case GO_ARENA_SPOILS:
-        case GO_SECRET_DOOR:
-            break;
-
-        default:
-            return;
-    }
-    m_mGoEntryGuidStore[pGo->GetEntry()] = pGo->GetObjectGuid();
-}
-
-void instance_blackrock_depths::SetData(uint32 uiType, uint32 uiData)
-{
-    switch(uiType)
-    {
-        case TYPE_RING_OF_LAW:
-            // If finished the arena event after theldren fight
-            if (uiData == DONE && m_auiEncounter[0] == SPECIAL)
-                DoRespawnGameObject(GO_ARENA_SPOILS, HOUR);
-            m_auiEncounter[0] = uiData;
-            break;
-        case TYPE_VAULT:
-            if (uiData == SPECIAL)
-            {
-                ++m_uiCofferDoorsOpened;
-
-                if (m_uiCofferDoorsOpened == MAX_RELIC_DOORS)
-                {
-                    SetData(TYPE_VAULT, IN_PROGRESS);
-
-                    Creature* pConstruct = NULL;
-
-                    // Activate vault constructs
-                    for (GuidSet::const_iterator itr = m_sVaultNpcGuids.begin(); itr != m_sVaultNpcGuids.end(); ++itr)
-                    {
-                        if (pConstruct = instance->GetCreature(*itr))
-                            pConstruct->RemoveAurasDueToSpell(SPELL_STONED);
-                    }
-
-                    if (!pConstruct)
-                        return;
-
-                    // Summon doomgrip
-                    pConstruct->SummonCreature(NPC_WATCHER_DOOMGRIP, aVaultPositions[0], aVaultPositions[1], aVaultPositions[2], aVaultPositions[3], TEMPSUMMON_DEAD_DESPAWN, 0);
-                }
-                // No need to store in this case
-                return;
-            }
-            if (uiData == DONE)
-                DoUseDoorOrButton(GO_SECRET_DOOR);
-            m_auiEncounter[1] = uiData;
-            break;
-        case TYPE_BAR:
-            if (uiData == SPECIAL)
-                ++m_uiBarAleCount;
-            else
-                m_auiEncounter[2] = uiData;
-            break;
-        case TYPE_TOMB_OF_SEVEN:
-            switch(uiData)
-            {
-                case IN_PROGRESS:
-                    DoUseDoorOrButton(GO_TOMB_ENTER);
-                    break;
-                case FAIL:
-                    if (m_auiEncounter[3] == IN_PROGRESS)   // Prevent use more than one time
-                        DoUseDoorOrButton(GO_TOMB_ENTER);
-                    break;
-                case DONE:
-                    DoRespawnGameObject(GO_CHEST_SEVEN, HOUR);
-                    DoUseDoorOrButton(GO_TOMB_EXIT);
-                    DoUseDoorOrButton(GO_TOMB_ENTER);
-                    break;
-            }
-            m_auiEncounter[3] = uiData;
-            break;
-        case TYPE_LYCEUM:
-            if (uiData == DONE)
-            {
-                DoUseDoorOrButton(GO_GOLEM_ROOM_N);
-                DoUseDoorOrButton(GO_GOLEM_ROOM_S);
-            }
-            m_auiEncounter[4] = uiData;
-            break;
-        case TYPE_IRON_HALL:
-            switch(uiData)
-            {
-                case IN_PROGRESS:
-                    DoUseDoorOrButton(GO_GOLEM_ROOM_N);
-                    DoUseDoorOrButton(GO_GOLEM_ROOM_S);
-                    break;
-                case FAIL:
-                    DoUseDoorOrButton(GO_GOLEM_ROOM_N);
-                    DoUseDoorOrButton(GO_GOLEM_ROOM_S);
-                    break;
-                case DONE:
-                    DoUseDoorOrButton(GO_GOLEM_ROOM_N);
-                    DoUseDoorOrButton(GO_GOLEM_ROOM_S);
-                    DoUseDoorOrButton(GO_THRONE_ROOM);
-                    break;
-            }
-            m_auiEncounter[5] = uiData;
-            break;
-    }
-
-    if (uiData == DONE)
-    {
-        OUT_SAVE_INST_DATA;
-
-        std::ostringstream saveStream;
-        saveStream << m_auiEncounter[0] << " " << m_auiEncounter[1] << " " << m_auiEncounter[2] << " "
-            << m_auiEncounter[3] << " " << m_auiEncounter[4] << " " << m_auiEncounter[5];
-
-        m_strInstData = saveStream.str();
-
-        SaveToDB();
-        OUT_SAVE_INST_DATA_COMPLETE;
-    }
-}
-
-uint32 instance_blackrock_depths::GetData(uint32 uiType)
-{
-    switch(uiType)
-    {
-        case TYPE_RING_OF_LAW:
-            return m_auiEncounter[0];
-        case TYPE_VAULT:
-            return m_auiEncounter[1];
-        case TYPE_BAR:
-            if (m_auiEncounter[2] == IN_PROGRESS && m_uiBarAleCount == 3)
-                return SPECIAL;
-            else
-                return m_auiEncounter[2];
-        case TYPE_TOMB_OF_SEVEN:
-            return m_auiEncounter[3];
-        case TYPE_LYCEUM:
-            return m_auiEncounter[4];
-        case TYPE_IRON_HALL:
-            return m_auiEncounter[5];
-        default:
-            return 0;
-    }
-}
-
-void instance_blackrock_depths::Load(const char* chrIn)
-{
-    if (!chrIn)
-    {
-        OUT_LOAD_INST_DATA_FAIL;
-        return;
-    }
-
-    OUT_LOAD_INST_DATA(chrIn);
-
-    std::istringstream loadStream(chrIn);
-    loadStream >> m_auiEncounter[0] >> m_auiEncounter[1] >> m_auiEncounter[2] >> m_auiEncounter[3]
-        >> m_auiEncounter[4] >> m_auiEncounter[5];
-
-    for(uint8 i = 0; i < MAX_ENCOUNTER; ++i)
-        if (m_auiEncounter[i] == IN_PROGRESS)
-            m_auiEncounter[i] = NOT_STARTED;
-
-    OUT_LOAD_INST_DATA_COMPLETE;
-}
-
-void instance_blackrock_depths::OnCreatureEvade(Creature* pCreature)
-{
-    if (GetData(TYPE_RING_OF_LAW) == IN_PROGRESS || GetData(TYPE_RING_OF_LAW) == SPECIAL)
-    {
-        for (uint8 i = 0; i < countof(aArenaNPCs); ++i)
-        {
-            if (pCreature->GetEntry() == aArenaNPCs[i])
-            {
-                 SetData(TYPE_RING_OF_LAW, FAIL);
-                 return;
-             }
-        }
-    }
-}
-
-void instance_blackrock_depths::OnCreatureDeath(Creature* pCreature)
-{
-    switch(pCreature->GetEntry())
-    {
-        case NPC_WARBRINGER_CONST:
-        case NPC_WATCHER_DOOMGRIP:
-            if (GetData(TYPE_VAULT) == IN_PROGRESS)
-            {
-                m_sVaultNpcGuids.erase(pCreature->GetObjectGuid());
-
-                // If all event npcs dead then set event to done
-                if (m_sVaultNpcGuids.empty())
-                    SetData(TYPE_VAULT, DONE);
-            }
-            break;
-    }
-}
-
-InstanceData* GetInstanceData_instance_blackrock_depths(Map* pMap)
-{
-    return new instance_blackrock_depths(pMap);
-}
-
-void AddSC_instance_blackrock_depths()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "instance_blackrock_depths";
-    pNewScript->GetInstanceData = &GetInstanceData_instance_blackrock_depths;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_caverns/blackrock_caverns.h b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_caverns/blackrock_caverns.h
new file mode 100644
index 0000000..56a35aa
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_caverns/blackrock_caverns.h
@@ -0,0 +1,4 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software licensed under GPL version 2
+ * Please see the included DOCS/LICENSE.TXT for more information */
+ 
\ No newline at end of file
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_caverns/boss_beauty.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_caverns/boss_beauty.cpp
new file mode 100644
index 0000000..54be30d
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_caverns/boss_beauty.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_beauty
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Blackrock Caverns
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_beauty()
+{
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_caverns/boss_corla.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_caverns/boss_corla.cpp
new file mode 100644
index 0000000..0af5e8d
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_caverns/boss_corla.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_corla
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Blackrock Caverns
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_corla()
+{
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_caverns/boss_karsh_steelbender.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_caverns/boss_karsh_steelbender.cpp
new file mode 100644
index 0000000..7e4a463
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_caverns/boss_karsh_steelbender.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_karsh_steelbender
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Blackrock Caverns
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_karsh_steelbender()
+{
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_caverns/boss_lord_obsidius.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_caverns/boss_lord_obsidius.cpp
new file mode 100644
index 0000000..d41ffcc
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_caverns/boss_lord_obsidius.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_lord_obsidius
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Blackrock Caverns
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_lord_obsidius()
+{
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_caverns/boss_romogg.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_caverns/boss_romogg.cpp
new file mode 100644
index 0000000..5c7dcf6
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_caverns/boss_romogg.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_romogg
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Blackrock Caverns
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_romogg()
+{
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_caverns/instance_blackrock_caverns.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_caverns/instance_blackrock_caverns.cpp
new file mode 100644
index 0000000..098a038
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_caverns/instance_blackrock_caverns.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: instance_blackrock_caverns
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Blackrock Caverns
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_instance_blackrock_caverns()
+{
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/blackrock_depths.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/blackrock_depths.cpp
new file mode 100644
index 0000000..60e01df
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/blackrock_depths.cpp
@@ -0,0 +1,858 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Blackrock_Depths
+SD%Complete: 80
+SDComment: Quest support: 4001, 4342, 7604, 9015. Vendor Lokhtos Darkbargainer.
+SDCategory: Blackrock Depths
+EndScriptData */
+
+/* ContentData
+go_shadowforge_brazier
+go_relic_coffer_door
+at_ring_of_law
+npc_grimstone
+mob_phalanx
+npc_kharan_mighthammer
+npc_lokhtos_darkbargainer
+EndContentData */
+
+#include "precompiled.h"
+#include "blackrock_depths.h"
+#include "escort_ai.h"
+
+/*######
+## go_shadowforge_brazier
+######*/
+
+bool GOUse_go_shadowforge_brazier(Player* pPlayer, GameObject* pGo)
+{
+    if (ScriptedInstance* pInstance = (ScriptedInstance*)pGo->GetInstanceData())
+    {
+        if (pInstance->GetData(TYPE_LYCEUM) == IN_PROGRESS)
+            pInstance->SetData(TYPE_LYCEUM, DONE);
+        else
+            pInstance->SetData(TYPE_LYCEUM, IN_PROGRESS);
+    }
+    return false;
+}
+
+/*######
+## go_relic_coffer_door
+######*/
+
+bool GOUse_go_relic_coffer_door(Player* pPlayer, GameObject* pGo)
+{
+    if (ScriptedInstance* pInstance = (ScriptedInstance*)pGo->GetInstanceData())
+    {
+        // check if the event is already done
+        if (pInstance->GetData(TYPE_VAULT) != DONE && pInstance->GetData(TYPE_VAULT) != IN_PROGRESS)
+            pInstance->SetData(TYPE_VAULT, SPECIAL);
+    }
+
+    return false;
+}
+
+/*######
+## npc_grimstone
+######*/
+
+/* Notes about this event:
+ * Visual: Npc Grimstone should use some visual spell when appear/ disappear / opening/ closing doors
+ * Texts: The texts and their positions need confirmation
+ * Event timer might also need adjustment
+ * Quest-Event: This needs to be clearified - there is some suggestion, that Theldren&Adds also might come as first wave.
+ */
+
+enum
+{
+    SAY_START_1                     = -1230004,
+    SAY_START_2                     = -1230005,
+    SAY_OPEN_EAST_GATE              = -1230006,
+    SAY_SUMMON_BOSS_1               = -1230007,
+    SAY_SUMMON_BOSS_2               = -1230008,
+    SAY_OPEN_NORTH_GATE             = -1230009,
+
+    NPC_GRIMSTONE                   = 10096,
+    DATA_BANNER_BEFORE_EVENT        = 5,
+
+    //4 or 6 in total? 1+2+1 / 2+2+2 / 3+3. Depending on this, code should be changed.
+    MAX_MOB_AMOUNT                  = 4,
+    MAX_THELDREN_ADDS               = 4,
+    MAX_POSSIBLE_THELDREN_ADDS      = 8,
+
+    SPELL_SUMMON_THELRIN_DND        = 27517,
+    /* Other spells used by Grimstone
+    SPELL_ASHCROMBES_TELEPORT_A     = 15742
+    SPELL_ASHCROMBES_TELEPORT_B     = 6422,
+    SPELL_ARENA_FLASH_A             = 15737,
+    SPELL_ARENA_FLASH_B             = 15739,
+    */
+
+    QUEST_THE_CHALLENGE             = 9015,
+    NPC_THELDREN_QUEST_CREDIT       = 16166,
+};
+
+enum SpawnPosition
+{
+    POS_EAST                        = 0,
+    POS_NORTH                       = 1,
+    POS_GRIMSTONE                   = 2,
+};
+
+static const float aSpawnPositions[3][4] =
+{
+    {608.960f, -235.322f, -53.907f, 1.857f},                // Ring mob spawn position
+    {644.300f, -175.989f, -53.739f, 3.418f},                // Ring boss spawn position
+    {625.559f, -205.618f, -52.735f, 2.609f}                 // Grimstone spawn position
+};
+
+static const uint32 aGladiator[MAX_POSSIBLE_THELDREN_ADDS] = {NPC_LEFTY, NPC_ROTFANG, NPC_SNOKH, NPC_MALGEN, NPC_KORV, NPC_REZZNIK, NPC_VAJASHNI, NPC_VOLIDA};
+static const uint32 aRingMob[] = {NPC_WORM, NPC_STINGER, NPC_SCREECHER, NPC_THUNDERSNOUT, NPC_CREEPER, NPC_BEETLE};
+static const uint32 aRingBoss[] = {NPC_GOROSH, NPC_GRIZZLE, NPC_EVISCERATOR, NPC_OKTHOR, NPC_ANUBSHIAH, NPC_HEDRUM};
+
+enum Phases
+{
+    PHASE_MOBS                      = 0,
+    PHASE_BOSS                      = 2,
+    PHASE_GLADIATORS                = 3,
+};
+
+bool AreaTrigger_at_ring_of_law(Player* pPlayer, AreaTriggerEntry const* pAt)
+{
+    if (instance_blackrock_depths* pInstance = (instance_blackrock_depths*)pPlayer->GetInstanceData())
+    {
+        if (pInstance->GetData(TYPE_RING_OF_LAW) == IN_PROGRESS || pInstance->GetData(TYPE_RING_OF_LAW) == DONE || pInstance->GetData(TYPE_RING_OF_LAW) == SPECIAL)
+            return false;
+
+        if (pPlayer->isGameMaster())
+            return false;
+
+        pInstance->SetData(TYPE_RING_OF_LAW, pInstance->GetData(TYPE_RING_OF_LAW) == DATA_BANNER_BEFORE_EVENT ? SPECIAL : IN_PROGRESS);
+
+        pPlayer->SummonCreature(NPC_GRIMSTONE, aSpawnPositions[POS_GRIMSTONE][0], aSpawnPositions[POS_GRIMSTONE][1], aSpawnPositions[POS_GRIMSTONE][2], aSpawnPositions[POS_GRIMSTONE][3], TEMPSUMMON_DEAD_DESPAWN, 0);
+        pInstance->SetArenaCenterCoords(pAt->x, pAt->y, pAt->z);
+
+        return false;
+    }
+    return false;
+}
+
+/*######
+## npc_grimstone
+######*/
+
+struct MANGOS_DLL_DECL npc_grimstoneAI : public npc_escortAI
+{
+    npc_grimstoneAI(Creature* pCreature) : npc_escortAI(pCreature)
+    {
+        m_pInstance = (instance_blackrock_depths*)pCreature->GetInstanceData();
+        m_uiMobSpawnId = urand(0, 5);
+        // Select MAX_THELDREN_ADDS(4) random adds for Theldren encounter
+        uint8 uiCount = 0;
+        for (uint8 i = 0; i < MAX_POSSIBLE_THELDREN_ADDS && uiCount < MAX_THELDREN_ADDS; ++i)
+        {
+            if (urand(0, 1) || i >= MAX_POSSIBLE_THELDREN_ADDS - MAX_THELDREN_ADDS + uiCount)
+            {
+                m_uiGladiatorId[uiCount] = aGladiator[i];
+                ++uiCount;
+            }
+        }
+
+        Reset();
+    }
+
+    instance_blackrock_depths* m_pInstance;
+
+    uint8 m_uiEventPhase;
+    uint32 m_uiEventTimer;
+
+    uint8 m_uiMobSpawnId;
+    uint8 m_uiMobDeadCount;
+
+    Phases m_uiPhase;
+
+    uint32 m_uiGladiatorId[MAX_THELDREN_ADDS];
+
+    GuidList m_lSummonedGUIDList;
+
+    void Reset()
+    {
+        m_creature->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NON_ATTACKABLE);
+
+        m_uiEventTimer    = 1000;
+        m_uiEventPhase    = 0;
+        m_uiMobDeadCount  = 0;
+
+        m_uiPhase = PHASE_MOBS;
+    }
+
+    void JustSummoned(Creature* pSummoned)
+    {
+        if (!m_pInstance)
+            return;
+
+        // Ring mob or boss summoned
+        float fX, fY, fZ;
+        float fcX, fcY, fcZ;
+        m_pInstance->GetArenaCenterCoords(fX, fY, fZ);
+        m_creature->GetRandomPoint(fX, fY, fZ, 10.0f, fcX, fcY, fcZ);
+        pSummoned->GetMotionMaster()->MovePoint(1, fcX, fcY, fcZ);
+
+        m_lSummonedGUIDList.push_back(pSummoned->GetObjectGuid());
+    }
+
+    void DoChallengeQuestCredit()
+    {
+        Map::PlayerList const &PlayerList = m_creature->GetMap()->GetPlayers();
+
+        for (Map::PlayerList::const_iterator itr = PlayerList.begin(); itr != PlayerList.end(); ++itr)
+        {
+            Player* pPlayer = itr->getSource();
+            if (pPlayer && pPlayer->GetQuestStatus(QUEST_THE_CHALLENGE) == QUEST_STATUS_INCOMPLETE)
+                pPlayer->KilledMonsterCredit(NPC_THELDREN_QUEST_CREDIT);
+        }
+    }
+
+    void SummonedCreatureJustDied(Creature* pSummoned)
+    {
+        ++m_uiMobDeadCount;
+
+        switch (m_uiPhase)
+        {
+            case PHASE_MOBS:                                // Ring mob killed
+                if (m_uiMobDeadCount == MAX_MOB_AMOUNT)
+                {
+                    m_uiEventTimer = 5000;
+                    m_uiMobDeadCount = 0;
+                }
+                break;
+            case PHASE_BOSS:                                // Ring boss killed
+                // One Boss
+                if (m_uiMobDeadCount == 1)
+                {
+                    m_uiEventTimer = 5000;
+                    m_uiMobDeadCount = 0;
+                }
+                break;
+            case PHASE_GLADIATORS:                          // Theldren and his band killed
+                // Adds + Theldren
+                if (m_uiMobDeadCount == MAX_THELDREN_ADDS + 1)
+                {
+                    m_uiEventTimer = 5000;
+                    m_uiMobDeadCount = 0;
+                    DoChallengeQuestCredit();
+                }
+                break;
+        }
+    }
+
+    void SummonRingMob(uint32 uiEntry, SpawnPosition uiPosition)
+    {
+        float fX, fY, fZ;
+        m_creature->GetRandomPoint(aSpawnPositions[uiPosition][0], aSpawnPositions[uiPosition][1], aSpawnPositions[uiPosition][2], 2.0f, fX, fY, fZ);
+        m_creature->SummonCreature(uiEntry, fX, fY, fZ, 0, TEMPSUMMON_DEAD_DESPAWN, 0);
+    }
+
+    void WaypointReached(uint32 uiPointId)
+    {
+        switch(uiPointId)
+        {
+            case 0:                                         // Middle reached first time
+                DoScriptText(urand(0, 1) ? SAY_START_1 : SAY_START_2, m_creature);
+                SetEscortPaused(true);
+                m_uiEventTimer = 5000;
+                break;
+            case 1:                                         // Reached wall again
+                DoScriptText(SAY_OPEN_EAST_GATE, m_creature);
+                SetEscortPaused(true);
+                m_uiEventTimer = 5000;
+                break;
+            case 2:                                         // walking along the wall, while door opened
+                SetEscortPaused(true);
+                break;
+            case 3:                                         // Middle reached second time
+                DoScriptText(urand(0, 1) ? SAY_SUMMON_BOSS_1 : SAY_SUMMON_BOSS_2, m_creature);
+                break;
+            case 4:                                         // Reached North Gate
+                DoScriptText(SAY_OPEN_NORTH_GATE, m_creature);
+                SetEscortPaused(true);
+                m_uiEventTimer = 5000;
+                break;
+            case 5:
+                if (m_pInstance)
+                {
+                    m_pInstance->SetData(TYPE_RING_OF_LAW, DONE);
+                    debug_log("SD2: npc_grimstone: event reached end and set complete.");
+                }
+                break;
+        }
+    }
+
+    void UpdateEscortAI(const uint32 uiDiff)
+    {
+        if (!m_pInstance)
+            return;
+
+        if (m_pInstance->GetData(TYPE_RING_OF_LAW) == FAIL)
+        {
+            // Reset Doors
+            if (m_uiEventPhase >= 9)                        // North Gate is opened
+            {
+                m_pInstance->DoUseDoorOrButton(GO_ARENA_2);
+                m_pInstance->DoUseDoorOrButton(GO_ARENA_4);
+            }
+            else if (m_uiEventPhase >= 4)                   // East Gate is opened
+            {
+                m_pInstance->DoUseDoorOrButton(GO_ARENA_1);
+                m_pInstance->DoUseDoorOrButton(GO_ARENA_4);
+            }
+
+            // Despawn Summoned Mobs
+            for (GuidList::const_iterator itr = m_lSummonedGUIDList.begin(); itr != m_lSummonedGUIDList.end(); ++itr)
+            {
+                if (Creature* pSummoned = m_creature->GetMap()->GetCreature(*itr))
+                    pSummoned->ForcedDespawn();
+            }
+            m_lSummonedGUIDList.clear();
+
+            // Despawn NPC
+            m_creature->ForcedDespawn();
+            return;
+        }
+
+        if (m_uiEventTimer)
+        {
+            if (m_uiEventTimer <= uiDiff)
+            {
+                switch(m_uiEventPhase)
+                {
+                    case 0:
+                        // Shortly after spawn, start walking
+                        //DoScriptText(-1000000, m_creature); // no more text on spawn
+                        m_pInstance->DoUseDoorOrButton(GO_ARENA_4);
+                        Start(false);
+                        SetEscortPaused(false);
+                        m_uiEventTimer = 0;
+                        break;
+                    case 1:
+                        // Start walking towards wall
+                        SetEscortPaused(false);
+                        m_uiEventTimer = 0;
+                        break;
+                    case 2:
+                        m_uiEventTimer = 2000;
+                        break;
+                    case 3:
+                        // Open East Gate
+                        m_pInstance->DoUseDoorOrButton(GO_ARENA_1);
+                        m_uiEventTimer = 3000;
+                        break;
+                    case 4:
+                        SetEscortPaused(false);
+                        m_creature->SetVisibility(VISIBILITY_OFF);
+                        // Summon Ring Mob(s)
+                        SummonRingMob(aRingMob[m_uiMobSpawnId], POS_EAST);
+                        m_uiEventTimer = 8000;
+                        break;
+                    case 5:
+                        // Summon Ring Mob(s)
+                        SummonRingMob(aRingMob[m_uiMobSpawnId], POS_EAST);
+                        SummonRingMob(aRingMob[m_uiMobSpawnId], POS_EAST);
+                        m_uiEventTimer = 8000;
+                        break;
+                    case 6:
+                        // Summon Ring Mob(s)
+                        SummonRingMob(aRingMob[m_uiMobSpawnId], POS_EAST);
+                        m_uiEventTimer = 0;
+                        break;
+                    case 7:
+                        // Summoned Mobs are dead, continue event
+                        m_creature->SetVisibility(VISIBILITY_ON);
+                        m_pInstance->DoUseDoorOrButton(GO_ARENA_1);
+                        //DoScriptText(-1000000, m_creature); // after killed the mobs, no say here
+                        SetEscortPaused(false);
+                        m_uiEventTimer = 0;
+                        break;
+                    case 8:
+                        // Open North Gate
+                        m_pInstance->DoUseDoorOrButton(GO_ARENA_2);
+                        m_uiEventTimer = 5000;
+                        break;
+                    case 9:
+                        // Summon Boss
+                        m_creature->SetVisibility(VISIBILITY_OFF);
+                        // If banner summoned after start, then summon Thelden after the creatures are dead
+                        if (m_pInstance->GetData(TYPE_RING_OF_LAW) == SPECIAL && m_uiPhase == PHASE_MOBS)
+                        {
+                            m_uiPhase = PHASE_GLADIATORS;
+                            SummonRingMob(NPC_THELDREN, POS_NORTH);
+                            for (uint8 i = 0; i < MAX_THELDREN_ADDS; ++i)
+                                SummonRingMob(m_uiGladiatorId[i], POS_NORTH);
+                        }
+                        else
+                        {
+                            m_uiPhase = PHASE_BOSS;
+                            SummonRingMob(aRingBoss[urand(0, 5)], POS_NORTH);
+                        }
+                        m_uiEventTimer = 0;
+                        break;
+                    case 10:
+                        // Boss dead
+                        m_lSummonedGUIDList.clear();
+                        m_pInstance->DoUseDoorOrButton(GO_ARENA_2);
+                        m_pInstance->DoUseDoorOrButton(GO_ARENA_3);
+                        m_pInstance->DoUseDoorOrButton(GO_ARENA_4);
+                        SetEscortPaused(false);
+                        m_uiEventTimer = 0;
+                        break;
+                }
+                ++m_uiEventPhase;
+            }
+            else
+                m_uiEventTimer -= uiDiff;
+        }
+    }
+};
+
+CreatureAI* GetAI_npc_grimstone(Creature* pCreature)
+{
+    return new npc_grimstoneAI(pCreature);
+}
+
+bool EffectDummyCreature_spell_banner_of_provocation(Unit* pCaster, uint32 uiSpellId, SpellEffectIndex uiEffIndex, Creature* pCreatureTarget)
+{
+    if (uiSpellId == SPELL_SUMMON_THELRIN_DND && uiEffIndex != EFFECT_INDEX_0)
+    {
+        instance_blackrock_depths* pInstance = (instance_blackrock_depths*)pCreatureTarget->GetInstanceData();
+        if (pInstance && pInstance->GetData(TYPE_RING_OF_LAW) != DONE && pInstance->GetData(TYPE_RING_OF_LAW) != SPECIAL)
+            pInstance->SetData(TYPE_RING_OF_LAW, pInstance->GetData(TYPE_RING_OF_LAW) == IN_PROGRESS ? SPECIAL : DATA_BANNER_BEFORE_EVENT);
+
+        return true;
+    }
+    return false;
+}
+
+/*######
+## mob_phalanx
+######*/
+
+enum
+{
+    SPELL_THUNDERCLAP    = 15588,
+    SPELL_FIREBALLVOLLEY = 15285,
+    SPELL_MIGHTYBLOW     = 14099
+};
+
+struct MANGOS_DLL_DECL mob_phalanxAI : public ScriptedAI
+{
+    mob_phalanxAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
+
+    uint32 m_uiThunderClapTimer;
+    uint32 m_uiFireballVolleyTimer;
+    uint32 m_uiMightyBlowTimer;
+
+    void Reset()
+    {
+        m_uiThunderClapTimer    = 12000;
+        m_uiFireballVolleyTimer = 0;
+        m_uiMightyBlowTimer     = 15000;
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // ThunderClap
+        if (m_uiThunderClapTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(), SPELL_THUNDERCLAP);
+            m_uiThunderClapTimer = 10000;
+        }
+        else
+            m_uiThunderClapTimer -= uiDiff;
+
+        // FireballVolley
+        if (m_creature->GetHealthPercent() < 51.0f)
+        {
+            if (m_uiFireballVolleyTimer < uiDiff)
+            {
+                DoCastSpellIfCan(m_creature->getVictim(), SPELL_FIREBALLVOLLEY);
+                m_uiFireballVolleyTimer = 15000;
+            }
+            else
+                m_uiFireballVolleyTimer -= uiDiff;
+        }
+
+        // MightyBlow
+        if (m_uiMightyBlowTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(), SPELL_MIGHTYBLOW);
+            m_uiMightyBlowTimer = 10000;
+        }
+        else
+            m_uiMightyBlowTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_mob_phalanx(Creature* pCreature)
+{
+    return new mob_phalanxAI(pCreature);
+}
+
+/*######
+## npc_kharan_mighthammer
+######*/
+enum
+{
+    QUEST_WHAT_IS_GOING_ON = 4001,
+    QUEST_KHARANS_TALE     = 4342
+};
+
+#define GOSSIP_ITEM_KHARAN_1    "I need to know where the princess are, Kharan!"
+#define GOSSIP_ITEM_KHARAN_2    "All is not lost, Kharan!"
+
+#define GOSSIP_ITEM_KHARAN_3    "Gor'shak is my friend, you can trust me."
+#define GOSSIP_ITEM_KHARAN_4    "Not enough, you need to tell me more."
+#define GOSSIP_ITEM_KHARAN_5    "So what happened?"
+#define GOSSIP_ITEM_KHARAN_6    "Continue..."
+#define GOSSIP_ITEM_KHARAN_7    "So you suspect that someone on the inside was involved? That they were tipped off?"
+#define GOSSIP_ITEM_KHARAN_8    "Continue with your story please."
+#define GOSSIP_ITEM_KHARAN_9    "Indeed."
+#define GOSSIP_ITEM_KHARAN_10   "The door is open, Kharan. You are a free man."
+
+bool GossipHello_npc_kharan_mighthammer(Player* pPlayer, Creature* pCreature)
+{
+    if (pCreature->isQuestGiver())
+        pPlayer->PrepareQuestMenu(pCreature->GetObjectGuid());
+
+    if (pPlayer->GetQuestStatus(QUEST_WHAT_IS_GOING_ON) == QUEST_STATUS_INCOMPLETE)
+        pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_KHARAN_1, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+1);
+
+    if (pPlayer->GetQuestStatus(QUEST_KHARANS_TALE) == QUEST_STATUS_INCOMPLETE)
+        pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_KHARAN_2, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+3);
+
+    if (pPlayer->GetTeam() == HORDE)
+        pPlayer->SEND_GOSSIP_MENU(2473, pCreature->GetObjectGuid());
+    else
+        pPlayer->SEND_GOSSIP_MENU(2474, pCreature->GetObjectGuid());
+
+    return true;
+}
+
+bool GossipSelect_npc_kharan_mighthammer(Player* pPlayer, Creature* pCreature, uint32 uiSender, uint32 uiAction)
+{
+    switch(uiAction)
+    {
+        case GOSSIP_ACTION_INFO_DEF+1:
+            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_KHARAN_3, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+2);
+            pPlayer->SEND_GOSSIP_MENU(2475, pCreature->GetObjectGuid());
+            break;
+        case GOSSIP_ACTION_INFO_DEF+2:
+            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_KHARAN_4, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+3);
+            pPlayer->SEND_GOSSIP_MENU(2476, pCreature->GetObjectGuid());
+            break;
+
+        case GOSSIP_ACTION_INFO_DEF+3:
+            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_KHARAN_5, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+4);
+            pPlayer->SEND_GOSSIP_MENU(2477, pCreature->GetObjectGuid());
+            break;
+        case GOSSIP_ACTION_INFO_DEF+4:
+            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_KHARAN_6, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+5);
+            pPlayer->SEND_GOSSIP_MENU(2478, pCreature->GetObjectGuid());
+            break;
+        case GOSSIP_ACTION_INFO_DEF+5:
+            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_KHARAN_7, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+6);
+            pPlayer->SEND_GOSSIP_MENU(2479, pCreature->GetObjectGuid());
+            break;
+        case GOSSIP_ACTION_INFO_DEF+6:
+            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_KHARAN_8, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+7);
+            pPlayer->SEND_GOSSIP_MENU(2480, pCreature->GetObjectGuid());
+            break;
+        case GOSSIP_ACTION_INFO_DEF+7:
+            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_KHARAN_9, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+8);
+            pPlayer->SEND_GOSSIP_MENU(2481, pCreature->GetObjectGuid());
+            break;
+        case GOSSIP_ACTION_INFO_DEF+8:
+            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_KHARAN_10, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+9);
+            pPlayer->SEND_GOSSIP_MENU(2482, pCreature->GetObjectGuid());
+            break;
+        case GOSSIP_ACTION_INFO_DEF+9:
+            pPlayer->CLOSE_GOSSIP_MENU();
+            if (pPlayer->GetTeam() == HORDE)
+                pPlayer->AreaExploredOrEventHappens(QUEST_WHAT_IS_GOING_ON);
+            else
+                pPlayer->AreaExploredOrEventHappens(QUEST_KHARANS_TALE);
+            break;
+    }
+    return true;
+}
+
+/*######
+## npc_lokhtos_darkbargainer
+######*/
+
+enum
+{
+    FACTION_THORIUM_BROTHERHOOD               = 59,
+
+    ITEM_THRORIUM_BROTHERHOOD_CONTRACT        = 18628,
+    ITEM_SULFURON_INGOT                       = 17203,
+
+    QUEST_A_BINDING_CONTRACT                  = 7604,
+
+    SPELL_CREATE_THORIUM_BROTHERHOOD_CONTRACT = 23059
+};
+
+#define GOSSIP_ITEM_SHOW_ACCESS     "Show me what I have access to, Lothos."
+#define GOSSIP_ITEM_GET_CONTRACT    "Get Thorium Brotherhood Contract"
+
+bool GossipHello_npc_lokhtos_darkbargainer(Player* pPlayer, Creature* pCreature)
+{
+    if (pCreature->isQuestGiver())
+        pPlayer->PrepareQuestMenu(pCreature->GetObjectGuid());
+
+    if (pCreature->isVendor() && pPlayer->GetReputationRank(FACTION_THORIUM_BROTHERHOOD) >= REP_FRIENDLY)
+        pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_VENDOR, GOSSIP_ITEM_SHOW_ACCESS, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_TRADE);
+
+    if (!pPlayer->GetQuestRewardStatus(QUEST_A_BINDING_CONTRACT) &&
+        !pPlayer->HasItemCount(ITEM_THRORIUM_BROTHERHOOD_CONTRACT, 1, true) &&
+        pPlayer->HasItemCount(ITEM_SULFURON_INGOT, 1))
+    {
+        pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_GET_CONTRACT, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+1);
+    }
+
+    if (pPlayer->GetReputationRank(FACTION_THORIUM_BROTHERHOOD) < REP_FRIENDLY)
+        pPlayer->SEND_GOSSIP_MENU(3673, pCreature->GetObjectGuid());
+    else
+        pPlayer->SEND_GOSSIP_MENU(3677, pCreature->GetObjectGuid());
+
+    return true;
+}
+
+bool GossipSelect_npc_lokhtos_darkbargainer(Player* pPlayer, Creature* pCreature, uint32 uiSender, uint32 uiAction)
+{
+    if (uiAction == GOSSIP_ACTION_INFO_DEF + 1)
+    {
+        pPlayer->CLOSE_GOSSIP_MENU();
+        pPlayer->CastSpell(pPlayer, SPELL_CREATE_THORIUM_BROTHERHOOD_CONTRACT, false);
+    }
+
+    if (uiAction == GOSSIP_ACTION_TRADE)
+        pPlayer->SEND_VENDORLIST(pCreature->GetObjectGuid());
+
+    return true;
+}
+
+/*######
+## npc_rocknot
+######*/
+
+enum
+{
+    SAY_GOT_BEER       = -1230000,
+
+    SPELL_DRUNKEN_RAGE = 14872,
+
+    QUEST_ALE          = 4295
+};
+
+struct MANGOS_DLL_DECL npc_rocknotAI : public npc_escortAI
+{
+    npc_rocknotAI(Creature* pCreature) : npc_escortAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    uint32 m_uiBreakKegTimer;
+    uint32 m_uiBreakDoorTimer;
+
+    void Reset()
+    {
+        if (HasEscortState(STATE_ESCORT_ESCORTING))
+            return;
+
+        m_uiBreakKegTimer  = 0;
+        m_uiBreakDoorTimer = 0;
+    }
+
+    void DoGo(uint32 id, uint32 state)
+    {
+        if (GameObject* pGo = m_pInstance->GetSingleGameObjectFromStorage(id))
+            pGo->SetGoState(GOState(state));
+    }
+
+    void WaypointReached(uint32 uiPointId)
+    {
+        if (!m_pInstance)
+            return;
+
+        switch(uiPointId)
+        {
+            case 1:
+                m_creature->HandleEmote(EMOTE_ONESHOT_KICK);
+                break;
+            case 2:
+                m_creature->HandleEmote(EMOTE_ONESHOT_ATTACKUNARMED);
+                break;
+            case 3:
+                m_creature->HandleEmote(EMOTE_ONESHOT_ATTACKUNARMED);
+                break;
+            case 4:
+                m_creature->HandleEmote(EMOTE_ONESHOT_KICK);
+                break;
+            case 5:
+                m_creature->HandleEmote(EMOTE_ONESHOT_KICK);
+                m_uiBreakKegTimer = 2000;
+                break;
+        }
+    }
+
+    void UpdateEscortAI(const uint32 uiDiff)
+    {
+        if (!m_pInstance)
+            return;
+
+        if (m_uiBreakKegTimer)
+        {
+            if (m_uiBreakKegTimer <= uiDiff)
+            {
+                DoGo(GO_BAR_KEG_SHOT, 0);
+                m_uiBreakKegTimer = 0;
+                m_uiBreakDoorTimer = 1000;
+            }
+            else
+                m_uiBreakKegTimer -= uiDiff;
+        }
+
+        if (m_uiBreakDoorTimer)
+        {
+            if (m_uiBreakDoorTimer <= uiDiff)
+            {
+                DoGo(GO_BAR_DOOR, 2);
+                DoGo(GO_BAR_KEG_TRAP, 0);                   //doesn't work very well, leaving code here for future
+                                                            //spell by trap has effect61, this indicate the bar go hostile
+
+                if (Creature* pTmp = m_pInstance->GetSingleCreatureFromStorage(NPC_PHALANX))
+                    pTmp->setFaction(14);
+
+                // for later, this event(s) has alot more to it.
+                // optionally, DONE can trigger bar to go hostile.
+                m_pInstance->SetData(TYPE_BAR, DONE);
+
+                m_uiBreakDoorTimer = 0;
+            }
+            else
+                m_uiBreakDoorTimer -= uiDiff;
+        }
+    }
+};
+
+CreatureAI* GetAI_npc_rocknot(Creature* pCreature)
+{
+    return new npc_rocknotAI(pCreature);
+}
+
+bool QuestRewarded_npc_rocknot(Player* pPlayer, Creature* pCreature, Quest const* pQuest)
+{
+    ScriptedInstance* pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+
+    if (!pInstance)
+        return true;
+
+    if (pInstance->GetData(TYPE_BAR) == DONE || pInstance->GetData(TYPE_BAR) == SPECIAL)
+        return true;
+
+    if (pQuest->GetQuestId() == QUEST_ALE)
+    {
+        if (pInstance->GetData(TYPE_BAR) != IN_PROGRESS)
+            pInstance->SetData(TYPE_BAR,IN_PROGRESS);
+
+        pInstance->SetData(TYPE_BAR,SPECIAL);
+
+        // keep track of amount in instance script, returns SPECIAL if amount ok and event in progress
+        if (pInstance->GetData(TYPE_BAR) == SPECIAL)
+        {
+            DoScriptText(SAY_GOT_BEER, pCreature);
+            pCreature->CastSpell(pCreature, SPELL_DRUNKEN_RAGE, false);
+
+            if (npc_rocknotAI* pEscortAI = dynamic_cast<npc_rocknotAI*>(pCreature->AI()))
+                pEscortAI->Start(false, NULL, NULL, true);
+        }
+    }
+
+    return true;
+}
+
+void AddSC_blackrock_depths()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "go_shadowforge_brazier";
+    pNewScript->pGOUse = &GOUse_go_shadowforge_brazier;
+    pNewScript->RegisterSelf();
+
+    pNewScript = new Script;
+    pNewScript->Name = "go_relic_coffer_door";
+    pNewScript->pGOUse = &GOUse_go_relic_coffer_door;
+    pNewScript->RegisterSelf();
+
+    pNewScript = new Script;
+    pNewScript->Name = "at_ring_of_law";
+    pNewScript->pAreaTrigger = &AreaTrigger_at_ring_of_law;
+    pNewScript->RegisterSelf();
+
+    pNewScript = new Script;
+    pNewScript->Name = "npc_grimstone";
+    pNewScript->GetAI = &GetAI_npc_grimstone;
+    pNewScript->RegisterSelf();
+
+    pNewScript = new Script;
+    pNewScript->Name = "npc_theldren_trigger";
+    pNewScript->pEffectDummyNPC = &EffectDummyCreature_spell_banner_of_provocation;
+    pNewScript->RegisterSelf();
+
+    pNewScript = new Script;
+    pNewScript->Name = "mob_phalanx";
+    pNewScript->GetAI = &GetAI_mob_phalanx;
+    pNewScript->RegisterSelf();
+
+    pNewScript = new Script;
+    pNewScript->Name = "npc_kharan_mighthammer";
+    pNewScript->pGossipHello =  &GossipHello_npc_kharan_mighthammer;
+    pNewScript->pGossipSelect = &GossipSelect_npc_kharan_mighthammer;
+    pNewScript->RegisterSelf();
+
+    pNewScript = new Script;
+    pNewScript->Name = "npc_lokhtos_darkbargainer";
+    pNewScript->pGossipHello =  &GossipHello_npc_lokhtos_darkbargainer;
+    pNewScript->pGossipSelect = &GossipSelect_npc_lokhtos_darkbargainer;
+    pNewScript->RegisterSelf();
+
+    pNewScript = new Script;
+    pNewScript->Name = "npc_rocknot";
+    pNewScript->GetAI = &GetAI_npc_rocknot;
+    pNewScript->pQuestRewardedNPC = &QuestRewarded_npc_rocknot;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/blackrock_depths.h b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/blackrock_depths.h
new file mode 100644
index 0000000..14696ad
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/blackrock_depths.h
@@ -0,0 +1,136 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software licensed under GPL version 2
+ * Please see the included DOCS/LICENSE.TXT for more information */
+
+#ifndef DEF_BRD_H
+#define DEF_BRD_H
+
+enum
+{
+    MAX_ENCOUNTER           = 6,
+    MAX_RELIC_DOORS         = 12,
+
+    TYPE_RING_OF_LAW        = 1,
+    TYPE_VAULT              = 2,
+    TYPE_BAR                = 3,
+    TYPE_TOMB_OF_SEVEN      = 4,
+    TYPE_LYCEUM             = 5,
+    TYPE_IRON_HALL          = 6,
+
+    NPC_EMPEROR             = 9019,
+    NPC_PRINCESS            = 8929,
+    NPC_PHALANX             = 9502,
+    NPC_HATEREL             = 9034,
+    NPC_ANGERREL            = 9035,
+    NPC_VILEREL             = 9036,
+    NPC_GLOOMREL            = 9037,
+    NPC_SEETHREL            = 9038,
+    // NPC_DOOMREL          = 9039,
+    NPC_DOPEREL             = 9040,
+    NPC_WATCHER_DOOMGRIP    = 9476,
+    NPC_WARBRINGER_CONST    = 8905,                         // Four of them in Relict Vault are related to Doomgrip summon event
+
+    GO_ARENA_1              = 161525,
+    GO_ARENA_2              = 161522,
+    GO_ARENA_3              = 161524,
+    GO_ARENA_4              = 161523,
+
+    GO_SHADOW_LOCK          = 161460,
+    GO_SHADOW_MECHANISM     = 161461,
+    GO_SHADOW_GIANT_DOOR    = 157923,
+    GO_SHADOW_DUMMY         = 161516,
+    GO_BAR_KEG_SHOT         = 170607,
+    GO_BAR_KEG_TRAP         = 171941,
+    GO_BAR_DOOR             = 170571,
+    GO_TOMB_ENTER           = 170576,
+    GO_TOMB_EXIT            = 170577,
+    GO_LYCEUM               = 170558,
+    GO_GOLEM_ROOM_N         = 170573,
+    GO_GOLEM_ROOM_S         = 170574,
+    GO_THRONE_ROOM          = 170575,
+
+    GO_SPECTRAL_CHALICE     = 164869,
+    GO_CHEST_SEVEN          = 169243,
+    GO_ARENA_SPOILS         = 181074,
+    GO_SECRET_DOOR          = 174553,
+
+    SPELL_STONED            = 10255,                        // Aura of Warbringer Constructs in Relict Vault
+};
+
+enum ArenaNPCs
+{
+    // Gladiators
+    NPC_LEFTY               = 16049,
+    NPC_ROTFANG             = 16050,
+    NPC_SNOKH               = 16051,
+    NPC_MALGEN              = 16052,
+    NPC_KORV                = 16053,
+    NPC_REZZNIK             = 16054,
+    NPC_VAJASHNI            = 16055,
+    NPC_VOLIDA              = 16058,
+    NPC_THELDREN            = 16059,
+    // Ring mobs
+    NPC_WORM                = 8925,
+    NPC_STINGER             = 8926,
+    NPC_SCREECHER           = 8927,
+    NPC_THUNDERSNOUT        = 8928,
+    NPC_CREEPER             = 8933,
+    NPC_BEETLE              = 8932,
+    // Ring bosses
+    NPC_GOROSH              = 9027,
+    NPC_GRIZZLE             = 9028,
+    NPC_EVISCERATOR         = 9029,
+    NPC_OKTHOR              = 9030,
+    NPC_ANUBSHIAH           = 9031,
+    NPC_HEDRUM              = 9032
+};
+
+static const uint32 aArenaNPCs[] =
+{
+    // Gladiators
+    NPC_LEFTY, NPC_ROTFANG, NPC_SNOKH, NPC_MALGEN, NPC_KORV, NPC_REZZNIK, NPC_VAJASHNI, NPC_VOLIDA, NPC_THELDREN,
+    // Ring mobs
+    NPC_WORM, NPC_STINGER, NPC_SCREECHER, NPC_THUNDERSNOUT, NPC_CREEPER, NPC_BEETLE,
+    // Ring bosses
+    NPC_GOROSH, NPC_GRIZZLE, NPC_EVISCERATOR, NPC_OKTHOR, NPC_ANUBSHIAH, NPC_HEDRUM
+};
+
+// Used to summon Watcher Doomgrip
+static const float aVaultPositions[4] = {821.905f, -338.382f, -50.134f, 3.78736f};
+
+class MANGOS_DLL_DECL instance_blackrock_depths : public ScriptedInstance
+{
+    public:
+        instance_blackrock_depths(Map* pMap);
+        ~instance_blackrock_depths() {}
+
+        void Initialize();
+
+        void OnCreatureCreate(Creature* pCreature);
+        void OnCreatureDeath(Creature* pCreature);
+        void OnObjectCreate(GameObject* pGo);
+
+        void SetData(uint32 uiType, uint32 uiData);
+        uint32 GetData(uint32 uiType);
+
+        const char* Save() { return m_strInstData.c_str(); }
+        void Load(const char* chrIn);
+        void OnCreatureEvade(Creature* pCreature);
+
+        // Arena Event
+        void SetArenaCenterCoords(float fX, float fY, float fZ) { m_fArenaCenterX = fX; m_fArenaCenterY = fY; m_fArenaCenterZ = fZ; }
+        void GetArenaCenterCoords(float &fX, float &fY, float &fZ) { fX = m_fArenaCenterX; fY = m_fArenaCenterY; fZ = m_fArenaCenterZ; }
+
+    private:
+        uint32 m_auiEncounter[MAX_ENCOUNTER];
+        std::string m_strInstData;
+
+        uint32 m_uiBarAleCount;
+        uint8 m_uiCofferDoorsOpened;
+
+        float m_fArenaCenterX, m_fArenaCenterY, m_fArenaCenterZ;
+
+        GuidSet m_sVaultNpcGuids;
+};
+
+#endif
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_ambassador_flamelash.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_ambassador_flamelash.cpp
new file mode 100644
index 0000000..b071ad1
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_ambassador_flamelash.cpp
@@ -0,0 +1,122 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Ambassador_Flamelash
+SD%Complete: 80
+SDComment: Texts missing, Add handling rather guesswork, Add spell Burning Spirit likely won't work
+SDCategory: Blackrock Depths
+EndScriptData */
+
+#include "precompiled.h"
+
+enum
+{
+    SPELL_FIREBLAST             = 15573,
+    SPELL_BURNING_SPIRIT        = 13489,
+    SPELL_BURNING_SPIRIT_BUFF   = 14744,
+
+    NPC_BURNING_SPIRIT          = 9178,
+};
+
+struct MANGOS_DLL_DECL boss_ambassador_flamelashAI : public ScriptedAI
+{
+    boss_ambassador_flamelashAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
+
+    uint32 m_uiSpiritTimer;
+    int Rand;
+    int RandX;
+    int RandY;
+
+    void Reset()
+    {
+        m_uiSpiritTimer = 12000;
+    }
+
+    void SummonSpirits()
+    {
+        float fX, fY, fZ;
+        m_creature->GetRandomPoint(m_creature->GetPositionX(), m_creature->GetPositionY(), m_creature->GetPositionZ(), 30.0f, fX, fY, fZ);
+        m_creature->SummonCreature(NPC_BURNING_SPIRIT, fX, fY, fZ, m_creature->GetAngle(fX, fY)+M_PI_F, TEMPSUMMON_TIMED_OR_DEAD_DESPAWN, 60000);
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        DoCastSpellIfCan(m_creature, SPELL_FIREBLAST);
+    }
+
+    void JustSummoned(Creature* pSummoned)
+    {
+        pSummoned->GetMotionMaster()->MovePoint(1, m_creature->GetPositionX(), m_creature->GetPositionY(), m_creature->GetPositionZ());
+    }
+
+    void SummonedMovementInform(Creature* pSummoned, uint32 uiMotionType, uint32 uiPointId)
+    {
+        if (uiPointId != 1)
+            return;
+
+        pSummoned->CastSpell(m_creature, SPELL_BURNING_SPIRIT, true);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        //Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        //m_uiSpiritTimer
+        if (m_uiSpiritTimer < uiDiff)
+        {
+            SummonSpirits();
+            SummonSpirits();
+            SummonSpirits();
+            SummonSpirits();
+
+            m_uiSpiritTimer = 20000;
+        }
+        else
+            m_uiSpiritTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+bool EffectDummyCreature_spell_boss_ambassador_flamelash(Unit* pCaster, uint32 uiSpellId, SpellEffectIndex uiEffIndex, Creature* pCreatureTarget)
+{
+    if (uiSpellId == SPELL_BURNING_SPIRIT && uiEffIndex == EFFECT_INDEX_1)
+    {
+        pCreatureTarget->CastSpell(pCreatureTarget, SPELL_BURNING_SPIRIT_BUFF, true);
+        return true;
+    }
+
+    return false;
+}
+
+CreatureAI* GetAI_boss_ambassador_flamelash(Creature* pCreature)
+{
+    return new boss_ambassador_flamelashAI(pCreature);
+}
+
+void AddSC_boss_ambassador_flamelash()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_ambassador_flamelash";
+    pNewScript->GetAI = &GetAI_boss_ambassador_flamelash;
+    pNewScript->pEffectDummyNPC = &EffectDummyCreature_spell_boss_ambassador_flamelash;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_anubshiah.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_anubshiah.cpp
new file mode 100644
index 0000000..870d20f
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_anubshiah.cpp
@@ -0,0 +1,124 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Anubshiah
+SD%Complete: 100
+SDComment:
+SDCategory: Blackrock Depths
+EndScriptData */
+
+#include "precompiled.h"
+
+enum
+{
+    SPELL_SHADOWBOLT            = 17228,
+    SPELL_CURSEOFTONGUES        = 15470,
+    SPELL_CURSEOFWEAKNESS       = 17227,
+    SPELL_DEMONARMOR            = 11735,
+    SPELL_ENVELOPINGWEB         = 15471
+};
+
+struct MANGOS_DLL_DECL boss_anubshiahAI : public ScriptedAI
+{
+    boss_anubshiahAI(Creature* pCreature) : ScriptedAI(pCreature) { Reset(); }
+
+    uint32 m_uiShadowBoltTimer;
+    uint32 m_uiCurseOfTonguesTimer;
+    uint32 m_uiCurseOfWeaknessTimer;
+    uint32 m_uiDemonArmorTimer;
+    uint32 m_uiEnvelopingWebTimer;
+
+    void Reset()
+    {
+        m_uiShadowBoltTimer = 7000;
+        m_uiCurseOfTonguesTimer = 24000;
+        m_uiCurseOfWeaknessTimer = 12000;
+        m_uiDemonArmorTimer = 3000;
+        m_uiEnvelopingWebTimer = 16000;
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        //Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        //ShadowBolt_Timer
+        if (m_uiShadowBoltTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(), SPELL_SHADOWBOLT);
+            m_uiShadowBoltTimer = 7000;
+        }
+        else
+            m_uiShadowBoltTimer -= uiDiff;
+
+        //CurseOfTongues_Timer
+        if (m_uiCurseOfTonguesTimer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+                DoCastSpellIfCan(pTarget, SPELL_CURSEOFTONGUES);
+            m_uiCurseOfTonguesTimer = 18000;
+        }
+        else
+            m_uiCurseOfTonguesTimer -= uiDiff;
+
+        //CurseOfWeakness_Timer
+        if (m_uiCurseOfWeaknessTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(), SPELL_CURSEOFWEAKNESS);
+            m_uiCurseOfWeaknessTimer = 45000;
+        }
+        else
+            m_uiCurseOfWeaknessTimer -= uiDiff;
+
+        //DemonArmor_Timer
+        if (m_uiDemonArmorTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_DEMONARMOR);
+            m_uiDemonArmorTimer = 300000;
+        }
+        else
+            m_uiDemonArmorTimer -= uiDiff;
+
+        //EnvelopingWeb_Timer
+        if (m_uiEnvelopingWebTimer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+                DoCastSpellIfCan(pTarget, SPELL_ENVELOPINGWEB);
+            m_uiEnvelopingWebTimer = 12000;
+        }
+        else
+            m_uiEnvelopingWebTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_anubshiah(Creature* pCreature)
+{
+    return new boss_anubshiahAI(pCreature);
+}
+
+void AddSC_boss_anubshiah()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_anubshiah";
+    pNewScript->GetAI = &GetAI_boss_anubshiah;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_coren_direbrew.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_coren_direbrew.cpp
new file mode 100644
index 0000000..c7aaf79
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_coren_direbrew.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_coren_direbrew
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Blackrock Depths
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_coren_direbrew()
+{
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_emperor_dagran_thaurissan.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_emperor_dagran_thaurissan.cpp
new file mode 100644
index 0000000..0755cce
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_emperor_dagran_thaurissan.cpp
@@ -0,0 +1,260 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Emperor_Dagran_Thaurissan
+SD%Complete: 90
+SDComment: With script for Moria
+SDCategory: Blackrock Depths
+EndScriptData */
+
+#include "precompiled.h"
+#include "blackrock_depths.h"
+
+enum eEmperor
+{
+    FACTION_NEUTRAL             = 734,
+    SAY_AGGRO                   = -1230001,
+    SAY_SLAY                    = -1230002,
+
+    SPELL_HANDOFTHAURISSAN      = 17492,
+    SPELL_AVATAROFFLAME         = 15636
+};
+
+struct MANGOS_DLL_DECL boss_emperor_dagran_thaurissanAI : public ScriptedAI
+{
+    boss_emperor_dagran_thaurissanAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    uint32 m_uiHandOfThaurissan_Timer;
+    uint32 m_uiAvatarOfFlame_Timer;
+    //uint32 m_uiCounter;
+
+    void Reset()
+    {
+        m_uiHandOfThaurissan_Timer = 4000;
+        m_uiAvatarOfFlame_Timer = 25000;
+        //m_uiCounter = 0;
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        DoScriptText(SAY_AGGRO, m_creature);
+        m_creature->CallForHelp(VISIBLE_RANGE);
+    }
+
+    void JustDied(Unit* pVictim)
+    {
+        if (!m_pInstance)
+            return;
+
+        if (Creature* pPrincess = m_pInstance->GetSingleCreatureFromStorage(NPC_PRINCESS))
+        {
+            if (pPrincess->isAlive())
+            {
+                pPrincess->setFaction(FACTION_NEUTRAL);
+                pPrincess->AI()->EnterEvadeMode();
+            }
+        }
+    }
+
+    void KilledUnit(Unit* pVictim)
+    {
+        DoScriptText(SAY_SLAY, m_creature);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        if (m_uiHandOfThaurissan_Timer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM,0))
+                DoCastSpellIfCan(pTarget,SPELL_HANDOFTHAURISSAN);
+
+            //3 Hands of Thaurissan will be casted
+            //if (m_uiCounter < 3)
+            //{
+            //    m_uiHandOfThaurissan_Timer = 1000;
+            //    ++m_uiCounter;
+            //}
+            //else
+            //{
+                m_uiHandOfThaurissan_Timer = 5000;
+                //m_uiCounter = 0;
+            //}
+        }
+        else
+            m_uiHandOfThaurissan_Timer -= uiDiff;
+
+        //AvatarOfFlame_Timer
+        if (m_uiAvatarOfFlame_Timer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(),SPELL_AVATAROFFLAME);
+            m_uiAvatarOfFlame_Timer = 18000;
+        }
+        else
+            m_uiAvatarOfFlame_Timer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_emperor_dagran_thaurissan(Creature* pCreature)
+{
+    return new boss_emperor_dagran_thaurissanAI(pCreature);
+}
+
+/*######
+## boss_moira_bronzebeard
+######*/
+
+enum ePrincess
+{
+    SPELL_HEAL                  = 15586,
+    SPELL_RENEW                 = 10929,
+    SPELL_SHIELD                = 10901,
+    SPELL_MINDBLAST             = 15587,
+    SPELL_SHADOWWORDPAIN        = 15654,
+    SPELL_SMITE                 = 10934,
+    SPELL_SHADOW_BOLT           = 15537,
+    SPELL_OPEN_PORTAL           = 13912
+};
+
+struct MANGOS_DLL_DECL boss_moira_bronzebeardAI : public ScriptedAI
+{
+    boss_moira_bronzebeardAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    uint32 m_uiHeal_Timer;
+    uint32 m_uiMindBlast_Timer;
+    uint32 m_uiShadowWordPain_Timer;
+    uint32 m_uiSmite_Timer;
+
+    void Reset()
+    {
+        m_uiHeal_Timer = 12000;                                 //These times are probably wrong
+        m_uiMindBlast_Timer = 16000;
+        m_uiShadowWordPain_Timer = 2000;
+        m_uiSmite_Timer = 8000;
+    }
+
+    void AttackStart(Unit* pWho)
+    {
+        if (m_creature->Attack(pWho, false))
+        {
+            m_creature->AddThreat(pWho);
+            m_creature->SetInCombatWith(pWho);
+            pWho->SetInCombatWith(m_creature);
+
+            m_creature->GetMotionMaster()->MoveChase(pWho, 25.0f);
+        }
+    }
+
+    void JustReachedHome()
+    {
+        if (m_pInstance)
+        {
+            if (Creature* pEmperor = m_pInstance->GetSingleCreatureFromStorage(NPC_EMPEROR))
+            {
+                // if evade, then check if he is alive. If not, start make portal
+                if (!pEmperor->isAlive())
+                    m_creature->CastSpell(m_creature, SPELL_OPEN_PORTAL, false);
+            }
+        }
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        //Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        //MindBlast_Timer
+        if (m_uiMindBlast_Timer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(),SPELL_MINDBLAST);
+            m_uiMindBlast_Timer = 14000;
+        }
+        else
+            m_uiMindBlast_Timer -= uiDiff;
+
+        //ShadowWordPain_Timer
+        if (m_uiShadowWordPain_Timer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(),SPELL_SHADOWWORDPAIN);
+            m_uiShadowWordPain_Timer = 18000;
+        }
+        else
+            m_uiShadowWordPain_Timer -= uiDiff;
+
+        //Smite_Timer
+        if (m_uiSmite_Timer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(),SPELL_SMITE);
+            m_uiSmite_Timer = 10000;
+        }
+        else
+            m_uiSmite_Timer -= uiDiff;
+
+        //Heal_Timer
+        if (m_uiHeal_Timer < uiDiff)
+        {
+            if (Creature* pEmperor = m_pInstance->GetSingleCreatureFromStorage(NPC_EMPEROR))
+            {
+                if (pEmperor->isAlive() && pEmperor->GetHealthPercent() != 100.0f)
+                    DoCastSpellIfCan(pEmperor, SPELL_HEAL);
+            }
+
+            m_uiHeal_Timer = 10000;
+        }
+        else
+            m_uiHeal_Timer -= uiDiff;
+
+        //No meele?
+    }
+};
+
+CreatureAI* GetAI_boss_moira_bronzebeard(Creature* pCreature)
+{
+    return new boss_moira_bronzebeardAI(pCreature);
+}
+
+void AddSC_boss_draganthaurissan()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_emperor_dagran_thaurissan";
+    pNewScript->GetAI = &GetAI_boss_emperor_dagran_thaurissan;
+    pNewScript->RegisterSelf();
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_moira_bronzebeard";
+    pNewScript->GetAI = &GetAI_boss_moira_bronzebeard;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_general_angerforge.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_general_angerforge.cpp
new file mode 100644
index 0000000..2c20c71
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_general_angerforge.cpp
@@ -0,0 +1,142 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_General_Angerforge
+SD%Complete: 100
+SDComment:
+SDCategory: Blackrock Depths
+EndScriptData */
+
+#include "precompiled.h"
+
+enum
+{
+    SPELL_MIGHTYBLOW            = 14099,
+    SPELL_HAMSTRING             = 9080,
+    SPELL_CLEAVE                = 20691,
+
+    NPC_ANVILRAGE_RESERVIST     = 8901,
+    NPC_ANVILRAGE_MEDIC         = 8894,
+};
+
+struct MANGOS_DLL_DECL boss_general_angerforgeAI : public ScriptedAI
+{
+    boss_general_angerforgeAI(Creature* pCreature) : ScriptedAI(pCreature) { Reset(); }
+
+    uint32 m_uiMightyBlowTimer;
+    uint32 m_uiHamStringTimer;
+    uint32 m_uiCleaveTimer;
+    uint32 m_uiAddsTimer;
+    bool m_bSummonedMedics;
+
+    void Reset()
+    {
+        m_uiMightyBlowTimer = 8000;
+        m_uiHamStringTimer = 12000;
+        m_uiCleaveTimer = 16000;
+        m_uiAddsTimer = 0;
+        m_bSummonedMedics = false;
+    }
+
+    void SummonAdd(uint32 uiEntry)
+    {
+        float fX, fY, fZ;
+        m_creature->GetRandomPoint(m_creature->GetPositionX(), m_creature->GetPositionY(), m_creature->GetPositionZ(), 20.0f, fX, fY, fZ);
+        m_creature->SummonCreature(uiEntry, fX, fY, fZ, 0.0f, TEMPSUMMON_TIMED_OR_DEAD_DESPAWN, 60000);
+    }
+
+    void JustSummoned(Creature* pSummoned)
+    {
+        if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+            pSummoned->AI()->AttackStart(pTarget);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        //Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        //MightyBlow_Timer
+        if (m_uiMightyBlowTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(), SPELL_MIGHTYBLOW);
+            m_uiMightyBlowTimer = 18000;
+        }
+        else
+            m_uiMightyBlowTimer -= uiDiff;
+
+        //HamString_Timer
+        if (m_uiHamStringTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(), SPELL_HAMSTRING);
+            m_uiHamStringTimer = 15000;
+        }
+        else
+            m_uiHamStringTimer -= uiDiff;
+
+        //Cleave_Timer
+        if (m_uiCleaveTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(), SPELL_CLEAVE);
+            m_uiCleaveTimer = 9000;
+        }
+        else
+            m_uiCleaveTimer -= uiDiff;
+
+        //Adds_Timer
+        if (m_creature->GetHealthPercent() < 21.0f)
+        {
+            if (m_uiAddsTimer < uiDiff)
+            {
+                // summon 3 Adds every 25s
+                SummonAdd(NPC_ANVILRAGE_RESERVIST);
+                SummonAdd(NPC_ANVILRAGE_RESERVIST);
+                SummonAdd(NPC_ANVILRAGE_RESERVIST);
+
+                m_uiAddsTimer = 25000;
+            }
+            else
+                m_uiAddsTimer -= uiDiff;
+        }
+
+        //Summon Medics
+        if (!m_bSummonedMedics && m_creature->GetHealthPercent() < 21.0f)
+        {
+            SummonAdd(NPC_ANVILRAGE_MEDIC);
+            SummonAdd(NPC_ANVILRAGE_MEDIC);
+            m_bSummonedMedics = true;
+        }
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_general_angerforge(Creature* pCreature)
+{
+    return new boss_general_angerforgeAI(pCreature);
+}
+
+void AddSC_boss_general_angerforge()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_general_angerforge";
+    pNewScript->GetAI = &GetAI_boss_general_angerforge;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_gorosh_the_dervish.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_gorosh_the_dervish.cpp
new file mode 100644
index 0000000..df22713
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_gorosh_the_dervish.cpp
@@ -0,0 +1,86 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Gorosh_the_Dervish
+SD%Complete: 100
+SDComment:
+SDCategory: Blackrock Depths
+EndScriptData */
+
+#include "precompiled.h"
+
+enum
+{
+    SPELL_WHIRLWIND             = 15589,
+    SPELL_MORTALSTRIKE          = 24573,
+};
+
+struct MANGOS_DLL_DECL boss_gorosh_the_dervishAI : public ScriptedAI
+{
+    boss_gorosh_the_dervishAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
+
+    uint32 m_uiWhirlWindTimer;
+    uint32 m_uiMortalStrikeTimer;
+
+    void Reset()
+    {
+        m_uiWhirlWindTimer = 12000;
+        m_uiMortalStrikeTimer = 22000;
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        //Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        //WhirlWind_Timer
+        if (m_uiWhirlWindTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_WHIRLWIND);
+            m_uiWhirlWindTimer = 15000;
+        }
+        else
+            m_uiWhirlWindTimer -= uiDiff;
+
+        //MortalStrike_Timer
+        if (m_uiMortalStrikeTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(), SPELL_MORTALSTRIKE);
+            m_uiMortalStrikeTimer = 15000;
+        }
+        else
+            m_uiMortalStrikeTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_gorosh_the_dervish(Creature* pCreature)
+{
+    return new boss_gorosh_the_dervishAI(pCreature);
+}
+
+void AddSC_boss_gorosh_the_dervish()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_gorosh_the_dervish";
+    pNewScript->GetAI = &GetAI_boss_gorosh_the_dervish;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_grizzle.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_grizzle.cpp
new file mode 100644
index 0000000..d89545b
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_grizzle.cpp
@@ -0,0 +1,94 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Grizzle
+SD%Complete: 100
+SDComment:
+SDCategory: Blackrock Depths
+EndScriptData */
+
+#include "precompiled.h"
+
+enum
+{
+    EMOTE_GENERIC_FRENZY_KILL   = -1000001,
+
+    SPELL_GROUNDTREMOR          = 6524,
+    SPELL_FRENZY                = 28371,
+};
+
+struct MANGOS_DLL_DECL boss_grizzleAI : public ScriptedAI
+{
+    boss_grizzleAI(Creature* pCreature) : ScriptedAI(pCreature) { Reset(); }
+
+    uint32 m_uiGroundTremorTimer;
+    uint32 m_uiFrenzyTimer;
+
+    void Reset()
+    {
+        m_uiGroundTremorTimer = 12000;
+        m_uiFrenzyTimer = 0;
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        //Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        //GroundTremor_Timer
+        if (m_uiGroundTremorTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_GROUNDTREMOR);
+            m_uiGroundTremorTimer = 8000;
+        }
+        else
+            m_uiGroundTremorTimer -= uiDiff;
+
+        //Frenzy_Timer
+        if (m_creature->GetHealthPercent() < 51.0f)
+        {
+            if (m_uiFrenzyTimer < uiDiff)
+            {
+                if (DoCastSpellIfCan(m_creature, SPELL_FRENZY) == CAST_OK)
+                {
+                    DoScriptText(EMOTE_GENERIC_FRENZY_KILL, m_creature);
+                    m_uiFrenzyTimer = 15000;
+                }
+            }
+            else
+                m_uiFrenzyTimer -= uiDiff;
+        }
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_grizzle(Creature* pCreature)
+{
+    return new boss_grizzleAI(pCreature);
+}
+
+void AddSC_boss_grizzle()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_grizzle";
+    pNewScript->GetAI = &GetAI_boss_grizzle;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_high_interrogator_gerstahn.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_high_interrogator_gerstahn.cpp
new file mode 100644
index 0000000..ca64987
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_high_interrogator_gerstahn.cpp
@@ -0,0 +1,114 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_High_Interrogator_Gerstahn
+SD%Complete: 100
+SDComment:
+SDCategory: Blackrock Depths
+EndScriptData */
+
+#include "precompiled.h"
+
+enum
+{
+    SPELL_SHADOWWORDPAIN        = 14032,
+    SPELL_MANABURN              = 14033,
+    SPELL_PSYCHICSCREAM         = 13704,
+    SPELL_SHADOWSHIELD          = 12040
+};
+
+struct MANGOS_DLL_DECL boss_high_interrogator_gerstahnAI : public ScriptedAI
+{
+    boss_high_interrogator_gerstahnAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
+
+    uint32 m_uiShadowWordPainTimer;
+    uint32 m_uiManaBurnTimer;
+    uint32 m_uiPsychicScreamTimer;
+    uint32 m_uiShadowShieldTimer;
+
+    void Reset()
+    {
+        m_uiShadowWordPainTimer = 4000;
+        m_uiManaBurnTimer = 14000;
+        m_uiPsychicScreamTimer = 32000;
+        m_uiShadowShieldTimer = 8000;
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        //Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        //ShadowWordPain_Timer
+        if (m_uiShadowWordPainTimer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+                DoCastSpellIfCan(pTarget, SPELL_SHADOWWORDPAIN);
+
+            m_uiShadowWordPainTimer = 7000;
+        }
+        else
+            m_uiShadowWordPainTimer -= uiDiff;
+
+        //ManaBurn_Timer
+        if (m_uiManaBurnTimer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0, SPELL_MANABURN, SELECT_FLAG_POWER_MANA))
+                DoCastSpellIfCan(pTarget, SPELL_MANABURN);
+
+            m_uiManaBurnTimer = 10000;
+        }
+        else
+            m_uiManaBurnTimer -= uiDiff;
+
+        //PsychicScream_Timer
+        if (m_uiPsychicScreamTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_PSYCHICSCREAM);
+            m_uiPsychicScreamTimer = 30000;
+        }
+        else
+            m_uiPsychicScreamTimer -= uiDiff;
+
+        //ShadowShield_Timer
+        if (m_uiShadowShieldTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_SHADOWSHIELD);
+            m_uiShadowShieldTimer = 25000;
+        }
+        else
+            m_uiShadowShieldTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_high_interrogator_gerstahn(Creature* pCreature)
+{
+    return new boss_high_interrogator_gerstahnAI(pCreature);
+}
+
+void AddSC_boss_high_interrogator_gerstahn()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_high_interrogator_gerstahn";
+    pNewScript->GetAI = &GetAI_boss_high_interrogator_gerstahn;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_magmus.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_magmus.cpp
new file mode 100644
index 0000000..25dc1a2
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_magmus.cpp
@@ -0,0 +1,114 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Magmus
+SD%Complete: 80
+SDComment: Missing pre-event to open doors
+SDCategory: Blackrock Depths
+EndScriptData */
+
+#include "precompiled.h"
+#include "blackrock_depths.h"
+
+enum
+{
+    SPELL_FIERYBURST        = 13900,
+    SPELL_WARSTOMP          = 24375
+};
+
+struct MANGOS_DLL_DECL boss_magmusAI : public ScriptedAI
+{
+    boss_magmusAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    uint32 m_uiFieryBurstTimer;
+    uint32 m_uiWarStompTimer;
+
+    void Reset()
+    {
+        m_uiFieryBurstTimer = 5000;
+        m_uiWarStompTimer = 0;
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_IRON_HALL, IN_PROGRESS);
+    }
+
+    void JustReachedHome()
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_IRON_HALL, FAIL);
+    }
+
+    void JustDied(Unit* pVictim)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_IRON_HALL, DONE);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        //Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        //FieryBurst_Timer
+        if (m_uiFieryBurstTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(), SPELL_FIERYBURST);
+            m_uiFieryBurstTimer = 6000;
+        }
+        else
+            m_uiFieryBurstTimer -= uiDiff;
+
+        //WarStomp_Timer
+        if (m_creature->GetHealthPercent() < 51.0f)
+        {
+            if (m_uiWarStompTimer < uiDiff)
+            {
+                DoCastSpellIfCan(m_creature, SPELL_WARSTOMP);
+                m_uiWarStompTimer = 8000;
+            }
+            else
+                m_uiWarStompTimer -= uiDiff;
+        }
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_magmus(Creature* pCreature)
+{
+    return new boss_magmusAI(pCreature);
+}
+
+void AddSC_boss_magmus()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_magmus";
+    pNewScript->GetAI = &GetAI_boss_magmus;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_tomb_of_seven.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_tomb_of_seven.cpp
new file mode 100644
index 0000000..c8096a9
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/boss_tomb_of_seven.cpp
@@ -0,0 +1,325 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Tomb_Of_Seven
+SD%Complete: 90
+SDComment: Learning Smelt Dark Iron if tribute quest rewarded. Basic event implemented. Correct order and timing of event is unknown.
+SDCategory: Blackrock Depths
+EndScriptData */
+
+#include "precompiled.h"
+#include "blackrock_depths.h"
+
+enum
+{
+    FACTION_NEUTRAL             = 734,
+    FACTION_HOSTILE             = 754,
+
+    SPELL_SMELT_DARK_IRON       = 14891,
+    SPELL_LEARN_SMELT           = 14894,
+    QUEST_SPECTRAL_CHALICE      = 4083,
+    SKILLPOINT_MIN              = 230
+};
+
+#define GOSSIP_ITEM_TEACH_1 "Teach me the art of smelting dark iron"
+#define GOSSIP_ITEM_TEACH_2 "Continue..."
+#define GOSSIP_ITEM_TRIBUTE "I want to pay tribute"
+
+bool GossipHello_boss_gloomrel(Player* pPlayer, Creature* pCreature)
+{
+    if (ScriptedInstance* pInstance = (ScriptedInstance*)pCreature->GetInstanceData())
+    {
+        if (pInstance->GetData(TYPE_TOMB_OF_SEVEN) == NOT_STARTED)
+        {
+            if (pPlayer->GetQuestRewardStatus(QUEST_SPECTRAL_CHALICE) &&
+                pPlayer->GetSkillValue(SKILL_MINING) >= SKILLPOINT_MIN &&
+                !pPlayer->HasSpell(SPELL_SMELT_DARK_IRON))
+                pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_TEACH_1, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 1);
+
+            if (!pPlayer->GetQuestRewardStatus(QUEST_SPECTRAL_CHALICE) &&
+                pPlayer->GetSkillValue(SKILL_MINING) >= SKILLPOINT_MIN)
+                pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_TRIBUTE, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 2);
+        }
+    }
+    pPlayer->SEND_GOSSIP_MENU(pPlayer->GetGossipTextId(pCreature), pCreature->GetObjectGuid());
+    return true;
+}
+
+bool GossipSelect_boss_gloomrel(Player* pPlayer, Creature* pCreature, uint32 uiSender, uint32 uiAction)
+{
+    switch(uiAction)
+    {
+        case GOSSIP_ACTION_INFO_DEF+1:
+            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_TEACH_2, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 11);
+            pPlayer->SEND_GOSSIP_MENU(2606, pCreature->GetObjectGuid());
+            break;
+        case GOSSIP_ACTION_INFO_DEF+11:
+            pPlayer->CLOSE_GOSSIP_MENU();
+            pCreature->CastSpell(pPlayer, SPELL_LEARN_SMELT, false);
+            break;
+        case GOSSIP_ACTION_INFO_DEF+2:
+            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, "[PH] Continue...", GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 22);
+            pPlayer->SEND_GOSSIP_MENU(2604, pCreature->GetObjectGuid());
+            break;
+        case GOSSIP_ACTION_INFO_DEF+22:
+            pPlayer->CLOSE_GOSSIP_MENU();
+            if (ScriptedInstance* pInstance = (ScriptedInstance*)pCreature->GetInstanceData())
+            {
+                //are 5 minutes expected? go template may have data to despawn when used at quest
+                pInstance->DoRespawnGameObject(GO_SPECTRAL_CHALICE, MINUTE*5);
+            }
+            break;
+    }
+    return true;
+}
+
+enum
+{
+    SPELL_SHADOWBOLTVOLLEY              = 15245,
+    SPELL_IMMOLATE                      = 12742,
+    SPELL_CURSEOFWEAKNESS               = 12493,
+    SPELL_DEMONARMOR                    = 13787,
+    SPELL_SUMMON_VOIDWALKERS            = 15092,
+
+    SAY_DOOMREL_START_EVENT             = -1230003,
+
+    MAX_DWARF                           = 7
+};
+
+#define GOSSIP_ITEM_CHALLENGE   "Your bondage is at an end, Doom'rel. I challenge you!"
+
+struct MANGOS_DLL_DECL boss_doomrelAI : public ScriptedAI
+{
+    boss_doomrelAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    uint32 m_uiShadowVolley_Timer;
+    uint32 m_uiImmolate_Timer;
+    uint32 m_uiCurseOfWeakness_Timer;
+    uint32 m_uiDemonArmor_Timer;
+    uint32 m_uiCallToFight_Timer;
+    uint8 m_uiDwarfRound;
+    bool m_bHasSummoned;
+
+    void Reset()
+    {
+        m_uiShadowVolley_Timer = 10000;
+        m_uiImmolate_Timer = 18000;
+        m_uiCurseOfWeakness_Timer = 5000;
+        m_uiDemonArmor_Timer = 16000;
+        m_uiCallToFight_Timer = 0;
+        m_uiDwarfRound = 0;
+        m_bHasSummoned = false;
+    }
+
+    void JustReachedHome()
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_TOMB_OF_SEVEN, FAIL);
+    }
+
+    void JustDied(Unit *victim)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_TOMB_OF_SEVEN, DONE);
+    }
+
+    void JustSummoned(Creature* pSummoned)
+    {
+        if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM,0))
+            pSummoned->AI()->AttackStart(pTarget);
+    }
+
+    Creature* GetDwarfForPhase(uint8 uiPhase)
+    {
+        switch(uiPhase)
+        {
+            case 0:
+                return m_pInstance->GetSingleCreatureFromStorage(NPC_ANGERREL);
+            case 1:
+                return m_pInstance->GetSingleCreatureFromStorage(NPC_SEETHREL);
+            case 2:
+                return m_pInstance->GetSingleCreatureFromStorage(NPC_DOPEREL);
+            case 3:
+                return m_pInstance->GetSingleCreatureFromStorage(NPC_GLOOMREL);
+            case 4:
+                return m_pInstance->GetSingleCreatureFromStorage(NPC_VILEREL);
+            case 5:
+                return m_pInstance->GetSingleCreatureFromStorage(NPC_HATEREL);
+            case 6:
+                return m_creature;
+        }
+        return NULL;
+    }
+
+    void CallToFight(bool bStartFight)
+    {
+        if (Creature* pDwarf = GetDwarfForPhase(m_uiDwarfRound))
+        {
+            if (bStartFight && pDwarf->isAlive())
+            {
+                pDwarf->setFaction(FACTION_HOSTILE);
+                pDwarf->SetInCombatWithZone();              // attackstart
+            }
+            else
+            {
+                if (!pDwarf->isAlive() || pDwarf->isDead())
+                    pDwarf->Respawn();
+
+                pDwarf->setFaction(FACTION_NEUTRAL);
+            }
+        }
+    }
+
+    void UpdateAI(const uint32 diff)
+    {
+        if (m_pInstance)
+        {
+            if (m_pInstance->GetData(TYPE_TOMB_OF_SEVEN) == IN_PROGRESS)
+            {
+                if (m_uiDwarfRound < MAX_DWARF)
+                {
+                    if (m_uiCallToFight_Timer < diff)
+                    {
+                        CallToFight(true);
+                        ++m_uiDwarfRound;
+                        m_uiCallToFight_Timer = 30000;
+                    }
+                    else
+                        m_uiCallToFight_Timer -= diff;
+                }
+            }
+            else if (m_pInstance->GetData(TYPE_TOMB_OF_SEVEN) == FAIL)
+            {
+                for (m_uiDwarfRound = 0; m_uiDwarfRound < MAX_DWARF; ++m_uiDwarfRound)
+                    CallToFight(false);
+
+                m_uiDwarfRound = 0;
+                m_uiCallToFight_Timer = 0;
+
+                if (m_pInstance)
+                    m_pInstance->SetData(TYPE_TOMB_OF_SEVEN, NOT_STARTED);
+            }
+        }
+
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        //ShadowVolley_Timer
+        if (m_uiShadowVolley_Timer < diff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(),SPELL_SHADOWBOLTVOLLEY);
+            m_uiShadowVolley_Timer = 12000;
+        }
+        else
+            m_uiShadowVolley_Timer -= diff;
+
+        //Immolate_Timer
+        if (m_uiImmolate_Timer < diff)
+        {
+            if (Unit* target = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM,0))
+                DoCastSpellIfCan(target,SPELL_IMMOLATE);
+
+            m_uiImmolate_Timer = 25000;
+        }
+        else
+            m_uiImmolate_Timer -= diff;
+
+        //CurseOfWeakness_Timer
+        if (m_uiCurseOfWeakness_Timer < diff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(),SPELL_CURSEOFWEAKNESS);
+            m_uiCurseOfWeakness_Timer = 45000;
+        }
+        else
+            m_uiCurseOfWeakness_Timer -= diff;
+
+        //DemonArmor_Timer
+        if (m_uiDemonArmor_Timer < diff)
+        {
+            DoCastSpellIfCan(m_creature,SPELL_DEMONARMOR);
+            m_uiDemonArmor_Timer = 300000;
+        }
+        else
+            m_uiDemonArmor_Timer -= diff;
+
+        //Summon Voidwalkers
+        if (!m_bHasSummoned && m_creature->GetHealthPercent() <= 50.0f)
+        {
+            m_creature->CastSpell(m_creature, SPELL_SUMMON_VOIDWALKERS, true);
+            m_bHasSummoned = true;
+        }
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_doomrel(Creature* pCreature)
+{
+    return new boss_doomrelAI(pCreature);
+}
+
+bool GossipHello_boss_doomrel(Player* pPlayer, Creature* pCreature)
+{
+    if (ScriptedInstance* pInstance = (ScriptedInstance*)pCreature->GetInstanceData())
+    {
+        if (pInstance->GetData(TYPE_TOMB_OF_SEVEN) == NOT_STARTED)
+            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_CHALLENGE, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 1);
+    }
+
+    pPlayer->SEND_GOSSIP_MENU(2601, pCreature->GetObjectGuid());
+    return true;
+}
+
+bool GossipSelect_boss_doomrel(Player* pPlayer, Creature* pCreature, uint32 uiSender, uint32 uiAction)
+{
+    switch(uiAction)
+    {
+        case GOSSIP_ACTION_INFO_DEF+1:
+            pPlayer->CLOSE_GOSSIP_MENU();
+            DoScriptText(SAY_DOOMREL_START_EVENT, pCreature, pPlayer);
+            // start event
+            if (ScriptedInstance* pInstance = (ScriptedInstance*)pCreature->GetInstanceData())
+                pInstance->SetData(TYPE_TOMB_OF_SEVEN, IN_PROGRESS);
+
+            break;
+    }
+    return true;
+}
+
+void AddSC_boss_tomb_of_seven()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_gloomrel";
+    pNewScript->pGossipHello = &GossipHello_boss_gloomrel;
+    pNewScript->pGossipSelect = &GossipSelect_boss_gloomrel;
+    pNewScript->RegisterSelf();
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_doomrel";
+    pNewScript->GetAI = &GetAI_boss_doomrel;
+    pNewScript->pGossipHello = &GossipHello_boss_doomrel;
+    pNewScript->pGossipSelect = &GossipSelect_boss_doomrel;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/instance_blackrock_depths.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/instance_blackrock_depths.cpp
new file mode 100644
index 0000000..7474eed
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_depths/instance_blackrock_depths.cpp
@@ -0,0 +1,305 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Instance_Blackrock_Depths
+SD%Complete: 80
+SDComment:
+SDCategory: Blackrock Depths
+EndScriptData */
+
+#include "precompiled.h"
+#include "blackrock_depths.h"
+
+instance_blackrock_depths::instance_blackrock_depths(Map* pMap) : ScriptedInstance(pMap),
+    m_uiBarAleCount(0),
+    m_uiCofferDoorsOpened(0),
+
+    m_fArenaCenterX(0.0f),
+    m_fArenaCenterY(0.0f),
+    m_fArenaCenterZ(0.0f)
+{
+    Initialize();
+}
+
+void instance_blackrock_depths::Initialize()
+{
+    memset(&m_auiEncounter, 0, sizeof(m_auiEncounter));
+}
+
+void instance_blackrock_depths::OnCreatureCreate(Creature* pCreature)
+{
+    switch(pCreature->GetEntry())
+    {
+        case NPC_EMPEROR:
+        case NPC_PRINCESS:
+        case NPC_PHALANX:
+        case NPC_HATEREL:
+        case NPC_ANGERREL:
+        case NPC_VILEREL:
+        case NPC_GLOOMREL:
+        case NPC_SEETHREL:
+        case NPC_DOPEREL:
+            m_mNpcEntryGuidStore[pCreature->GetEntry()] = pCreature->GetObjectGuid();
+            break;
+
+        case NPC_WARBRINGER_CONST:
+            // Golems not in the Relict Vault?
+            if (std::abs(pCreature->GetPositionZ() - aVaultPositions[2]) > 1.0f || !pCreature->IsWithinDist2d(aVaultPositions[0], aVaultPositions[1], 20.0f))
+                break;
+            // Golems in Relict Vault need to have a stoned aura, set manually to prevent reapply when reached home
+            pCreature->CastSpell(pCreature, SPELL_STONED, true);
+            // Store the Relict Vault Golems into m_sVaultNpcGuids
+        case NPC_WATCHER_DOOMGRIP:
+            m_sVaultNpcGuids.insert(pCreature->GetObjectGuid());
+            break;
+    }
+}
+
+void instance_blackrock_depths::OnObjectCreate(GameObject* pGo)
+{
+    switch(pGo->GetEntry())
+    {
+        case GO_ARENA_1:
+        case GO_ARENA_2:
+        case GO_ARENA_3:
+        case GO_ARENA_4:
+        case GO_SHADOW_LOCK:
+        case GO_SHADOW_MECHANISM:
+        case GO_SHADOW_GIANT_DOOR:
+        case GO_SHADOW_DUMMY:
+        case GO_BAR_KEG_SHOT:
+        case GO_BAR_KEG_TRAP:
+        case GO_BAR_DOOR:
+        case GO_TOMB_ENTER:
+        case GO_TOMB_EXIT:
+        case GO_LYCEUM:
+        case GO_GOLEM_ROOM_N:
+        case GO_GOLEM_ROOM_S:
+        case GO_THRONE_ROOM:
+        case GO_SPECTRAL_CHALICE:
+        case GO_CHEST_SEVEN:
+        case GO_ARENA_SPOILS:
+        case GO_SECRET_DOOR:
+            break;
+
+        default:
+            return;
+    }
+    m_mGoEntryGuidStore[pGo->GetEntry()] = pGo->GetObjectGuid();
+}
+
+void instance_blackrock_depths::SetData(uint32 uiType, uint32 uiData)
+{
+    switch(uiType)
+    {
+        case TYPE_RING_OF_LAW:
+            // If finished the arena event after theldren fight
+            if (uiData == DONE && m_auiEncounter[0] == SPECIAL)
+                DoRespawnGameObject(GO_ARENA_SPOILS, HOUR);
+            m_auiEncounter[0] = uiData;
+            break;
+        case TYPE_VAULT:
+            if (uiData == SPECIAL)
+            {
+                ++m_uiCofferDoorsOpened;
+
+                if (m_uiCofferDoorsOpened == MAX_RELIC_DOORS)
+                {
+                    SetData(TYPE_VAULT, IN_PROGRESS);
+
+                    Creature* pConstruct = NULL;
+
+                    // Activate vault constructs
+                    for (GuidSet::const_iterator itr = m_sVaultNpcGuids.begin(); itr != m_sVaultNpcGuids.end(); ++itr)
+                    {
+                        if (pConstruct = instance->GetCreature(*itr))
+                            pConstruct->RemoveAurasDueToSpell(SPELL_STONED);
+                    }
+
+                    if (!pConstruct)
+                        return;
+
+                    // Summon doomgrip
+                    pConstruct->SummonCreature(NPC_WATCHER_DOOMGRIP, aVaultPositions[0], aVaultPositions[1], aVaultPositions[2], aVaultPositions[3], TEMPSUMMON_DEAD_DESPAWN, 0);
+                }
+                // No need to store in this case
+                return;
+            }
+            if (uiData == DONE)
+                DoUseDoorOrButton(GO_SECRET_DOOR);
+            m_auiEncounter[1] = uiData;
+            break;
+        case TYPE_BAR:
+            if (uiData == SPECIAL)
+                ++m_uiBarAleCount;
+            else
+                m_auiEncounter[2] = uiData;
+            break;
+        case TYPE_TOMB_OF_SEVEN:
+            switch(uiData)
+            {
+                case IN_PROGRESS:
+                    DoUseDoorOrButton(GO_TOMB_ENTER);
+                    break;
+                case FAIL:
+                    if (m_auiEncounter[3] == IN_PROGRESS)   // Prevent use more than one time
+                        DoUseDoorOrButton(GO_TOMB_ENTER);
+                    break;
+                case DONE:
+                    DoRespawnGameObject(GO_CHEST_SEVEN, HOUR);
+                    DoUseDoorOrButton(GO_TOMB_EXIT);
+                    DoUseDoorOrButton(GO_TOMB_ENTER);
+                    break;
+            }
+            m_auiEncounter[3] = uiData;
+            break;
+        case TYPE_LYCEUM:
+            if (uiData == DONE)
+            {
+                DoUseDoorOrButton(GO_GOLEM_ROOM_N);
+                DoUseDoorOrButton(GO_GOLEM_ROOM_S);
+            }
+            m_auiEncounter[4] = uiData;
+            break;
+        case TYPE_IRON_HALL:
+            switch(uiData)
+            {
+                case IN_PROGRESS:
+                    DoUseDoorOrButton(GO_GOLEM_ROOM_N);
+                    DoUseDoorOrButton(GO_GOLEM_ROOM_S);
+                    break;
+                case FAIL:
+                    DoUseDoorOrButton(GO_GOLEM_ROOM_N);
+                    DoUseDoorOrButton(GO_GOLEM_ROOM_S);
+                    break;
+                case DONE:
+                    DoUseDoorOrButton(GO_GOLEM_ROOM_N);
+                    DoUseDoorOrButton(GO_GOLEM_ROOM_S);
+                    DoUseDoorOrButton(GO_THRONE_ROOM);
+                    break;
+            }
+            m_auiEncounter[5] = uiData;
+            break;
+    }
+
+    if (uiData == DONE)
+    {
+        OUT_SAVE_INST_DATA;
+
+        std::ostringstream saveStream;
+        saveStream << m_auiEncounter[0] << " " << m_auiEncounter[1] << " " << m_auiEncounter[2] << " "
+            << m_auiEncounter[3] << " " << m_auiEncounter[4] << " " << m_auiEncounter[5];
+
+        m_strInstData = saveStream.str();
+
+        SaveToDB();
+        OUT_SAVE_INST_DATA_COMPLETE;
+    }
+}
+
+uint32 instance_blackrock_depths::GetData(uint32 uiType)
+{
+    switch(uiType)
+    {
+        case TYPE_RING_OF_LAW:
+            return m_auiEncounter[0];
+        case TYPE_VAULT:
+            return m_auiEncounter[1];
+        case TYPE_BAR:
+            if (m_auiEncounter[2] == IN_PROGRESS && m_uiBarAleCount == 3)
+                return SPECIAL;
+            else
+                return m_auiEncounter[2];
+        case TYPE_TOMB_OF_SEVEN:
+            return m_auiEncounter[3];
+        case TYPE_LYCEUM:
+            return m_auiEncounter[4];
+        case TYPE_IRON_HALL:
+            return m_auiEncounter[5];
+        default:
+            return 0;
+    }
+}
+
+void instance_blackrock_depths::Load(const char* chrIn)
+{
+    if (!chrIn)
+    {
+        OUT_LOAD_INST_DATA_FAIL;
+        return;
+    }
+
+    OUT_LOAD_INST_DATA(chrIn);
+
+    std::istringstream loadStream(chrIn);
+    loadStream >> m_auiEncounter[0] >> m_auiEncounter[1] >> m_auiEncounter[2] >> m_auiEncounter[3]
+        >> m_auiEncounter[4] >> m_auiEncounter[5];
+
+    for(uint8 i = 0; i < MAX_ENCOUNTER; ++i)
+        if (m_auiEncounter[i] == IN_PROGRESS)
+            m_auiEncounter[i] = NOT_STARTED;
+
+    OUT_LOAD_INST_DATA_COMPLETE;
+}
+
+void instance_blackrock_depths::OnCreatureEvade(Creature* pCreature)
+{
+    if (GetData(TYPE_RING_OF_LAW) == IN_PROGRESS || GetData(TYPE_RING_OF_LAW) == SPECIAL)
+    {
+        for (uint8 i = 0; i < countof(aArenaNPCs); ++i)
+        {
+            if (pCreature->GetEntry() == aArenaNPCs[i])
+            {
+                 SetData(TYPE_RING_OF_LAW, FAIL);
+                 return;
+             }
+        }
+    }
+}
+
+void instance_blackrock_depths::OnCreatureDeath(Creature* pCreature)
+{
+    switch(pCreature->GetEntry())
+    {
+        case NPC_WARBRINGER_CONST:
+        case NPC_WATCHER_DOOMGRIP:
+            if (GetData(TYPE_VAULT) == IN_PROGRESS)
+            {
+                m_sVaultNpcGuids.erase(pCreature->GetObjectGuid());
+
+                // If all event npcs dead then set event to done
+                if (m_sVaultNpcGuids.empty())
+                    SetData(TYPE_VAULT, DONE);
+            }
+            break;
+    }
+}
+
+InstanceData* GetInstanceData_instance_blackrock_depths(Map* pMap)
+{
+    return new instance_blackrock_depths(pMap);
+}
+
+void AddSC_instance_blackrock_depths()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "instance_blackrock_depths";
+    pNewScript->GetInstanceData = &GetInstanceData_instance_blackrock_depths;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/blackrock_spire.h b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/blackrock_spire.h
new file mode 100644
index 0000000..5fce555
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/blackrock_spire.h
@@ -0,0 +1,143 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software licensed under GPL version 2
+ * Please see the included DOCS/LICENSE.TXT for more information */
+
+#ifndef DEF_BLACKROCK_SPIRE_H
+#define DEF_BLACKROCK_SPIRE_H
+
+enum
+{
+    MAX_ENCOUNTER               = 5,
+    MAX_ROOMS                   = 7,
+
+    TYPE_ROOM_EVENT             = 1,
+    TYPE_EMBERSEER              = 2,
+    TYPE_FLAMEWREATH            = 3,                        // Only summon once per instance
+    TYPE_STADIUM                = 4,
+    TYPE_VALTHALAK              = 5,                        // Only summon once per instance
+
+    NPC_SCARSHIELD_INFILTRATOR  = 10299,
+    NPC_BLACKHAND_SUMMONER      = 9818,
+    NPC_BLACKHAND_VETERAN       = 9819,
+    NPC_PYROGUARD_EMBERSEER     = 9816,
+    NPC_BLACKHAND_INCARCERATOR  = 10316,
+    NPC_LORD_VICTOR_NEFARIUS    = 10162,
+    NPC_REND_BLACKHAND          = 10429,
+    NPC_GYTH                    = 10339,
+    NPC_DRAKKISATH              = 10363,
+    NPC_CHROMATIC_WHELP         = 10442,                    // related to Gyth arena event
+    NPC_CHROMATIC_DRAGON        = 10447,
+    NPC_BLACKHAND_HANDLER       = 10742,
+
+    // Doors
+    GO_EMBERSEER_IN             = 175244,
+    GO_DOORS                    = 175705,
+    GO_EMBERSEER_OUT            = 175153,
+    GO_GYTH_ENTRY_DOOR          = 164726,
+    GO_GYTH_COMBAT_DOOR         = 175185,
+    GO_GYTH_EXIT_DOOR           = 175186,
+    GO_DRAKKISATH_DOOR_1        = 175946,
+    GO_DRAKKISATH_DOOR_2        = 175947,
+
+    GO_ROOM_7_RUNE              = 175194,
+    GO_ROOM_3_RUNE              = 175195,
+    GO_ROOM_6_RUNE              = 175196,
+    GO_ROOM_1_RUNE              = 175197,
+    GO_ROOM_5_RUNE              = 175198,
+    GO_ROOM_2_RUNE              = 175199,
+    GO_ROOM_4_RUNE              = 175200,
+
+    GO_ROOKERY_EGG              = 175124,
+
+    GO_EMBERSEER_RUNE_1         = 175266,
+    GO_EMBERSEER_RUNE_2         = 175267,
+    GO_EMBERSEER_RUNE_3         = 175268,
+    GO_EMBERSEER_RUNE_4         = 175269,
+    GO_EMBERSEER_RUNE_5         = 175270,
+    GO_EMBERSEER_RUNE_6         = 175271,
+    GO_EMBERSEER_RUNE_7         = 175272,
+
+    MAX_STADIUM_WAVES           = 7,
+    MAX_STADIUM_MOBS_PER_WAVE   = 5,
+
+    FACTION_BLACK_DRAGON        = 103
+};
+
+struct SpawnLocation
+{
+    float m_fX, m_fY, m_fZ, m_fO;
+};
+
+static const SpawnLocation aStadiumLocs[7] =
+{
+    {210.00f, -420.30f, 110.94f, 3.14f},                    // dragons summon location
+    {210.14f, -397.54f, 111.1f},                            // Gyth summon location
+    {163.62f, -420.33f, 110.47f},                           // center of the stadium location (for movement)
+    {164.63f, -444.04f, 121.97f, 3.22f},                    // Lord Nefarius summon position
+    {161.01f, -443.73f, 121.97f, 6.26f},                    // Rend summon position
+    {164.64f, -443.30f, 121.97f, 1.61f},                    // Nefarius move position
+    {165.74f, -466.46f, 116.80f},                           // Rend move position
+};
+
+// Stadium event description
+static const uint32 aStadiumEventNpcs[MAX_STADIUM_WAVES][5] =
+{
+    {NPC_CHROMATIC_WHELP, NPC_CHROMATIC_WHELP, NPC_CHROMATIC_WHELP, NPC_CHROMATIC_DRAGON, 0},
+    {NPC_CHROMATIC_WHELP, NPC_CHROMATIC_WHELP, NPC_CHROMATIC_WHELP, NPC_CHROMATIC_DRAGON, 0},
+    {NPC_CHROMATIC_WHELP, NPC_CHROMATIC_WHELP, NPC_CHROMATIC_DRAGON, NPC_BLACKHAND_HANDLER, 0},
+    {NPC_CHROMATIC_WHELP, NPC_CHROMATIC_WHELP, NPC_CHROMATIC_DRAGON, NPC_BLACKHAND_HANDLER, 0},
+    {NPC_CHROMATIC_WHELP, NPC_CHROMATIC_WHELP, NPC_CHROMATIC_WHELP, NPC_CHROMATIC_DRAGON, NPC_BLACKHAND_HANDLER},
+    {NPC_CHROMATIC_WHELP, NPC_CHROMATIC_WHELP, NPC_CHROMATIC_DRAGON, NPC_CHROMATIC_DRAGON, NPC_BLACKHAND_HANDLER},
+    {NPC_CHROMATIC_WHELP, NPC_CHROMATIC_WHELP, NPC_CHROMATIC_DRAGON, NPC_CHROMATIC_DRAGON, NPC_BLACKHAND_HANDLER},
+};
+
+class MANGOS_DLL_DECL instance_blackrock_spire : public ScriptedInstance, private DialogueHelper
+{
+    public:
+        instance_blackrock_spire(Map* pMap);
+        ~instance_blackrock_spire() {}
+
+        void Initialize();
+
+        void OnObjectCreate(GameObject* pGo);
+        void OnCreatureCreate(Creature* pCreature);
+        void OnCreatureDeath(Creature* pCreature);
+        void OnCreatureEvade(Creature* pCreature);
+        void OnCreatureEnterCombat(Creature* pCreature);
+
+        void SetData(uint32 uiType, uint32 uiData);
+        void SetData64(uint32 uiType, uint64 uiData);
+        uint32 GetData(uint32 uiType);
+
+        const char* Save() { return m_strInstData.c_str(); }
+        void Load(const char* chrIn);
+
+        void DoUseEmberseerRunes(bool bReset = false);
+        void DoProcessEmberseerEvent();
+
+        void DoSortRoomEventMobs();
+        void GetIncarceratorGUIDList(GuidList &lList) { lList = m_lIncarceratorGUIDList; }
+        void GetRookeryEggGUIDList(GuidList &lList) { lList = m_lRookeryEggGUIDList; }
+
+        void Update(uint32 uiDiff);
+
+    private:
+        void JustDidDialogueStep(int32 iEntry);
+        void DoSendNextStadiumWave();
+
+        uint32 m_auiEncounter[MAX_ENCOUNTER];
+        std::string m_strInstData;
+
+        uint32 m_uiStadiumEventTimer;
+        uint8 m_uiStadiumWaves;
+        uint8 m_uiStadiumMobsAlive;
+
+        ObjectGuid m_aRoomRuneGuid[MAX_ROOMS];
+        GuidList m_alRoomEventMobGUIDSorted[MAX_ROOMS];
+        GuidList m_lRoomEventMobGUIDList;
+        GuidList m_lIncarceratorGUIDList;
+        GuidList m_lRookeryEggGUIDList;
+        GuidList m_lEmberseerRunesGUIDList;
+};
+
+#endif
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_drakkisath.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_drakkisath.cpp
new file mode 100644
index 0000000..6f88137
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_drakkisath.cpp
@@ -0,0 +1,110 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Drakkisath
+SD%Complete: 100
+SDComment:
+SDCategory: Blackrock Spire
+EndScriptData */
+
+#include "precompiled.h"
+
+enum
+{
+    SPELL_FIRENOVA       = 23462,
+    SPELL_CLEAVE         = 20691,
+    SPELL_CONFLIGURATION = 16805,
+    SPELL_THUNDERCLAP    = 15548                            //Not sure if right ID. 23931 would be a harder possibility.
+};
+
+struct MANGOS_DLL_DECL boss_drakkisathAI : public ScriptedAI
+{
+    boss_drakkisathAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
+
+    uint32 m_uiFireNovaTimer;
+    uint32 m_uiCleaveTimer;
+    uint32 m_uiConfligurationTimer;
+    uint32 m_uiThunderclapTimer;
+
+    void Reset()
+    {
+        m_uiFireNovaTimer       = 6000;
+        m_uiCleaveTimer         = 8000;
+        m_uiConfligurationTimer = 15000;
+        m_uiThunderclapTimer    = 17000;
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        // Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // FireNova
+        if (m_uiFireNovaTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_FIRENOVA);
+            m_uiFireNovaTimer = 10000;
+        }
+        else
+            m_uiFireNovaTimer -= uiDiff;
+
+        // Cleave
+        if (m_uiCleaveTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(), SPELL_CLEAVE);
+            m_uiCleaveTimer = 8000;
+        }
+        else
+            m_uiCleaveTimer -= uiDiff;
+
+        // Confliguration
+        if (m_uiConfligurationTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(), SPELL_CONFLIGURATION, 0, m_creature->getVictim()->GetObjectGuid());
+            m_uiConfligurationTimer = 18000;
+        }
+        else
+            m_uiConfligurationTimer -= uiDiff;
+
+        // Thunderclap
+        if (m_uiThunderclapTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_THUNDERCLAP);
+            m_uiThunderclapTimer = 20000;
+        }
+        else
+            m_uiThunderclapTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_drakkisath(Creature* pCreature)
+{
+    return new boss_drakkisathAI(pCreature);
+}
+
+void AddSC_boss_drakkisath()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_drakkisath";
+    pNewScript->GetAI = &GetAI_boss_drakkisath;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_gyth.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_gyth.cpp
new file mode 100644
index 0000000..7e7c4ec
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_gyth.cpp
@@ -0,0 +1,148 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Gyth
+SD%Complete: 100
+SDComment: Timers may need adjustments
+SDCategory: Blackrock Spire
+EndScriptData */
+
+#include "precompiled.h"
+#include "blackrock_spire.h"
+
+enum
+{
+    SAY_NEFARIUS_BUFF_GYTH  = -1229017,
+    EMOTE_KNOCKED_OFF       = -1229019,
+
+    SPELL_CHROMATIC_CHAOS   = 16337,                // casted by Nefarius at 50%
+    SPELL_REND_MOUNTS       = 16167,
+    SPELL_SUMMON_REND       = 16328,
+    SPELL_CORROSIVE_ACID    = 16359,
+    SPELL_FREEZE            = 16350,
+    SPELL_FLAME_BREATH      = 16390,
+    SPELL_KNOCK_AWAY        = 10101,
+};
+
+struct MANGOS_DLL_DECL boss_gythAI : public ScriptedAI
+{
+    boss_gythAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (instance_blackrock_spire*) pCreature->GetInstanceData();
+        Reset();
+    }
+
+    instance_blackrock_spire* m_pInstance;
+
+    uint32 uiCorrosiveAcidTimer;
+    uint32 uiFreezeTimer;
+    uint32 uiFlamebreathTimer;
+
+    bool m_bSummonedRend;
+    bool m_bHasChromaticChaos;
+
+    void Reset()
+    {
+        uiCorrosiveAcidTimer = 8000;
+        uiFreezeTimer        = 11000;
+        uiFlamebreathTimer   = 4000;
+        m_bSummonedRend      = false;
+        m_bHasChromaticChaos = false;
+
+        DoCastSpellIfCan(m_creature, SPELL_REND_MOUNTS);
+    }
+
+    void JustSummoned(Creature* pSummoned)
+    {
+        DoScriptText(EMOTE_KNOCKED_OFF, pSummoned);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        //Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Chromatic Chaos at 50%
+        if (!m_bHasChromaticChaos && m_creature->GetHealthPercent() < 50.0f)
+        {
+            if (m_pInstance)
+            {
+                if (Creature* pNefarius = m_pInstance->GetSingleCreatureFromStorage(NPC_LORD_VICTOR_NEFARIUS))
+                {
+                    pNefarius->CastSpell(m_creature, SPELL_CHROMATIC_CHAOS, true);
+                    DoScriptText(SAY_NEFARIUS_BUFF_GYTH, pNefarius);
+                    m_bHasChromaticChaos = true;
+                }
+            }
+        }
+
+        // CorrosiveAcid_Timer
+        if (uiCorrosiveAcidTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_CORROSIVE_ACID) == CAST_OK)
+                uiCorrosiveAcidTimer = 7000;
+        }
+        else
+            uiCorrosiveAcidTimer -= uiDiff;
+
+        // Freeze_Timer
+        if (uiFreezeTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_FREEZE) == CAST_OK)
+                uiFreezeTimer = 16000;
+        }
+        else
+            uiFreezeTimer -= uiDiff;
+
+        // Flamebreath_Timer
+        if (uiFlamebreathTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_FLAME_BREATH) == CAST_OK)
+                uiFlamebreathTimer = 10500;
+        }
+        else
+            uiFlamebreathTimer -= uiDiff;
+
+        // Summon Rend
+        if (!m_bSummonedRend && m_creature->GetHealthPercent() < 11.0f)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_SUMMON_REND) == CAST_OK)
+            {
+                m_creature->RemoveAurasDueToSpell(SPELL_REND_MOUNTS);
+                m_bSummonedRend = true;
+            }
+        }
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_gyth(Creature* pCreature)
+{
+    return new boss_gythAI(pCreature);
+}
+
+void AddSC_boss_gyth()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_gyth";
+    pNewScript->GetAI = &GetAI_boss_gyth;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_halycon.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_halycon.cpp
new file mode 100644
index 0000000..e40f262
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_halycon.cpp
@@ -0,0 +1,92 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Halycon
+SD%Complete: 100
+SDComment:
+SDCategory: Blackrock Spire
+EndScriptData */
+
+#include "precompiled.h"
+
+#define SPELL_CROWDPUMMEL       10887
+#define SPELL_MIGHTYBLOW        14099
+
+#define ADD_1X                  -169.839203f
+#define ADD_1Y                  -324.961395f
+#define ADD_1Z                  64.401443f
+#define ADD_1O                  3.124724f
+
+struct MANGOS_DLL_DECL boss_halyconAI : public ScriptedAI
+{
+    boss_halyconAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
+
+    uint32 CrowdPummel_Timer;
+    uint32 MightyBlow_Timer;
+    bool Summoned;
+
+    void Reset()
+    {
+        CrowdPummel_Timer = 8000;
+        MightyBlow_Timer = 14000;
+        Summoned = false;
+    }
+
+    void UpdateAI(const uint32 diff)
+    {
+        //Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        //CrowdPummel_Timer
+        if (CrowdPummel_Timer < diff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(),SPELL_CROWDPUMMEL);
+            CrowdPummel_Timer = 14000;
+        }else CrowdPummel_Timer -= diff;
+
+        //MightyBlow_Timer
+        if (MightyBlow_Timer < diff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(),SPELL_MIGHTYBLOW);
+            MightyBlow_Timer = 10000;
+        }else MightyBlow_Timer -= diff;
+
+        //Summon Gizrul
+        if (!Summoned && m_creature->GetHealthPercent() < 25.0f)
+        {
+            m_creature->SummonCreature(10268,ADD_1X,ADD_1Y,ADD_1Z,ADD_1O,TEMPSUMMON_TIMED_DESPAWN,300000);
+            Summoned = true;
+        }
+
+        DoMeleeAttackIfReady();
+    }
+};
+CreatureAI* GetAI_boss_halycon(Creature* pCreature)
+{
+    return new boss_halyconAI(pCreature);
+}
+
+void AddSC_boss_halycon()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_halycon";
+    pNewScript->GetAI = &GetAI_boss_halycon;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_highlord_omokk.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_highlord_omokk.cpp
new file mode 100644
index 0000000..57d65d2
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_highlord_omokk.cpp
@@ -0,0 +1,134 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Highlord_Omokk
+SD%Complete: 100
+SDComment:
+SDCategory: Blackrock Spire
+EndScriptData */
+
+#include "precompiled.h"
+
+enum
+{
+    SPELL_WARSTOMP    = 24375,
+    SPELL_STRIKE      = 18368,
+    SPELL_REND        = 18106,
+    SPELL_SUNDERARMOR = 24317,
+    SPELL_KNOCKAWAY   = 20686,
+    SPELL_SLOW        = 22356
+};
+
+struct MANGOS_DLL_DECL boss_highlordomokkAI : public ScriptedAI
+{
+    boss_highlordomokkAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
+
+    uint32 m_uiWarStompTimer;
+    uint32 m_uiStrikeTimer;
+    uint32 m_uiRendTimer;
+    uint32 m_uiSunderArmorTimer;
+    uint32 m_uiKnockAwayTimer;
+    uint32 m_uiSlowTimer;
+
+    void Reset()
+    {
+        m_uiWarStompTimer    = 15000;
+        m_uiStrikeTimer      = 10000;
+        m_uiRendTimer        = 14000;
+        m_uiSunderArmorTimer = 2000;
+        m_uiKnockAwayTimer   = 18000;
+        m_uiSlowTimer        = 24000;
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        //Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // WarStomp
+        if (m_uiWarStompTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_WARSTOMP);
+            m_uiWarStompTimer = 14000;
+        }
+        else
+            m_uiWarStompTimer -= uiDiff;
+
+        // Strike
+        if (m_uiStrikeTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(), SPELL_STRIKE);
+            m_uiStrikeTimer = 10000;
+        }
+        else
+            m_uiStrikeTimer -= uiDiff;
+
+        // Rend
+        if (m_uiRendTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(), SPELL_REND);
+            m_uiRendTimer = 18000;
+        }
+        else
+            m_uiRendTimer -= uiDiff;
+
+        // Sunder Armor
+        if (m_uiSunderArmorTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(), SPELL_SUNDERARMOR);
+            m_uiSunderArmorTimer = 25000;
+        }
+        else
+            m_uiSunderArmorTimer -= uiDiff;
+
+        // KnockAway
+        if (m_uiKnockAwayTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_KNOCKAWAY);
+            m_uiKnockAwayTimer = 12000;
+        }
+        else
+            m_uiKnockAwayTimer -= uiDiff;
+
+        // Slow
+        if (m_uiSlowTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_SLOW);
+            m_uiSlowTimer = 18000;
+        }
+        else
+            m_uiSlowTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_highlordomokk(Creature* pCreature)
+{
+    return new boss_highlordomokkAI(pCreature);
+}
+
+void AddSC_boss_highlordomokk()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_highlord_omokk";
+    pNewScript->GetAI = &GetAI_boss_highlordomokk;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_mother_smolderweb.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_mother_smolderweb.cpp
new file mode 100644
index 0000000..25a1e66
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_mother_smolderweb.cpp
@@ -0,0 +1,93 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Mother_Smolderweb
+SD%Complete: 100
+SDComment: Uncertain how often mother's milk is casted
+SDCategory: Blackrock Spire
+EndScriptData */
+
+#include "precompiled.h"
+
+enum
+{
+    SPELL_CRYSTALIZE              = 16104,
+    SPELL_MOTHERSMILK             = 16468,
+    SPELL_SUMMON_SPIRE_SPIDERLING = 16103
+};
+
+struct MANGOS_DLL_DECL boss_mothersmolderwebAI : public ScriptedAI
+{
+    boss_mothersmolderwebAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
+
+    uint32 m_uiCrystalizeTimer;
+    uint32 m_uiMothersMilkTimer;
+
+    void Reset()
+    {
+        m_uiCrystalizeTimer  = 20000;
+        m_uiMothersMilkTimer = 10000;
+    }
+
+    void DamageTaken(Unit* pDoneBy, uint32 &uiDamage)
+    {
+        if (m_creature->GetHealth() <= uiDamage)
+            DoCastSpellIfCan(m_creature, SPELL_SUMMON_SPIRE_SPIDERLING, CAST_TRIGGERED);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        // Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Crystalize
+        if (m_uiCrystalizeTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_CRYSTALIZE);
+            m_uiCrystalizeTimer = 15000;
+        }
+        else
+            m_uiCrystalizeTimer -= uiDiff;
+
+        // Mothers Milk
+        if (m_uiMothersMilkTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_MOTHERSMILK);
+            m_uiMothersMilkTimer = urand(5000, 12500);
+        }
+        else
+            m_uiMothersMilkTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_mothersmolderweb(Creature* pCreature)
+{
+    return new boss_mothersmolderwebAI(pCreature);
+}
+
+void AddSC_boss_mothersmolderweb()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_mother_smolderweb";
+    pNewScript->GetAI = &GetAI_boss_mothersmolderweb;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_overlord_wyrmthalak.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_overlord_wyrmthalak.cpp
new file mode 100644
index 0000000..fa82561
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_overlord_wyrmthalak.cpp
@@ -0,0 +1,143 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Overlord_Wyrmthalak
+SD%Complete: 100
+SDComment:
+SDCategory: Blackrock Spire
+EndScriptData */
+
+#include "precompiled.h"
+
+enum
+{
+    SPELL_BLASTWAVE            = 11130,
+    SPELL_SHOUT                = 23511,
+    SPELL_CLEAVE               = 20691,
+    SPELL_KNOCKAWAY            = 20686,
+
+    NPC_SPIRESTONE_WARLORD     = 9216,
+    NPC_SMOLDERTHORN_BERSERKER = 9268
+
+};
+
+const float afLocations[2][4]=
+{
+    {-39.355381f, -513.456482f, 88.472046f, 4.679872f},
+    {-49.875881f, -511.896942f, 88.195160f, 4.613114f}
+};
+
+struct MANGOS_DLL_DECL boss_overlordwyrmthalakAI : public ScriptedAI
+{
+    boss_overlordwyrmthalakAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
+
+    uint32 m_uiBlastWaveTimer;
+    uint32 m_uiShoutTimer;
+    uint32 m_uiCleaveTimer;
+    uint32 m_uiKnockawayTimer;
+    bool m_bSummoned;
+
+    void Reset()
+    {
+        m_uiBlastWaveTimer = 20000;
+        m_uiShoutTimer     = 2000;
+        m_uiCleaveTimer    = 6000;
+        m_uiKnockawayTimer = 12000;
+        m_bSummoned = false;
+    }
+
+    void JustSummoned(Creature* pSummoned)
+    {
+        if (pSummoned->GetEntry() != NPC_SPIRESTONE_WARLORD && pSummoned->GetEntry() != NPC_SMOLDERTHORN_BERSERKER)
+            return;
+
+        if (m_creature->getVictim())
+        {
+            Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0);
+            pSummoned->AI()->AttackStart(pTarget ? pTarget : m_creature->getVictim());
+        }
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        // Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // BlastWave
+        if (m_uiBlastWaveTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_BLASTWAVE);
+            m_uiBlastWaveTimer = 20000;
+        }
+        else
+            m_uiBlastWaveTimer -= uiDiff;
+
+        // Shout
+        if (m_uiShoutTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_SHOUT);
+            m_uiShoutTimer = 10000;
+        }
+        else
+            m_uiShoutTimer -= uiDiff;
+
+        // Cleave
+        if (m_uiCleaveTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(), SPELL_CLEAVE);
+            m_uiCleaveTimer = 7000;
+        }
+        else
+            m_uiCleaveTimer -= uiDiff;
+
+        // Knockaway
+        if (m_uiKnockawayTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_KNOCKAWAY);
+            m_uiKnockawayTimer = 14000;
+        }
+        else
+            m_uiKnockawayTimer -= uiDiff;
+
+        // Summon two Beserks
+        if (!m_bSummoned && m_creature->GetHealthPercent() < 51.0f)
+        {
+            m_creature->SummonCreature(NPC_SPIRESTONE_WARLORD, afLocations[0][0], afLocations[0][1], afLocations[0][2], afLocations[0][3], TEMPSUMMON_TIMED_DESPAWN, 300000);
+            m_creature->SummonCreature(NPC_SMOLDERTHORN_BERSERKER, afLocations[1][0], afLocations[1][1], afLocations[1][2], afLocations[1][3], TEMPSUMMON_TIMED_DESPAWN, 300000);
+
+            m_bSummoned = true;
+        }
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_overlordwyrmthalak(Creature* pCreature)
+{
+    return new boss_overlordwyrmthalakAI(pCreature);
+}
+
+void AddSC_boss_overlordwyrmthalak()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_overlord_wyrmthalak";
+    pNewScript->GetAI = &GetAI_boss_overlordwyrmthalak;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_pyroguard_emberseer.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_pyroguard_emberseer.cpp
new file mode 100644
index 0000000..8c78aef
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_pyroguard_emberseer.cpp
@@ -0,0 +1,207 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Pyroguard_Emberseer
+SD%Complete: 90
+SDComment: Dummy spells used during the transformation may need further research
+SDCategory: Blackrock Spire
+EndScriptData */
+
+#include "precompiled.h"
+#include "blackrock_spire.h"
+
+enum
+{
+    // Intro emote/say
+    EMOTE_NEAR              = -1229001,
+    EMOTE_FULL              = -1229002,
+    SAY_FREE                = -1229003,
+
+    MAX_GROWING_STACKS      = 20,
+
+    // Intro spells
+    SPELL_ENCAGE_EMBERSEER  = 15281,                        // cast by Blackhand Incarcerator
+
+    SPELL_FIRE_SHIELD       = 13376,                        // not sure what's the purpose of this
+    SPELL_DESPAWN_EMBERSEER = 16078,                        // not sure what's the purpose of this
+    SPELL_FREEZE_ANIM       = 16245,                        // not sure what's the purpose of this
+    SPELL_FULL_STRENGHT     = 16047,
+    SPELL_GROWING           = 16049,                        // stacking aura
+    SPELL_BONUS_DAMAGE      = 16534,                        // triggered on full grow
+    SPELL_TRANSFORM         = 16052,
+
+    // Combat spells
+    SPELL_FIRENOVA          = 23462,
+    SPELL_FLAMEBUFFET       = 23341,
+    SPELL_PYROBLAST         = 20228                         // guesswork, but best fitting in spells-area, was 17274 (has mana cost)
+};
+
+struct MANGOS_DLL_DECL boss_pyroguard_emberseerAI : public ScriptedAI
+{
+    boss_pyroguard_emberseerAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (instance_blackrock_spire*) pCreature->GetInstanceData();
+        Reset();
+    }
+
+    instance_blackrock_spire* m_pInstance;
+
+    uint32 m_uiEncageTimer;
+    uint32 m_uiFireNovaTimer;
+    uint32 m_uiFlameBuffetTimer;
+    uint32 m_uiPyroBlastTimer;
+    uint8 m_uiGrowingStacks;
+
+    void Reset()
+    {
+        m_uiEncageTimer         = 10000;
+        m_uiFireNovaTimer       = 6000;
+        m_uiFlameBuffetTimer    = 3000;
+        m_uiPyroBlastTimer      = 14000;
+        m_uiGrowingStacks       = 0;
+
+        m_creature->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
+    }
+
+    void JustDied(Unit* pKiller)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_EMBERSEER, DONE);
+    }
+
+    void JustReachedHome()
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_EMBERSEER, FAIL);
+    }
+
+    // Wrapper to handle the transformation
+    void DoHandleEmberseerGrowing()
+    {
+        ++m_uiGrowingStacks;
+
+        if (m_uiGrowingStacks == MAX_GROWING_STACKS*0.5f)
+            DoScriptText(EMOTE_NEAR, m_creature);
+        else if (m_uiGrowingStacks == MAX_GROWING_STACKS)
+        {
+            DoScriptText(EMOTE_FULL, m_creature);
+            DoScriptText(SAY_FREE, m_creature);
+
+            // Note: the spell order needs further research
+            DoCastSpellIfCan(m_creature, SPELL_FULL_STRENGHT, CAST_TRIGGERED);
+            DoCastSpellIfCan(m_creature, SPELL_BONUS_DAMAGE, CAST_TRIGGERED);
+            DoCastSpellIfCan(m_creature, SPELL_TRANSFORM, CAST_TRIGGERED);
+
+            // activate all runes
+            if (m_pInstance)
+            {
+                m_pInstance->DoUseEmberseerRunes();
+                // Redundant check: if for some reason the event isn't set in progress until this point - avoid using the altar again when the boss is fully grown
+                m_pInstance->SetData(TYPE_EMBERSEER, IN_PROGRESS);
+            }
+
+            m_creature->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
+        }
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        // Cast Encage spell on OOC timer
+        if (m_uiEncageTimer)
+        {
+            if (m_uiEncageTimer <= uiDiff)
+            {
+                GuidList m_lIncarceratorsGuid;
+                m_pInstance->GetIncarceratorGUIDList(m_lIncarceratorsGuid);
+
+                for (GuidList::const_iterator itr = m_lIncarceratorsGuid.begin(); itr != m_lIncarceratorsGuid.end(); ++itr)
+                {
+                    if (Creature* pIncarcerator = m_creature->GetMap()->GetCreature(*itr))
+                        pIncarcerator->CastSpell(m_creature, SPELL_ENCAGE_EMBERSEER, false);
+                }
+
+                m_uiEncageTimer = 0;
+            }
+            else
+                m_uiEncageTimer -= uiDiff;
+        }
+
+        // Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // FireNova Timer
+        if (m_uiFireNovaTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_FIRENOVA) == CAST_OK)
+                m_uiFireNovaTimer = 6000;
+        }
+        else
+            m_uiFireNovaTimer -= uiDiff;
+
+        // FlameBuffet Timer
+        if (m_uiFlameBuffetTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_FLAMEBUFFET) == CAST_OK)
+                m_uiFlameBuffetTimer = 14000;
+        }
+        else
+            m_uiFlameBuffetTimer -= uiDiff;
+
+        // PyroBlast Timer
+        if (m_uiPyroBlastTimer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+            {
+                if (DoCastSpellIfCan(pTarget, SPELL_PYROBLAST) == CAST_OK)
+                    m_uiPyroBlastTimer = 15000;
+            }
+        }
+        else
+            m_uiPyroBlastTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_pyroguard_emberseer(Creature* pCreature)
+{
+    return new boss_pyroguard_emberseerAI(pCreature);
+}
+
+bool EffectDummyCreature_pyroguard_emberseer(Unit* pCaster, uint32 uiSpellId, SpellEffectIndex uiEffIndex, Creature* pCreatureTarget)
+{
+    //always check spellid and effectindex
+    if (uiSpellId == SPELL_GROWING && uiEffIndex == EFFECT_INDEX_0)
+    {
+        if (boss_pyroguard_emberseerAI* pEmberseerAI = dynamic_cast<boss_pyroguard_emberseerAI*>(pCreatureTarget->AI()))
+            pEmberseerAI->DoHandleEmberseerGrowing();
+    }
+
+    return false;
+}
+
+void AddSC_boss_pyroguard_emberseer()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_pyroguard_emberseer";
+    pNewScript->GetAI = &GetAI_boss_pyroguard_emberseer;
+    pNewScript->pEffectDummyNPC = &EffectDummyCreature_pyroguard_emberseer;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_quartermaster_zigris.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_quartermaster_zigris.cpp
new file mode 100644
index 0000000..25c8be0
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_quartermaster_zigris.cpp
@@ -0,0 +1,90 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Quartmaster_Zigris
+SD%Complete: 100
+SDComment: Needs revision
+SDCategory: Blackrock Spire
+EndScriptData */
+
+#include "precompiled.h"
+
+enum
+{
+    SPELL_SHOOT          = 16496,
+    SPELL_STUNBOMB       = 16497,
+    SPELL_HEALING_POTION = 15504,
+    SPELL_HOOKEDNET      = 15609
+};
+
+struct MANGOS_DLL_DECL boss_quatermasterzigrisAI : public ScriptedAI
+{
+    boss_quatermasterzigrisAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
+
+    uint32 m_uiShootTimer;
+    uint32 m_uiStunBombTimer;
+    //uint32 HelingPotion_Timer;
+
+    void Reset()
+    {
+        m_uiShootTimer    = 1000;
+        m_uiStunBombTimer = 16000;
+        //HelingPotion_Timer = 25000;
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        // Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Shoot
+        if (m_uiShootTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(), SPELL_SHOOT);
+            m_uiShootTimer = 500;
+        }
+        else
+            m_uiShootTimer -= uiDiff;
+
+        // StunBomb
+        if (m_uiStunBombTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_STUNBOMB);
+            m_uiStunBombTimer = 14000;
+        }
+        else
+            m_uiStunBombTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_quatermasterzigris(Creature* pCreature)
+{
+    return new boss_quatermasterzigrisAI(pCreature);
+}
+
+void AddSC_boss_quatermasterzigris()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "quartermaster_zigris";
+    pNewScript->GetAI = &GetAI_boss_quatermasterzigris;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_rend_blackhand.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_rend_blackhand.cpp
new file mode 100644
index 0000000..be09d19
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_rend_blackhand.cpp
@@ -0,0 +1,98 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Rend_Blackhand
+SD%Complete: 100
+SDComment: Intro event NYI
+SDCategory: Blackrock Spire
+EndScriptData */
+
+#include "precompiled.h"
+
+enum
+{
+    SPELL_WHIRLWIND   = 26038,
+    SPELL_CLEAVE      = 20691,
+    SPELL_THUNDERCLAP = 23931                               //Not sure if he cast this spell
+};
+
+struct MANGOS_DLL_DECL boss_rend_blackhandAI : public ScriptedAI
+{
+    boss_rend_blackhandAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
+
+    uint32 m_uiWhirlWindTimer;
+    uint32 m_uiCleaveTimer;
+    uint32 m_uiThunderclapTimer;
+
+    void Reset()
+    {
+        m_uiWhirlWindTimer   = 20000;
+        m_uiCleaveTimer      = 5000;
+        m_uiThunderclapTimer = 9000;
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        // Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // WhirlWind
+        if (m_uiWhirlWindTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_WHIRLWIND);
+            m_uiWhirlWindTimer = 18000;
+        }
+        else
+            m_uiWhirlWindTimer -= uiDiff;
+
+        // Cleave
+        if (m_uiCleaveTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(), SPELL_CLEAVE);
+            m_uiCleaveTimer = 10000;
+        }
+        else
+            m_uiCleaveTimer -= uiDiff;
+
+        // Thunderclap
+        if (m_uiThunderclapTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_THUNDERCLAP);
+            m_uiThunderclapTimer = 16000;
+        }
+        else
+            m_uiThunderclapTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_rend_blackhand(Creature* pCreature)
+{
+    return new boss_rend_blackhandAI(pCreature);
+}
+
+void AddSC_boss_rend_blackhand()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_rend_blackhand";
+    pNewScript->GetAI = &GetAI_boss_rend_blackhand;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_shadow_hunter_voshgajin.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_shadow_hunter_voshgajin.cpp
new file mode 100644
index 0000000..1a9cd75
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_shadow_hunter_voshgajin.cpp
@@ -0,0 +1,101 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Shadow_Hunter_Voshgajin
+SD%Complete: 100
+SDComment:
+SDCategory: Blackrock Spire
+EndScriptData */
+
+#include "precompiled.h"
+
+enum
+{
+    SPELL_CURSEOFBLOOD = 24673,
+    SPELL_HEX          = 16708,
+    SPELL_CLEAVE       = 20691
+};
+
+struct MANGOS_DLL_DECL boss_shadowvoshAI : public ScriptedAI
+{
+    boss_shadowvoshAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
+
+    uint32 m_uiCurseOfBloodTimer;
+    uint32 m_uiHexTimer;
+    uint32 m_uiCleaveTimer;
+
+    void Reset()
+    {
+        m_uiCurseOfBloodTimer = 2000;
+        m_uiHexTimer          = 8000;
+        m_uiCleaveTimer       = 14000;
+
+        //m_creature->CastSpell(m_creature,SPELL_ICEARMOR,true);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        // Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Curse Of Blood
+        if (m_uiCurseOfBloodTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_CURSEOFBLOOD);
+            m_uiCurseOfBloodTimer = 45000;
+        }
+        else
+            m_uiCurseOfBloodTimer -= uiDiff;
+
+        // Hex
+        if (m_uiHexTimer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+                DoCastSpellIfCan(pTarget, SPELL_HEX);
+            m_uiHexTimer = 15000;
+        }
+        else
+            m_uiHexTimer -= uiDiff;
+
+        // Cleave
+        if (m_uiCleaveTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(), SPELL_CLEAVE);
+            m_uiCleaveTimer = 7000;
+        }
+        else
+            m_uiCleaveTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_shadowvosh(Creature* pCreature)
+{
+    return new boss_shadowvoshAI(pCreature);
+}
+
+void AddSC_boss_shadowvosh()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_shadow_hunter_voshgajin";
+    pNewScript->GetAI = &GetAI_boss_shadowvosh;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_the_beast.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_the_beast.cpp
new file mode 100644
index 0000000..6329f87
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_the_beast.cpp
@@ -0,0 +1,100 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_The_Best
+SD%Complete: 100
+SDComment:
+SDCategory: Blackrock Spire
+EndScriptData */
+
+#include "precompiled.h"
+
+enum
+{
+    SPELL_FLAMEBREAK     = 16785,
+    SPELL_IMMOLATE       = 20294,
+    SPELL_TERRIFYINGROAR = 14100
+};
+
+struct MANGOS_DLL_DECL boss_thebeastAI : public ScriptedAI
+{
+    boss_thebeastAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
+
+    uint32 m_uiFlamebreakTimer;
+    uint32 m_uiImmolateTimer;
+    uint32 m_uiTerrifyingRoarTimer;
+
+    void Reset()
+    {
+        m_uiFlamebreakTimer     = 12000;
+        m_uiImmolateTimer       = 3000;
+        m_uiTerrifyingRoarTimer = 23000;
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        // Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Flamebreak
+        if (m_uiFlamebreakTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_FLAMEBREAK);
+            m_uiFlamebreakTimer = 10000;
+        }
+        else
+            m_uiFlamebreakTimer -= uiDiff;
+
+        // Immolate
+        if (m_uiImmolateTimer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+                DoCastSpellIfCan(pTarget, SPELL_IMMOLATE);
+
+            m_uiImmolateTimer = 8000;
+        }
+        else
+            m_uiImmolateTimer -= uiDiff;
+
+        // Terrifying Roar
+        if (m_uiTerrifyingRoarTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_TERRIFYINGROAR);
+            m_uiTerrifyingRoarTimer = 20000;
+        }
+        else
+            m_uiTerrifyingRoarTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_thebeast(Creature* pCreature)
+{
+    return new boss_thebeastAI(pCreature);
+}
+
+void AddSC_boss_thebeast()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_the_beast";
+    pNewScript->GetAI = &GetAI_boss_thebeast;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_warmaster_voone.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_warmaster_voone.cpp
new file mode 100644
index 0000000..a6728b6
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/boss_warmaster_voone.cpp
@@ -0,0 +1,119 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Warmaster_Voone
+SD%Complete: 100
+SDComment:
+SDCategory: Blackrock Spire
+EndScriptData */
+
+#include "precompiled.h"
+
+#define SPELL_SNAPKICK          15618
+#define SPELL_CLEAVE            15284
+#define SPELL_UPPERCUT          10966
+#define SPELL_MORTALSTRIKE      15708
+#define SPELL_PUMMEL            15615
+#define SPELL_THROWAXE          16075
+
+struct MANGOS_DLL_DECL boss_warmastervooneAI : public ScriptedAI
+{
+    boss_warmastervooneAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
+
+    uint32 Snapkick_Timer;
+    uint32 Cleave_Timer;
+    uint32 Uppercut_Timer;
+    uint32 MortalStrike_Timer;
+    uint32 Pummel_Timer;
+    uint32 ThrowAxe_Timer;
+
+    void Reset()
+    {
+        Snapkick_Timer = 8000;
+        Cleave_Timer = 14000;
+        Uppercut_Timer = 20000;
+        MortalStrike_Timer = 12000;
+        Pummel_Timer = 32000;
+        ThrowAxe_Timer = 1000;
+    }
+
+    void UpdateAI(const uint32 diff)
+    {
+        //Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        //Snapkick_Timer
+        if (Snapkick_Timer < diff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(),SPELL_SNAPKICK);
+            Snapkick_Timer = 6000;
+        }else Snapkick_Timer -= diff;
+
+        //Cleave_Timer
+        if (Cleave_Timer < diff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(),SPELL_CLEAVE);
+            Cleave_Timer = 12000;
+        }else Cleave_Timer -= diff;
+
+        //Uppercut_Timer
+        if (Uppercut_Timer < diff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(),SPELL_UPPERCUT);
+            Uppercut_Timer = 14000;
+        }else Uppercut_Timer -= diff;
+
+        //MortalStrike_Timer
+        if (MortalStrike_Timer < diff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(),SPELL_MORTALSTRIKE);
+            MortalStrike_Timer = 10000;
+        }else MortalStrike_Timer -= diff;
+
+        //Pummel_Timer
+        if (Pummel_Timer < diff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(),SPELL_PUMMEL);
+            Pummel_Timer = 16000;
+        }else Pummel_Timer -= diff;
+
+        //ThrowAxe_Timer
+        if (ThrowAxe_Timer < diff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(),SPELL_THROWAXE);
+            ThrowAxe_Timer = 8000;
+        }else ThrowAxe_Timer -= diff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_warmastervoone(Creature* pCreature)
+{
+    return new boss_warmastervooneAI(pCreature);
+}
+
+void AddSC_boss_warmastervoone()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_warmaster_voone";
+    pNewScript->GetAI = &GetAI_boss_warmastervoone;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/instance_blackrock_spire.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/instance_blackrock_spire.cpp
new file mode 100644
index 0000000..96db488
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackrock_spire/instance_blackrock_spire.cpp
@@ -0,0 +1,619 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: instance_blackrock_spire
+SD%Complete: 75
+SDComment: The Stadium event is missing some yells. Seal of Ascension related event NYI
+SDCategory: Blackrock Spire
+EndScriptData */
+
+#include "precompiled.h"
+#include "blackrock_spire.h"
+
+enum
+{
+    AREATRIGGER_ENTER_UBRS      = 2046,
+    AREATRIGGER_STADIUM         = 2026,
+
+    // Arena event dialogue - handled by instance
+    SAY_NEFARIUS_INTRO_1        = -1229004,
+    SAY_NEFARIUS_INTRO_2        = -1229005,
+    SAY_NEFARIUS_ATTACK_1       = -1229006,
+    SAY_REND_JOIN               = -1229007,
+    SAY_NEFARIUS_ATTACK_2       = -1229008,
+    SAY_NEFARIUS_ATTACK_3       = -1229009,
+    SAY_NEFARIUS_ATTACK_4       = -1229010,
+    SAY_REND_LOSE_1             = -1229011,
+    SAY_REND_LOSE_2             = -1229012,
+    SAY_NEFARIUS_LOSE_3         = -1229013,
+    SAY_NEFARIUS_LOSE_4         = -1229014,
+    SAY_REND_ATTACK             = -1229015,
+    SAY_NEFARIUS_WARCHIEF       = -1229016,
+    SAY_NEFARIUS_VICTORY        = -1229018,
+
+    // Emberseer event
+    EMOTE_BEGIN                 = -1229000,
+
+    SPELL_EMBERSEER_GROWING     = 16048,
+};
+
+/* Areatrigger
+1470 Instance Entry
+1628 LBRS, between Spiders and Ogres
+1946 LBRS, ubrs pre-quest giver (1)
+1986 LBRS, ubrs pre-quest giver (2)
+1987 LBRS, ubrs pre-quest giver (3)
+2026 UBRS, stadium event trigger
+2046 UBRS, way to upper
+2066 UBRS, The Beast - Exit (to the dark chamber)
+2067 UBRS, The Beast - Entry
+2068 LBRS, fall out of map
+3726 UBRS, entrance to BWL
+*/
+
+static const DialogueEntry aStadiumDialogue[] =
+{
+    {NPC_LORD_VICTOR_NEFARIUS,  0,                          1000},
+    {SAY_NEFARIUS_INTRO_1,      NPC_LORD_VICTOR_NEFARIUS,   7000},
+    {SAY_NEFARIUS_INTRO_2,      NPC_LORD_VICTOR_NEFARIUS,   5000},
+    {NPC_BLACKHAND_HANDLER,     0,                          0},
+    {SAY_NEFARIUS_LOSE_4,       NPC_LORD_VICTOR_NEFARIUS,   3000},
+    {SAY_REND_ATTACK,           NPC_REND_BLACKHAND,         2000},
+    {SAY_NEFARIUS_WARCHIEF,     NPC_LORD_VICTOR_NEFARIUS,   0},
+    {SAY_NEFARIUS_VICTORY,      NPC_LORD_VICTOR_NEFARIUS,   5000},
+    {NPC_REND_BLACKHAND,        0,                          0},
+    {0, 0, 0},
+};
+
+instance_blackrock_spire::instance_blackrock_spire(Map* pMap) : ScriptedInstance(pMap), DialogueHelper(aStadiumDialogue),
+    m_uiStadiumEventTimer(0),
+    m_uiStadiumMobsAlive(0),
+    m_uiStadiumWaves(0)
+{
+    Initialize();
+}
+
+void instance_blackrock_spire::Initialize()
+{
+    memset(&m_auiEncounter, 0, sizeof(m_auiEncounter));
+    memset(&m_aRoomRuneGuid, 0, sizeof(m_aRoomRuneGuid));
+    InitializeDialogueHelper(this);
+}
+
+void instance_blackrock_spire::OnObjectCreate(GameObject* pGo)
+{
+    switch(pGo->GetEntry())
+    {
+        case GO_EMBERSEER_IN:
+            if (GetData(TYPE_ROOM_EVENT) == DONE)
+                pGo->SetGoState(GO_STATE_ACTIVE);
+            break;
+        case GO_DOORS:
+            break;
+        case GO_EMBERSEER_OUT:
+            if (GetData(TYPE_EMBERSEER) == DONE)
+                pGo->SetGoState(GO_STATE_ACTIVE);
+            break;
+        case GO_GYTH_ENTRY_DOOR:
+        case GO_GYTH_COMBAT_DOOR:
+        case GO_DRAKKISATH_DOOR_1:
+        case GO_DRAKKISATH_DOOR_2:
+            break;
+        case GO_GYTH_EXIT_DOOR:
+            if (GetData(TYPE_STADIUM) == DONE)
+                pGo->SetGoState(GO_STATE_ACTIVE);
+            break;
+
+        case GO_ROOM_1_RUNE: m_aRoomRuneGuid[0] = pGo->GetObjectGuid(); return;
+        case GO_ROOM_2_RUNE: m_aRoomRuneGuid[1] = pGo->GetObjectGuid(); return;
+        case GO_ROOM_3_RUNE: m_aRoomRuneGuid[2] = pGo->GetObjectGuid(); return;
+        case GO_ROOM_4_RUNE: m_aRoomRuneGuid[3] = pGo->GetObjectGuid(); return;
+        case GO_ROOM_5_RUNE: m_aRoomRuneGuid[4] = pGo->GetObjectGuid(); return;
+        case GO_ROOM_6_RUNE: m_aRoomRuneGuid[5] = pGo->GetObjectGuid(); return;
+        case GO_ROOM_7_RUNE: m_aRoomRuneGuid[6] = pGo->GetObjectGuid(); return;
+
+        case GO_ROOKERY_EGG: m_lRookeryEggGUIDList.push_back(pGo->GetObjectGuid());   return;
+
+        case GO_EMBERSEER_RUNE_1:
+        case GO_EMBERSEER_RUNE_2:
+        case GO_EMBERSEER_RUNE_3:
+        case GO_EMBERSEER_RUNE_4:
+        case GO_EMBERSEER_RUNE_5:
+        case GO_EMBERSEER_RUNE_6:
+        case GO_EMBERSEER_RUNE_7:
+            m_lEmberseerRunesGUIDList.push_back(pGo->GetObjectGuid());
+            return;
+
+        default:
+            return;
+    }
+    m_mGoEntryGuidStore[pGo->GetEntry()] = pGo->GetObjectGuid();
+}
+
+void instance_blackrock_spire::OnCreatureCreate(Creature* pCreature)
+{
+    switch(pCreature->GetEntry())
+    {
+        case NPC_PYROGUARD_EMBERSEER:
+        case NPC_LORD_VICTOR_NEFARIUS:
+        case NPC_GYTH:
+        case NPC_REND_BLACKHAND:
+        case NPC_SCARSHIELD_INFILTRATOR:
+            m_mNpcEntryGuidStore[pCreature->GetEntry()] = pCreature->GetObjectGuid();
+            break;
+
+        case NPC_BLACKHAND_SUMMONER:
+        case NPC_BLACKHAND_VETERAN:      m_lRoomEventMobGUIDList.push_back(pCreature->GetObjectGuid()); break;
+        case NPC_BLACKHAND_INCARCERATOR: m_lIncarceratorGUIDList.push_back(pCreature->GetObjectGuid()); break;
+    }
+}
+
+void instance_blackrock_spire::SetData(uint32 uiType, uint32 uiData)
+{
+    switch(uiType)
+    {
+        case TYPE_ROOM_EVENT:
+            if (uiData == DONE)
+                DoUseDoorOrButton(GO_EMBERSEER_IN);
+            m_auiEncounter[0] = uiData;
+            break;
+        case TYPE_EMBERSEER:
+            // Don't set the same data twice
+            if (m_auiEncounter[1] == uiData)
+                break;
+            // Combat door
+            DoUseDoorOrButton(GO_DOORS);
+            // Respawn all incarcerators and reset the runes on FAIL
+            if (uiData == FAIL)
+            {
+                for (GuidList::const_iterator itr = m_lIncarceratorGUIDList.begin(); itr != m_lIncarceratorGUIDList.end(); ++itr)
+                {
+                    if (Creature* pIncarcerator = instance->GetCreature(*itr))
+                    {
+                        if (!pIncarcerator->isAlive())
+                            pIncarcerator->Respawn();
+                        pIncarcerator->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_PASSIVE);
+                    }
+                }
+
+                DoUseEmberseerRunes(true);
+            }
+            else if (uiData == DONE)
+            {
+                DoUseEmberseerRunes();
+                DoUseDoorOrButton(GO_EMBERSEER_OUT);
+            }
+            m_auiEncounter[1] = uiData;
+            break;
+        case TYPE_FLAMEWREATH:
+            m_auiEncounter[2] = uiData;
+            break;
+        case TYPE_STADIUM:
+            // Don't set the same data twice
+            if (m_auiEncounter[3] == uiData)
+                break;
+            // Combat door
+            DoUseDoorOrButton(GO_GYTH_ENTRY_DOOR);
+            // Start event
+            if (uiData == IN_PROGRESS)
+                StartNextDialogueText(SAY_NEFARIUS_INTRO_1);
+            else if (uiData == DONE)
+                DoUseDoorOrButton(GO_GYTH_EXIT_DOOR);
+            else if (uiData == FAIL)
+            {
+                // Despawn Nefarius and Rend on fail (the others are despawned OnCreatureEvade())
+                if (Creature* pNefarius = GetSingleCreatureFromStorage(NPC_LORD_VICTOR_NEFARIUS))
+                    pNefarius->ForcedDespawn();
+                if (Creature* pRend = GetSingleCreatureFromStorage(NPC_REND_BLACKHAND))
+                    pRend->ForcedDespawn();
+                if (Creature* pGyth = GetSingleCreatureFromStorage(NPC_GYTH))
+                    pGyth->ForcedDespawn();
+
+                m_uiStadiumEventTimer = 0;
+                m_uiStadiumMobsAlive = 0;
+                m_uiStadiumWaves = 0;
+            }
+            m_auiEncounter[3] = uiData;
+            break;
+        case TYPE_VALTHALAK:
+            m_auiEncounter[4] = uiData;
+            break;
+    }
+
+    if (uiData == DONE)
+    {
+        OUT_SAVE_INST_DATA;
+
+        std::ostringstream saveStream;
+        saveStream << m_auiEncounter[0] << " " << m_auiEncounter[1] << " " << m_auiEncounter[2] << " " << m_auiEncounter[3] << " " << m_auiEncounter[4];
+
+        m_strInstData = saveStream.str();
+
+        SaveToDB();
+        OUT_SAVE_INST_DATA_COMPLETE;
+    }
+}
+
+void instance_blackrock_spire::SetData64(uint32 uiType, uint64 uiData)
+{
+    if (uiType == TYPE_ROOM_EVENT && GetData(TYPE_ROOM_EVENT) == IN_PROGRESS)
+    {
+        uint8 uiNotEmptyRoomsCount = 0;
+        for (uint8 i = 0; i < MAX_ROOMS; ++i)
+        {
+            if (m_aRoomRuneGuid[i])                       // This check is used, to ensure which runes still need processing
+            {
+                m_alRoomEventMobGUIDSorted[i].remove(ObjectGuid(uiData));
+                if (m_alRoomEventMobGUIDSorted[i].empty())
+                {
+                    DoUseDoorOrButton(m_aRoomRuneGuid[i]);
+                    m_aRoomRuneGuid[i].Clear();
+                }
+                else
+                    ++uiNotEmptyRoomsCount;                 // found an not empty room
+            }
+        }
+        if (!uiNotEmptyRoomsCount)
+            SetData(TYPE_ROOM_EVENT, DONE);
+    }
+}
+
+void instance_blackrock_spire::Load(const char* chrIn)
+{
+    if (!chrIn)
+    {
+        OUT_LOAD_INST_DATA_FAIL;
+        return;
+    }
+
+    OUT_LOAD_INST_DATA(chrIn);
+
+    std::istringstream loadStream(chrIn);
+    loadStream >> m_auiEncounter[0] >> m_auiEncounter[1] >> m_auiEncounter[2] >> m_auiEncounter[3] >> m_auiEncounter[4];
+
+    for(uint8 i = 0; i < MAX_ENCOUNTER; ++i)
+    {
+        if (m_auiEncounter[i] == IN_PROGRESS)
+            m_auiEncounter[i] = NOT_STARTED;
+    }
+
+    OUT_LOAD_INST_DATA_COMPLETE;
+}
+
+uint32 instance_blackrock_spire::GetData(uint32 uiType)
+{
+    switch(uiType)
+    {
+        case TYPE_ROOM_EVENT:   return m_auiEncounter[0];
+        case TYPE_EMBERSEER:    return m_auiEncounter[1];
+        case TYPE_FLAMEWREATH:  return m_auiEncounter[2];
+        case TYPE_STADIUM:      return m_auiEncounter[3];
+        case TYPE_VALTHALAK:    return m_auiEncounter[4];
+    }
+    return 0;
+}
+
+void instance_blackrock_spire::DoSortRoomEventMobs()
+{
+    if (GetData(TYPE_ROOM_EVENT) != NOT_STARTED)
+        return;
+
+    for (uint8 i = 0; i < MAX_ROOMS; ++i)
+    {
+        if (GameObject* pRune = instance->GetGameObject(m_aRoomRuneGuid[i]))
+        {
+            for (GuidList::const_iterator itr = m_lRoomEventMobGUIDList.begin(); itr != m_lRoomEventMobGUIDList.end(); ++itr)
+            {
+                Creature* pCreature = instance->GetCreature(*itr);
+                if (pCreature && pCreature->isAlive() && pCreature->GetDistance(pRune) < 10.0f)
+                    m_alRoomEventMobGUIDSorted[i].push_back(*itr);
+            }
+        }
+    }
+
+    SetData(TYPE_ROOM_EVENT, IN_PROGRESS);
+}
+
+void instance_blackrock_spire::OnCreatureDeath(Creature* pCreature)
+{
+    switch (pCreature->GetEntry())
+    {
+        case NPC_DRAKKISATH:
+            // Just open the doors, don't save anything because it's the last boss
+            DoUseDoorOrButton(GO_DRAKKISATH_DOOR_1);
+            DoUseDoorOrButton(GO_DRAKKISATH_DOOR_2);
+            break;
+        case NPC_CHROMATIC_WHELP:
+        case NPC_CHROMATIC_DRAGON:
+        case NPC_BLACKHAND_HANDLER:
+            // check if it's summoned - some npcs with the same entry are already spawned in the instance
+            if (!pCreature->IsTemporarySummon())
+                break;
+            --m_uiStadiumMobsAlive;
+            if (m_uiStadiumMobsAlive == 0)
+                DoSendNextStadiumWave();
+            break;
+        case NPC_GYTH:
+        case NPC_REND_BLACKHAND:
+            --m_uiStadiumMobsAlive;
+            if (m_uiStadiumMobsAlive == 0)
+                StartNextDialogueText(SAY_NEFARIUS_VICTORY);
+            break;
+    }
+}
+
+void instance_blackrock_spire::OnCreatureEvade(Creature* pCreature)
+{
+    switch (pCreature->GetEntry())
+    {
+        // Emberseer should evade if the incarcerators evade
+        case NPC_BLACKHAND_INCARCERATOR:
+            if (Creature* pEmberseer = GetSingleCreatureFromStorage(NPC_PYROGUARD_EMBERSEER))
+                pEmberseer->AI()->EnterEvadeMode();
+            break;
+        case NPC_CHROMATIC_WHELP:
+        case NPC_CHROMATIC_DRAGON:
+        case NPC_BLACKHAND_HANDLER:
+        case NPC_GYTH:
+        case NPC_REND_BLACKHAND:
+            // check if it's summoned - some npcs with the same entry are already spawned in the instance
+            if (!pCreature->IsTemporarySummon())
+                break;
+            SetData(TYPE_STADIUM, FAIL);
+            pCreature->ForcedDespawn();
+            break;
+    }
+}
+
+void instance_blackrock_spire::OnCreatureEnterCombat(Creature* pCreature)
+{
+    switch (pCreature->GetEntry())
+    {
+        // Once one of the Incarcerators gets Aggro, the door should close
+        case NPC_BLACKHAND_INCARCERATOR:
+            SetData(TYPE_EMBERSEER, IN_PROGRESS);
+            break;
+    }
+}
+
+void instance_blackrock_spire::DoProcessEmberseerEvent()
+{
+    if (GetData(TYPE_EMBERSEER) == DONE || GetData(TYPE_EMBERSEER) == IN_PROGRESS)
+        return;
+
+    if (m_lIncarceratorGUIDList.empty())
+    {
+        error_log("SD2: Npc %u couldn't be found. Please check your DB content!", NPC_BLACKHAND_INCARCERATOR);
+        return;
+    }
+
+    // start to grow
+    if (Creature* pEmberseer = GetSingleCreatureFromStorage(NPC_PYROGUARD_EMBERSEER))
+    {
+        // If already casting, return
+        if (pEmberseer->HasAura(SPELL_EMBERSEER_GROWING))
+            return;
+
+        DoScriptText(EMOTE_BEGIN, pEmberseer);
+        pEmberseer->CastSpell(pEmberseer, SPELL_EMBERSEER_GROWING, true);
+    }
+
+    // remove the incarcerators flags and stop casting
+    for (GuidList::const_iterator itr = m_lIncarceratorGUIDList.begin(); itr != m_lIncarceratorGUIDList.end(); ++itr)
+    {
+        if (Creature* pCreature = instance->GetCreature(*itr))
+        {
+            if (pCreature->isAlive())
+            {
+                pCreature->InterruptNonMeleeSpells(false);
+                pCreature->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_PASSIVE);
+            }
+        }
+    }
+}
+
+void instance_blackrock_spire::DoUseEmberseerRunes(bool bReset)
+{
+    if (m_lEmberseerRunesGUIDList.empty())
+        return;
+
+    for (GuidList::const_iterator itr = m_lEmberseerRunesGUIDList.begin(); itr != m_lEmberseerRunesGUIDList.end(); itr++)
+    {
+        if (bReset)
+        {
+            if (GameObject* pRune = instance->GetGameObject(*itr))
+                pRune->ResetDoorOrButton();
+        }
+        else
+            DoUseDoorOrButton(*itr);
+    }
+}
+
+void instance_blackrock_spire::JustDidDialogueStep(int32 iEntry)
+{
+    switch (iEntry)
+    {
+        case NPC_BLACKHAND_HANDLER:
+            m_uiStadiumEventTimer = 1000;
+            // Move the two near the balcony
+            if (Creature* pRend = GetSingleCreatureFromStorage(NPC_REND_BLACKHAND))
+                pRend->SetFacingTo(aStadiumLocs[5].m_fO);
+            if (Creature* pNefarius = GetSingleCreatureFromStorage(NPC_LORD_VICTOR_NEFARIUS))
+                pNefarius->GetMotionMaster()->MovePoint(0, aStadiumLocs[5].m_fX, aStadiumLocs[5].m_fY, aStadiumLocs[5].m_fZ);
+            break;
+        case SAY_NEFARIUS_WARCHIEF:
+            // Prepare for Gyth - note: Nefarius should be moving around the balcony
+            if (Creature* pRend = GetSingleCreatureFromStorage(NPC_REND_BLACKHAND))
+            {
+                pRend->ForcedDespawn(5000);
+                pRend->SetWalk(false);
+                pRend->GetMotionMaster()->MovePoint(0, aStadiumLocs[6].m_fX, aStadiumLocs[6].m_fY, aStadiumLocs[6].m_fZ);
+            }
+            m_uiStadiumEventTimer = 30000;
+            break;
+        case SAY_NEFARIUS_VICTORY:
+            SetData(TYPE_STADIUM, DONE);
+            break;
+        case NPC_REND_BLACKHAND:
+            // Despawn Nefarius
+            if (Creature* pNefarius = GetSingleCreatureFromStorage(NPC_LORD_VICTOR_NEFARIUS))
+            {
+                pNefarius->ForcedDespawn(5000);
+                pNefarius->GetMotionMaster()->MovePoint(0, aStadiumLocs[6].m_fX, aStadiumLocs[6].m_fY, aStadiumLocs[6].m_fZ);
+            }
+            break;
+
+    }
+}
+
+void instance_blackrock_spire::DoSendNextStadiumWave()
+{
+    if (m_uiStadiumWaves < MAX_STADIUM_WAVES)
+    {
+         // Send current wave mobs
+        if (Creature* pNefarius = GetSingleCreatureFromStorage(NPC_LORD_VICTOR_NEFARIUS))
+        {
+            float fX, fY, fZ;
+            for (uint8 i = 0; i < MAX_STADIUM_MOBS_PER_WAVE; ++i)
+            {
+                if (aStadiumEventNpcs[m_uiStadiumWaves][i] == 0)
+                    continue;
+
+                pNefarius->GetRandomPoint(aStadiumLocs[0].m_fX, aStadiumLocs[0].m_fY, aStadiumLocs[0].m_fZ, 7.0f, fX, fY, fZ);
+                fX = std::min(aStadiumLocs[0].m_fX, fX);            // Halfcircle - suits better the rectangular form
+                if (Creature* pTemp = pNefarius->SummonCreature(aStadiumEventNpcs[m_uiStadiumWaves][i], fX, fY, fZ, 0.0f, TEMPSUMMON_DEAD_DESPAWN, 0))
+                {
+                    // Get some point in the center of the stadium
+                    pTemp->GetRandomPoint(aStadiumLocs[2].m_fX, aStadiumLocs[2].m_fY, aStadiumLocs[2].m_fZ, 5.0f, fX, fY, fZ);
+                    fX = std::min(aStadiumLocs[2].m_fX, fX);        // Halfcircle - suits better the rectangular form
+
+                    pTemp->GetMotionMaster()->MovePoint(0, fX, fY, fZ);
+                    ++m_uiStadiumMobsAlive;
+                }
+            }
+        }
+
+        DoUseDoorOrButton(GO_GYTH_COMBAT_DOOR);
+    }
+    // All waves are cleared - start Gyth intro
+    else if (m_uiStadiumWaves == MAX_STADIUM_WAVES)
+        StartNextDialogueText(SAY_NEFARIUS_LOSE_4);
+    else
+    {
+       // Send Gyth
+        if (Creature* pNefarius = GetSingleCreatureFromStorage(NPC_LORD_VICTOR_NEFARIUS))
+        {
+            if (Creature* pTemp = pNefarius->SummonCreature(NPC_GYTH, aStadiumLocs[1].m_fX, aStadiumLocs[1].m_fY, aStadiumLocs[1].m_fZ, 0.0f, TEMPSUMMON_DEAD_DESPAWN, 0))
+                pTemp->GetMotionMaster()->MovePoint(0, aStadiumLocs[2].m_fX, aStadiumLocs[2].m_fY, aStadiumLocs[2].m_fZ);
+        }
+
+        // Set this to 2, because Rend will be summoned later during the fight
+        m_uiStadiumMobsAlive = 2;
+
+        DoUseDoorOrButton(GO_GYTH_COMBAT_DOOR);
+    }
+
+    ++m_uiStadiumWaves;
+
+    // Stop the timer when all the waves have been sent
+    if (m_uiStadiumWaves >= MAX_STADIUM_WAVES)
+        m_uiStadiumEventTimer = 0;
+    else
+        m_uiStadiumEventTimer = 60000;
+}
+
+void instance_blackrock_spire::Update(uint32 uiDiff)
+{
+    DialogueUpdate(uiDiff);
+
+    if (m_uiStadiumEventTimer)
+    {
+        if (m_uiStadiumEventTimer <= uiDiff)
+            DoSendNextStadiumWave();
+        else
+            m_uiStadiumEventTimer -= uiDiff;
+    }
+}
+
+InstanceData* GetInstanceData_instance_blackrock_spire(Map* pMap)
+{
+    return new instance_blackrock_spire(pMap);
+}
+
+bool AreaTrigger_at_blackrock_spire(Player* pPlayer, AreaTriggerEntry const* pAt)
+{
+    if (!pPlayer->isAlive() || pPlayer->isGameMaster())
+        return false;
+
+    switch (pAt->id)
+    {
+        case AREATRIGGER_ENTER_UBRS:
+            if (instance_blackrock_spire* pInstance = (instance_blackrock_spire*) pPlayer->GetInstanceData())
+                pInstance->DoSortRoomEventMobs();
+            break;
+        case AREATRIGGER_STADIUM:
+            if (instance_blackrock_spire* pInstance = (instance_blackrock_spire*) pPlayer->GetInstanceData())
+            {
+                if (pInstance->GetData(TYPE_STADIUM) == IN_PROGRESS || pInstance->GetData(TYPE_STADIUM) == DONE)
+                    return false;
+
+                // Summon Nefarius and Rend for the dialogue event
+                // Note: Nefarius and Rend need to be hostile and not attackable
+                if (Creature* pNefarius = pPlayer->SummonCreature(NPC_LORD_VICTOR_NEFARIUS, aStadiumLocs[3].m_fX, aStadiumLocs[3].m_fY, aStadiumLocs[3].m_fZ, aStadiumLocs[3].m_fO, TEMPSUMMON_CORPSE_DESPAWN, 0))
+                    pNefarius->setFaction(FACTION_BLACK_DRAGON);
+                if (Creature* pRend = pPlayer->SummonCreature(NPC_REND_BLACKHAND, aStadiumLocs[4].m_fX, aStadiumLocs[4].m_fY, aStadiumLocs[4].m_fZ, aStadiumLocs[4].m_fO, TEMPSUMMON_CORPSE_DESPAWN, 0))
+                    pRend->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_OOC_NOT_ATTACKABLE);
+
+                pInstance->SetData(TYPE_STADIUM, IN_PROGRESS);
+            }
+            break;
+    }
+    return false;
+}
+
+bool ProcessEventId_event_spell_altar_emberseer(uint32 uiEventId, Object* pSource, Object* pTarget, bool bIsStart)
+{
+    if (bIsStart && pSource->GetTypeId() == TYPEID_PLAYER)
+    {
+        if (instance_blackrock_spire* pInstance = (instance_blackrock_spire*)((Player*)pSource)->GetInstanceData())
+        {
+            pInstance->DoProcessEmberseerEvent();
+            return true;
+        }
+    }
+    return false;
+}
+
+void AddSC_instance_blackrock_spire()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "instance_blackrock_spire";
+    pNewScript->GetInstanceData = &GetInstanceData_instance_blackrock_spire;
+    pNewScript->RegisterSelf();
+
+    pNewScript = new Script;
+    pNewScript->Name = "at_blackrock_spire";
+    pNewScript->pAreaTrigger = &AreaTrigger_at_blackrock_spire;
+    pNewScript->RegisterSelf();
+
+    pNewScript = new Script;
+    pNewScript->Name = "event_spell_altar_emberseer";
+    pNewScript->pProcessEventId = &ProcessEventId_event_spell_altar_emberseer;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/blackwing_descent.h b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/blackwing_descent.h
new file mode 100644
index 0000000..56a35aa
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/blackwing_descent.h
@@ -0,0 +1,4 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software licensed under GPL version 2
+ * Please see the included DOCS/LICENSE.TXT for more information */
+ 
\ No newline at end of file
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/boss_atramedes.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/boss_atramedes.cpp
new file mode 100644
index 0000000..7b120d7
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/boss_atramedes.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_atramedes
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Blackwing Descent
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_adramedes()
+{
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/boss_chimaeron.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/boss_chimaeron.cpp
new file mode 100644
index 0000000..0f24d2c
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/boss_chimaeron.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_chimaeron
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Blackwing Descent
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_chimaeron()
+{
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/boss_magmaw.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/boss_magmaw.cpp
new file mode 100644
index 0000000..a98dac2
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/boss_magmaw.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_magmaw
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Blackwing Descent
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_magmaw()
+{
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/boss_maloriak.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/boss_maloriak.cpp
new file mode 100644
index 0000000..dad738e
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/boss_maloriak.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_maloriak
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Blackwing Descent
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_maloriak()
+{
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/boss_nefarian_descent.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/boss_nefarian_descent.cpp
new file mode 100644
index 0000000..43f4567
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/boss_nefarian_descent.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_nefarian_descent
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Blackwing Descent
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_nefarian_descent()
+{
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/instance_blackwing_descent.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/instance_blackwing_descent.cpp
new file mode 100644
index 0000000..1489ce9
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/instance_blackwing_descent.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: instance_blackwing_descent
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Blackwing Descent
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_instance_blackwing_descent()
+{
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/omnotron_defense.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/omnotron_defense.cpp
new file mode 100644
index 0000000..cb86e66
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_descent/omnotron_defense.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: omnotron_defense
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Blackwing Descent
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_omnotron_defense()
+{
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/blackwing_lair.h b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/blackwing_lair.h
new file mode 100644
index 0000000..0730b2f
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/blackwing_lair.h
@@ -0,0 +1,80 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software licensed under GPL version 2
+ * Please see the included DOCS/LICENSE.TXT for more information */
+
+#ifndef DEF_BLACKWING_LAIR
+#define DEF_BLACKWING_LAIR
+
+enum
+{
+    MAX_ENCOUNTER               = 8,
+
+    TYPE_RAZORGORE              = 0,
+    TYPE_VAELASTRASZ            = 1,
+    TYPE_LASHLAYER              = 2,
+    TYPE_FIREMAW                = 3,
+    TYPE_EBONROC                = 4,
+    TYPE_FLAMEGOR               = 5,
+    TYPE_CHROMAGGUS             = 6,
+    TYPE_NEFARIAN               = 7,
+
+    NPC_RAZORGORE               = 12435,
+    NPC_VAELASTRASZ             = 13020,
+    NPC_LASHLAYER               = 12017,
+    NPC_FIREMAW                 = 11983,
+    NPC_EBONROC                 = 14601,
+    NPC_FLAMEGOR                = 11981,
+    NPC_CHROMAGGUS              = 14020,
+    NPC_NEFARIAN                = 11583,
+    NPC_LORD_VICTOR_NEFARIUS    = 10162,
+    NPC_BLACKWING_TECHNICIAN    = 13996,                    // Flees at Vael intro event
+    NPC_GRETHOK_CONTROLLER      = 12557,
+    NPC_BLACKWING_ORB_TRIGGER   = 14449,
+    NPC_MONSTER_GENERATOR       = 12434,
+
+    GO_DOOR_RAZORGORE_ENTER     = 176964,
+    GO_DOOR_RAZORGORE_EXIT      = 176965,
+    GO_DOOR_NEFARIAN            = 176966,
+    //GO_DOOR_CHROMAGGUS_ENTER  = 179115,
+    //GO_DOOR_CHROMAGGUS_SIDE   = 179116,
+    GO_DOOR_CHROMAGGUS_EXIT     = 179117,
+    GO_DOOR_VAELASTRASZ         = 179364,
+    GO_DOOR_LASHLAYER           = 179365,
+    GO_ORB_OF_DOMINATION        = 177808,                   // trigger 19832 on Razorgore
+    GO_BLACK_DRAGON_EGG         = 177807,
+    GO_DRAKONID_BONES           = 179804,
+};
+
+// Coords used to spawn Nefarius at the throne
+static const float aNefariusSpawnLoc[4] = {-7466.16f, -1040.80f, 412.053f, 2.14675f};
+
+class MANGOS_DLL_DECL instance_blackwing_lair : public ScriptedInstance
+{
+    public:
+        instance_blackwing_lair(Map* pMap);
+        ~instance_blackwing_lair() {}
+
+        void Initialize();
+        bool IsEncounterInProgress() const;
+
+        void OnCreatureCreate(Creature* pCreature);
+        void OnObjectCreate(GameObject* pGo);
+        void OnCreatureDeath(Creature* pCreature);
+
+        void SetData(uint32 uiType, uint32 uiData);
+        uint32 GetData(uint32 uiType);
+
+        const char* Save() { return m_strInstData.c_str(); }
+        void Load(const char* chrIn);
+
+    protected:
+        std::string m_strInstData;
+        uint32 m_auiEncounter[MAX_ENCOUNTER];
+
+        GuidList m_lTechnicianGuids;
+        GuidList m_lGeneratorGuids;
+        GuidList m_lDragonEggGuids;
+        GuidList m_lDrakonidBonesGuids;
+};
+
+#endif
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_broodlord_lashlayer.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_broodlord_lashlayer.cpp
new file mode 100644
index 0000000..29b7048
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_broodlord_lashlayer.cpp
@@ -0,0 +1,144 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Broodlord_Lashlayer
+SD%Complete: 100
+SDComment:
+SDCategory: Blackwing Lair
+EndScriptData */
+
+#include "precompiled.h"
+#include "blackwing_lair.h"
+
+enum
+{
+    SAY_AGGRO                   = -1469000,
+    SAY_LEASH                   = -1469001,
+
+    SPELL_CLEAVE                = 26350,
+    SPELL_BLAST_WAVE            = 23331,
+    SPELL_MORTAL_STRIKE         = 24573,
+    SPELL_KNOCK_AWAY            = 25778
+};
+
+struct MANGOS_DLL_DECL boss_broodlordAI : public ScriptedAI
+{
+    boss_broodlordAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    uint32 m_uiCleaveTimer;
+    uint32 m_uiBlastWaveTimer;
+    uint32 m_uiMortalStrikeTimer;
+    uint32 m_uiKnockAwayTimer;
+
+    void Reset()
+    {
+        m_uiCleaveTimer         = 8000;                     // These times are probably wrong
+        m_uiBlastWaveTimer      = 12000;
+        m_uiMortalStrikeTimer   = 20000;
+        m_uiKnockAwayTimer      = 30000;
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_LASHLAYER, IN_PROGRESS);
+
+        DoScriptText(SAY_AGGRO, m_creature);
+    }
+
+    void JustDied(Unit* pKiller)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_LASHLAYER, DONE);
+    }
+
+    void JustReachedHome()
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_LASHLAYER, FAIL);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Cleave Timer
+        if (m_uiCleaveTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_CLEAVE) == CAST_OK)
+                m_uiCleaveTimer = 7000;
+        }
+        else
+            m_uiCleaveTimer -= uiDiff;
+
+        // Blast Wave
+        if (m_uiBlastWaveTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_BLAST_WAVE) == CAST_OK)
+                m_uiBlastWaveTimer = urand(8000, 16000);
+        }
+        else
+            m_uiBlastWaveTimer -= uiDiff;
+
+        // Mortal Strike Timer
+        if (m_uiMortalStrikeTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_MORTAL_STRIKE) == CAST_OK)
+                m_uiMortalStrikeTimer = urand(25000, 35000);
+        }
+        else
+            m_uiMortalStrikeTimer -= uiDiff;
+
+        if (m_uiKnockAwayTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(), SPELL_KNOCK_AWAY);
+            // Drop 50% aggro - TODO should be scriptedEffect?
+            if (m_creature->getThreatManager().getThreat(m_creature->getVictim()))
+                m_creature->getThreatManager().modifyThreatPercent(m_creature->getVictim(), -50);
+
+            m_uiKnockAwayTimer = urand(15000, 30000);
+        }
+        else
+            m_uiKnockAwayTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+
+        if (EnterEvadeIfOutOfCombatArea(uiDiff))
+            DoScriptText(SAY_LEASH, m_creature);
+    }
+};
+CreatureAI* GetAI_boss_broodlord(Creature* pCreature)
+{
+    return new boss_broodlordAI(pCreature);
+}
+
+void AddSC_boss_broodlord()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_broodlord";
+    pNewScript->GetAI = &GetAI_boss_broodlord;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_chromaggus.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_chromaggus.cpp
new file mode 100644
index 0000000..81ff986
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_chromaggus.cpp
@@ -0,0 +1,258 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Chromaggus
+SD%Complete: 95
+SDComment: Chromatic Mutation disabled due to lack of core support
+SDCategory: Blackwing Lair
+EndScriptData */
+
+#include "precompiled.h"
+#include "blackwing_lair.h"
+
+enum
+{
+    EMOTE_GENERIC_FRENZY_KILL   = -1000001,
+    EMOTE_SHIMMER               = -1469003,
+
+    // These spells are actually called elemental shield
+    // What they do is decrease all damage by 75% then they increase
+    // One school of damage by 1100%
+    SPELL_FIRE_VULNERABILITY    = 22277,
+    SPELL_FROST_VULNERABILITY   = 22278,
+    SPELL_SHADOW_VULNERABILITY  = 22279,
+    SPELL_NATURE_VULNERABILITY  = 22280,
+    SPELL_ARCANE_VULNERABILITY  = 22281,
+
+    MAX_BREATHS                 = 5,
+    SPELL_INCINERATE            = 23308,                    // Incinerate 23308,23309
+    SPELL_TIME_LAPSE            = 23310,                    // Time lapse 23310, 23311(old threat mod that was removed in 2.01)
+    SPELL_CORROSIVE_ACID        = 23313,                    // Corrosive Acid 23313, 23314
+    SPELL_IGNITE_FLESH          = 23315,                    // Ignite Flesh 23315,23316
+    SPELL_FROST_BURN            = 23187,                    // Frost burn 23187, 23189
+
+    // Brood Affliction 23173 - Scripted Spell that cycles through all targets within 100 yards and has a chance to cast one of the afflictions on them
+    // Since Scripted spells arn't coded I'll just write a function that does the same thing
+    SPELL_BROODAF_BLUE          = 23153,                    // Blue affliction 23153
+    SPELL_BROODAF_BLACK         = 23154,                    // Black affliction 23154
+    SPELL_BROODAF_RED           = 23155,                    // Red affliction 23155 (23168 on death)
+    SPELL_BROODAF_BRONZE        = 23170,                    // Bronze Affliction  23170
+    SPELL_BROODAF_GREEN         = 23169,                    // Brood Affliction Green 23169
+
+    SPELL_CHROMATIC_MUT_1       = 23174,                    // Spell cast on player if they get all 5 debuffs
+
+    SPELL_FRENZY                = 28371,                    // The frenzy spell may be wrong
+    SPELL_ENRAGE                = 28747
+};
+
+static const uint32 aPossibleBreaths[MAX_BREATHS] = {SPELL_INCINERATE, SPELL_TIME_LAPSE, SPELL_CORROSIVE_ACID, SPELL_IGNITE_FLESH, SPELL_FROST_BURN};
+
+struct MANGOS_DLL_DECL boss_chromaggusAI : public ScriptedAI
+{
+    boss_chromaggusAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        // Select the 2 different breaths that we are going to use until despawned
+        // 5 possiblities for the first breath, 4 for the second, 20 total possiblites
+
+        // select two different numbers between 0..MAX_BREATHS-1
+        uint8 uiPos1 = urand(0, MAX_BREATHS - 1);
+        uint8 uiPos2 = (uiPos1 + urand(1, MAX_BREATHS - 1)) % MAX_BREATHS;
+
+        m_uiBreathOneSpell = aPossibleBreaths[uiPos1];
+        m_uiBreathTwoSpell = aPossibleBreaths[uiPos2];
+
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    uint32 m_uiBreathOneSpell;
+    uint32 m_uiBreathTwoSpell;
+    uint32 m_uiCurrentVulnerabilitySpell;
+
+    uint32 m_uiShimmerTimer;
+    uint32 m_uiBreathOneTimer;
+    uint32 m_uiBreathTwoTimer;
+    uint32 m_uiAfflictionTimer;
+    uint32 m_uiFrenzyTimer;
+    bool m_bEnraged;
+
+    void Reset()
+    {
+        m_uiCurrentVulnerabilitySpell = 0;                  // We use this to store our last vulnerability spell so we can remove it later
+
+        m_uiShimmerTimer    = 0;                            // Time till we change vurlnerabilites
+        m_uiBreathOneTimer  = 30000;                        // First breath is 30 seconds
+        m_uiBreathTwoTimer  = 60000;                        // Second is 1 minute so that we can alternate
+        m_uiAfflictionTimer = 10000;                        // This is special - 5 seconds means that we cast this on 1 pPlayer every 5 sconds
+        m_uiFrenzyTimer     = 15000;
+
+        m_bEnraged          = false;
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_CHROMAGGUS, IN_PROGRESS);
+    }
+
+    void JustDied(Unit* pKiller)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_CHROMAGGUS, DONE);
+    }
+
+    void JustReachedHome()
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_CHROMAGGUS, FAIL);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Shimmer Timer Timer
+        if (m_uiShimmerTimer < uiDiff)
+        {
+            // Remove old vulnerability spell
+            if (m_uiCurrentVulnerabilitySpell)
+                m_creature->RemoveAurasDueToSpell(m_uiCurrentVulnerabilitySpell);
+
+            // Cast new random vurlnabilty on self
+            uint32 aSpellId[] = {SPELL_FIRE_VULNERABILITY, SPELL_FROST_VULNERABILITY, SPELL_SHADOW_VULNERABILITY, SPELL_NATURE_VULNERABILITY, SPELL_ARCANE_VULNERABILITY};
+            uint32 uiSpell = aSpellId[urand(0, 4)];
+
+            if (DoCastSpellIfCan(m_creature, uiSpell) == CAST_OK)
+            {
+                m_uiCurrentVulnerabilitySpell = uiSpell;
+
+                DoScriptText(EMOTE_SHIMMER, m_creature);
+                m_uiShimmerTimer = 45000;
+            }
+        }
+        else
+            m_uiShimmerTimer -= uiDiff;
+
+        // Breath One Timer
+        if (m_uiBreathOneTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, m_uiBreathOneSpell) == CAST_OK)
+                m_uiBreathOneTimer = 60000;
+        }
+        else
+            m_uiBreathOneTimer -= uiDiff;
+
+        // Breath Two Timer
+        if (m_uiBreathTwoTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, m_uiBreathTwoSpell) == CAST_OK)
+                m_uiBreathTwoTimer = 60000;
+        }
+        else
+            m_uiBreathTwoTimer -= uiDiff;
+
+        // Affliction Timer
+        if (m_uiAfflictionTimer < uiDiff)
+        {
+            uint32 m_uiSpellAfflict = 0;
+
+            switch(urand(0, 4))
+            {
+                case 0: m_uiSpellAfflict = SPELL_BROODAF_BLUE; break;
+                case 1: m_uiSpellAfflict = SPELL_BROODAF_BLACK; break;
+                case 2: m_uiSpellAfflict = SPELL_BROODAF_RED; break;
+                case 3: m_uiSpellAfflict = SPELL_BROODAF_BRONZE; break;
+                case 4: m_uiSpellAfflict = SPELL_BROODAF_GREEN; break;
+            }
+
+            GuidVector vGuids;
+            m_creature->FillGuidsListFromThreatList(vGuids);
+            for (GuidVector::const_iterator i = vGuids.begin(); i != vGuids.end(); ++i)
+            {
+                Unit* pUnit = m_creature->GetMap()->GetUnit(*i);
+
+                if (pUnit)
+                {
+                    // Cast affliction
+                    DoCastSpellIfCan(pUnit, m_uiSpellAfflict, CAST_TRIGGERED);
+
+                    // Chromatic mutation if target is effected by all afflictions
+                    if (pUnit->HasAura(SPELL_BROODAF_BLUE, EFFECT_INDEX_0)
+                        && pUnit->HasAura(SPELL_BROODAF_BLACK, EFFECT_INDEX_0)
+                        && pUnit->HasAura(SPELL_BROODAF_RED, EFFECT_INDEX_0)
+                        && pUnit->HasAura(SPELL_BROODAF_BRONZE, EFFECT_INDEX_0)
+                        && pUnit->HasAura(SPELL_BROODAF_GREEN, EFFECT_INDEX_0))
+                    {
+                        //target->RemoveAllAuras();
+                        //DoCastSpellIfCan(target,SPELL_CHROMATIC_MUT_1);
+
+                        // Chromatic mutation is causing issues
+                        // Assuming it is caused by a lack of core support for Charm
+                        // So instead we instant kill our target
+
+                        // WORKAROUND
+                        if (pUnit->GetTypeId() == TYPEID_PLAYER)
+                            m_creature->CastSpell(pUnit, 5, false);
+                    }
+                }
+            }
+
+            m_uiAfflictionTimer = 10000;
+        }
+        else
+            m_uiAfflictionTimer -= uiDiff;
+
+        // Frenzy Timer
+        if (m_uiFrenzyTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_FRENZY) == CAST_OK)
+            {
+                DoScriptText(EMOTE_GENERIC_FRENZY_KILL, m_creature);
+                m_uiFrenzyTimer = urand(10000, 15000);
+            }
+        }
+        else
+            m_uiFrenzyTimer -= uiDiff;
+
+        // Enrage if not already enraged and below 20%
+        if (!m_bEnraged && m_creature->GetHealthPercent() < 20.0f)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_ENRAGE);
+            m_bEnraged = true;
+        }
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_chromaggus(Creature* pCreature)
+{
+    return new boss_chromaggusAI(pCreature);
+}
+
+void AddSC_boss_chromaggus()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_chromaggus";
+    pNewScript->GetAI = &GetAI_boss_chromaggus;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_ebonroc.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_ebonroc.cpp
new file mode 100644
index 0000000..b68dfc3
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_ebonroc.cpp
@@ -0,0 +1,123 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Ebonroc
+SD%Complete: 90
+SDComment: Thrash is missing
+SDCategory: Blackwing Lair
+EndScriptData */
+
+#include "precompiled.h"
+#include "blackwing_lair.h"
+
+enum
+{
+    SPELL_SHADOW_FLAME          = 22539,
+    SPELL_WING_BUFFET           = 18500,
+    SPELL_SHADOW_OF_EBONROC     = 23340,
+    SPELL_THRASH                = 3391,                     // TODO missing
+};
+
+struct MANGOS_DLL_DECL boss_ebonrocAI : public ScriptedAI
+{
+    boss_ebonrocAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    uint32 m_uiShadowFlameTimer;
+    uint32 m_uiWingBuffetTimer;
+    uint32 m_uiShadowOfEbonrocTimer;
+
+    void Reset()
+    {
+        m_uiShadowFlameTimer        = 15000;                // These times are probably wrong
+        m_uiWingBuffetTimer         = 30000;
+        m_uiShadowOfEbonrocTimer    = 45000;
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_EBONROC, IN_PROGRESS);
+    }
+
+    void JustDied(Unit* pKiller)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_EBONROC, DONE);
+    }
+
+    void JustReachedHome()
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_EBONROC, FAIL);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Shadow Flame Timer
+        if (m_uiShadowFlameTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_SHADOW_FLAME) == CAST_OK)
+                m_uiShadowFlameTimer = urand(12000, 15000);
+        }
+        else
+            m_uiShadowFlameTimer -= uiDiff;
+
+        // Wing Buffet Timer
+        if (m_uiWingBuffetTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_WING_BUFFET) == CAST_OK)
+                m_uiWingBuffetTimer = 25000;
+        }
+        else
+            m_uiWingBuffetTimer -= uiDiff;
+
+        // Shadow of Ebonroc Timer
+        if (m_uiShadowOfEbonrocTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_SHADOW_OF_EBONROC) == CAST_OK)
+                m_uiShadowOfEbonrocTimer = urand(25000, 35000);
+        }
+        else
+            m_uiShadowOfEbonrocTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_ebonroc(Creature* pCreature)
+{
+    return new boss_ebonrocAI(pCreature);
+}
+
+void AddSC_boss_ebonroc()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_ebonroc";
+    pNewScript->GetAI = &GetAI_boss_ebonroc;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_firemaw.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_firemaw.cpp
new file mode 100644
index 0000000..0550af3
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_firemaw.cpp
@@ -0,0 +1,127 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Firemaw
+SD%Complete: 80
+SDComment: Thrash missing
+SDCategory: Blackwing Lair
+EndScriptData */
+
+#include "precompiled.h"
+#include "blackwing_lair.h"
+
+enum
+{
+    SPELL_SHADOW_FLAME          = 22539,
+    SPELL_WING_BUFFET           = 23339,
+    SPELL_FLAME_BUFFET          = 23341,
+    SPELL_THRASH                = 3391,                     // TODO, missing
+};
+
+struct MANGOS_DLL_DECL boss_firemawAI : public ScriptedAI
+{
+    boss_firemawAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    uint32 m_uiShadowFlameTimer;
+    uint32 m_uiWingBuffetTimer;
+    uint32 m_uiFlameBuffetTimer;
+
+    void Reset()
+    {
+        m_uiShadowFlameTimer = 30000;                       // These times are probably wrong
+        m_uiWingBuffetTimer = 24000;
+        m_uiFlameBuffetTimer = 5000;
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_FIREMAW, IN_PROGRESS);
+    }
+
+    void JustDied(Unit* pKiller)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_FIREMAW, DONE);
+    }
+
+    void JustReachedHome()
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_FIREMAW, FAIL);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Shadow Flame Timer
+        if (m_uiShadowFlameTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_SHADOW_FLAME) == CAST_OK)
+                m_uiShadowFlameTimer = urand(15000, 18000);
+        }
+        else
+            m_uiShadowFlameTimer -= uiDiff;
+
+        // Wing Buffet Timer
+        if (m_uiWingBuffetTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_WING_BUFFET) == CAST_OK)
+            {
+                if (m_creature->getThreatManager().getThreat(m_creature->getVictim()))
+                    m_creature->getThreatManager().modifyThreatPercent(m_creature->getVictim(), -75);
+
+                m_uiWingBuffetTimer = 25000;
+            }
+        }
+        else
+            m_uiWingBuffetTimer -= uiDiff;
+
+        // Flame Buffet Timer
+        if (m_uiFlameBuffetTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_FLAME_BUFFET) == CAST_OK)
+                m_uiFlameBuffetTimer = 5000;
+        }
+        else
+            m_uiFlameBuffetTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+CreatureAI* GetAI_boss_firemaw(Creature* pCreature)
+{
+    return new boss_firemawAI(pCreature);
+}
+
+void AddSC_boss_firemaw()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_firemaw";
+    pNewScript->GetAI = &GetAI_boss_firemaw;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_flamegor.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_flamegor.cpp
new file mode 100644
index 0000000..efc1f5c
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_flamegor.cpp
@@ -0,0 +1,132 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Flamegor
+SD%Complete: 90
+SDComment: Thrash is missing
+SDCategory: Blackwing Lair
+EndScriptData */
+
+#include "precompiled.h"
+#include "blackwing_lair.h"
+
+enum
+{
+    EMOTE_GENERIC_FRENZY        = -1000002,
+
+    SPELL_SHADOW_FLAME          = 22539,
+    SPELL_WING_BUFFET           = 23339,
+    SPELL_FRENZY                = 23342,                    // This spell periodically triggers fire nova
+    SPELL_THRASH                = 3391,                     // TODO missing
+};
+
+struct MANGOS_DLL_DECL boss_flamegorAI : public ScriptedAI
+{
+    boss_flamegorAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    uint32 m_uiShadowFlameTimer;
+    uint32 m_uiWingBuffetTimer;
+    uint32 m_uiFrenzyTimer;
+
+    void Reset()
+    {
+        m_uiShadowFlameTimer = 21000;                       // These times are probably wrong
+        m_uiWingBuffetTimer = 35000;
+        m_uiFrenzyTimer = 10000;
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_FLAMEGOR, IN_PROGRESS);
+    }
+
+    void JustDied(Unit* pKiller)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_FLAMEGOR, DONE);
+    }
+
+    void JustReachedHome()
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_FLAMEGOR, FAIL);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Shadow Flame Timer
+        if (m_uiShadowFlameTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_SHADOW_FLAME) == CAST_OK)
+                m_uiShadowFlameTimer = urand(15000, 22000);
+        }
+        else
+            m_uiShadowFlameTimer -= uiDiff;
+
+        // Wing Buffet Timer
+        if (m_uiWingBuffetTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_WING_BUFFET) == CAST_OK)
+            {
+                if (m_creature->getThreatManager().getThreat(m_creature->getVictim()))
+                    m_creature->getThreatManager().modifyThreatPercent(m_creature->getVictim(), -75);
+
+                m_uiWingBuffetTimer = 25000;
+            }
+        }
+        else
+            m_uiWingBuffetTimer -= uiDiff;
+
+        // Frenzy Timer
+        if (m_uiFrenzyTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_FRENZY) == CAST_OK)
+            {
+                DoScriptText(EMOTE_GENERIC_FRENZY, m_creature);
+                m_uiFrenzyTimer = urand(8000, 10000);
+            }
+        }
+        else
+            m_uiFrenzyTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+CreatureAI* GetAI_boss_flamegor(Creature* pCreature)
+{
+    return new boss_flamegorAI(pCreature);
+}
+
+void AddSC_boss_flamegor()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_flamegor";
+    pNewScript->GetAI = &GetAI_boss_flamegor;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_nefarian.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_nefarian.cpp
new file mode 100644
index 0000000..2b00d67
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_nefarian.cpp
@@ -0,0 +1,281 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Nefarian
+SD%Complete: 80
+SDComment: Some issues with class calls effecting more than one class
+SDCategory: Blackwing Lair
+EndScriptData */
+
+#include "precompiled.h"
+#include "blackwing_lair.h"
+#include "TemporarySummon.h"
+
+enum
+{
+    SAY_XHEALTH                 = -1469008,             // at 5% hp
+    SAY_AGGRO                   = -1469009,
+    SAY_RAISE_SKELETONS         = -1469010,
+    SAY_SLAY                    = -1469011,
+    SAY_DEATH                   = -1469012,
+
+    SAY_MAGE                    = -1469013,
+    SAY_WARRIOR                 = -1469014,
+    SAY_DRUID                   = -1469015,
+    SAY_PRIEST                  = -1469016,
+    SAY_PALADIN                 = -1469017,
+    SAY_SHAMAN                  = -1469018,
+    SAY_WARLOCK                 = -1469019,
+    SAY_HUNTER                  = -1469020,
+    SAY_ROGUE                   = -1469021,
+    SAY_DEATH_KNIGHT            = -1469031,             // spell unk for the moment
+
+    SPELL_SHADOWFLAME_INITIAL   = 22992,                // old spell id 22972 -> wrong
+    SPELL_SHADOWFLAME           = 22539,
+    SPELL_BELLOWING_ROAR        = 22686,
+    SPELL_VEIL_OF_SHADOW        = 22687,                // old spell id 7068 -> wrong
+    SPELL_CLEAVE                = 20691,
+    SPELL_TAIL_LASH             = 23364,
+    //SPELL_BONE_CONTRUST       = 23363,                //23362, 23361   Missing from DBC!
+
+    SPELL_MAGE                  = 23410,                // wild magic
+    SPELL_WARRIOR               = 23397,                // beserk
+    SPELL_DRUID                 = 23398,                // cat form
+    SPELL_PRIEST                = 23401,                // corrupted healing
+    SPELL_PALADIN               = 23418,                // syphon blessing
+    SPELL_SHAMAN                = 23425,                // totems
+    SPELL_WARLOCK               = 23427,                // infernals    -> should trigger 23426
+    SPELL_HUNTER                = 23436,                // bow broke
+    SPELL_ROGUE                 = 23414,                // Paralise
+};
+
+struct MANGOS_DLL_DECL boss_nefarianAI : public ScriptedAI
+{
+    boss_nefarianAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    uint32 m_uiShadowFlameTimer;
+    uint32 m_uiBellowingRoarTimer;
+    uint32 m_uiVeilOfShadowTimer;
+    uint32 m_uiCleaveTimer;
+    uint32 m_uiTailLashTimer;
+    uint32 m_uiClassCallTimer;
+    bool m_bPhase3;
+    bool m_bHasEndYell;
+
+    void Reset()
+    {
+        m_uiShadowFlameTimer    = 12000;                            // These times are probably wrong
+        m_uiBellowingRoarTimer  = 30000;
+        m_uiVeilOfShadowTimer   = 15000;
+        m_uiCleaveTimer         = 7000;
+        m_uiTailLashTimer       = 10000;
+        m_uiClassCallTimer      = 35000;                            // 35-40 seconds
+        m_bPhase3               = false;
+        m_bHasEndYell           = false;
+    }
+
+    void KilledUnit(Unit* pVictim)
+    {
+        if (urand(0, 4))
+            return;
+
+        DoScriptText(SAY_SLAY, m_creature, pVictim);
+    }
+
+    void JustDied(Unit* pKiller)
+    {
+        DoScriptText(SAY_DEATH, m_creature);
+
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_NEFARIAN, DONE);
+    }
+
+    void JustReachedHome()
+    {
+        if (m_pInstance)
+        {
+            m_pInstance->SetData(TYPE_NEFARIAN, FAIL);
+
+            // Cleanup encounter
+            if (m_creature->IsTemporarySummon())
+            {
+                TemporarySummon* pTemporary = (TemporarySummon*)m_creature;
+
+                if (Creature* pNefarius = m_creature->GetMap()->GetCreature(pTemporary->GetSummonerGuid()))
+                    pNefarius->AI()->EnterEvadeMode();
+            }
+
+            m_creature->ForcedDespawn();
+        }
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        DoScriptText(SAY_AGGRO, m_creature);
+
+        // Remove flying in case Nefarian aggroes before his combat point was reached
+        if (m_creature->IsLevitating())
+        {
+            m_creature->SetByteValue(UNIT_FIELD_BYTES_1, 3, 0);
+            m_creature->SetLevitate(false);
+        }
+
+        DoCastSpellIfCan(m_creature, SPELL_SHADOWFLAME_INITIAL);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // ShadowFlame_Timer
+        if (m_uiShadowFlameTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_SHADOWFLAME) == CAST_OK)
+                m_uiShadowFlameTimer = 12000;
+        }
+        else
+            m_uiShadowFlameTimer -= uiDiff;
+
+        // BellowingRoar_Timer
+        if (m_uiBellowingRoarTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_BELLOWING_ROAR) == CAST_OK)
+                m_uiBellowingRoarTimer = 30000;
+        }
+        else
+            m_uiBellowingRoarTimer -= uiDiff;
+
+        // VeilOfShadow_Timer
+        if (m_uiVeilOfShadowTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_VEIL_OF_SHADOW) == CAST_OK)
+                m_uiVeilOfShadowTimer = 15000;
+        }
+        else
+            m_uiVeilOfShadowTimer -= uiDiff;
+
+        // Cleave_Timer
+        if (m_uiCleaveTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_CLEAVE) == CAST_OK)
+                m_uiCleaveTimer = 7000;
+        }
+        else
+            m_uiCleaveTimer -= uiDiff;
+
+        // TailLash_Timer
+        if (m_uiTailLashTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_TAIL_LASH) == CAST_OK)
+                m_uiTailLashTimer = 10000;
+        }
+        else
+            m_uiTailLashTimer -= uiDiff;
+
+        // ClassCall_Timer
+        if (m_uiClassCallTimer < uiDiff)
+        {
+            //Cast a random class call
+            //On official it is based on what classes are currently on the hostil list
+            //but we can't do that yet so just randomly call one
+
+            switch(urand(0, 8))
+            {
+                case 0:
+                    DoScriptText(SAY_MAGE, m_creature);
+                    DoCastSpellIfCan(m_creature, SPELL_MAGE);
+                    break;
+                case 1:
+                    DoScriptText(SAY_WARRIOR, m_creature);
+                    DoCastSpellIfCan(m_creature, SPELL_WARRIOR);
+                    break;
+                case 2:
+                    DoScriptText(SAY_DRUID, m_creature);
+                    DoCastSpellIfCan(m_creature, SPELL_DRUID);
+                    break;
+                case 3:
+                    DoScriptText(SAY_PRIEST, m_creature);
+                    DoCastSpellIfCan(m_creature, SPELL_PRIEST);
+                    break;
+                case 4:
+                    DoScriptText(SAY_PALADIN, m_creature);
+                    DoCastSpellIfCan(m_creature, SPELL_PALADIN);
+                    break;
+                case 5:
+                    DoScriptText(SAY_SHAMAN, m_creature);
+                    DoCastSpellIfCan(m_creature, SPELL_SHAMAN);
+                    break;
+                case 6:
+                    DoScriptText(SAY_WARLOCK, m_creature);
+                    DoCastSpellIfCan(m_creature, SPELL_WARLOCK);
+                    break;
+                case 7:
+                    DoScriptText(SAY_HUNTER, m_creature);
+                    DoCastSpellIfCan(m_creature, SPELL_HUNTER);
+                    break;
+                case 8:
+                    DoScriptText(SAY_ROGUE, m_creature);
+                    DoCastSpellIfCan(m_creature, SPELL_ROGUE);
+                    break;
+            }
+
+            m_uiClassCallTimer = urand(35000, 40000);
+        }
+        else
+            m_uiClassCallTimer -= uiDiff;
+
+        // Phase3 begins when we are below X health
+        if (!m_bPhase3 && m_creature->GetHealthPercent() < 20.0f)
+        {
+            if (m_pInstance)
+                m_pInstance->SetData(TYPE_NEFARIAN, SPECIAL);
+            m_bPhase3 = true;
+            DoScriptText(SAY_RAISE_SKELETONS, m_creature);
+        }
+
+        // 5% hp yell
+        if (!m_bHasEndYell && m_creature->GetHealthPercent() < 5.0f)
+        {
+            m_bHasEndYell = true;
+            DoScriptText(SAY_XHEALTH, m_creature);
+        }
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_nefarian(Creature* pCreature)
+{
+    return new boss_nefarianAI(pCreature);
+}
+
+void AddSC_boss_nefarian()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_nefarian";
+    pNewScript->GetAI = &GetAI_boss_nefarian;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_razorgore.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_razorgore.cpp
new file mode 100644
index 0000000..58862b2
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_razorgore.cpp
@@ -0,0 +1,178 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Razorgore
+SD%Complete: 50
+SDComment: Needs additional review. Phase 1 NYI (Grethok the Controller), Conflagration needs core support
+SDCategory: Blackwing Lair
+EndScriptData */
+
+#include "precompiled.h"
+#include "blackwing_lair.h"
+
+enum
+{
+    SAY_EGGS_BROKEN_1           = -1469022,
+    SAY_EGGS_BROKEN_2           = -1469023,
+    SAY_EGGS_BROKEN_3           = -1469024,
+    SAY_DEATH                   = -1469025,
+
+    EMOTE_TROOPS_FLEE           = -1469033,                 // emote by Nefarian's Troops npc
+
+    // phase I event spells
+    SPELL_POSSESS               = 23014,                    // visual effect and increase the damage taken
+    SPELL_EXPLODE_ORB           = 20037,                    // used if attacked without destroying the eggs - related to 20038
+
+    SPELL_CLEAVE                = 19632,
+    SPELL_WARSTOMP              = 24375,
+    SPELL_FIREBALL_VOLLEY       = 22425,
+    SPELL_CONFLAGRATION         = 23023,
+
+    // npcs used in phase I
+    NPC_BLACKWING_LEGIONNAIRE   = 12416,
+    NPC_BLACKWING_MAGE          = 12420,
+    NPC_DRAGONSPAWN             = 12422,
+};
+
+struct MANGOS_DLL_DECL boss_razorgoreAI : public ScriptedAI
+{
+    boss_razorgoreAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (instance_blackwing_lair*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    instance_blackwing_lair* m_pInstance;
+
+    uint32 m_uiIntroVisualTimer;
+    uint32 m_uiCleaveTimer;
+    uint32 m_uiWarStompTimer;
+    uint32 m_uiFireballVolleyTimer;
+    uint32 m_uiConflagrationTimer;
+
+    void Reset()
+    {
+        m_uiIntroVisualTimer    = 5000;
+
+        m_uiCleaveTimer         = 15000;                       // These times are probably wrong
+        m_uiWarStompTimer       = 35000;
+        m_uiConflagrationTimer  = 12000;
+        m_uiFireballVolleyTimer = 7000;
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        // TODO Temporarily add this InstData setting, must be started with Phase 1 which is not yet implemented
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_RAZORGORE, IN_PROGRESS);
+    }
+
+    void JustDied(Unit* pKiller)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_RAZORGORE, DONE);
+
+        DoScriptText(SAY_DEATH, m_creature);
+    }
+
+    void JustReachedHome()
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_RAZORGORE, FAIL);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        // Set visual on OOC timer
+        if (m_uiIntroVisualTimer)
+        {
+            if (m_uiIntroVisualTimer <= uiDiff)
+            {
+                if (Creature* pOrbTrigger = m_pInstance->GetSingleCreatureFromStorage(NPC_BLACKWING_ORB_TRIGGER))
+                    pOrbTrigger->CastSpell(m_creature, SPELL_POSSESS, false);
+                m_uiIntroVisualTimer = 0;
+            }
+            else
+                m_uiIntroVisualTimer -= uiDiff;
+        }
+
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Cleave
+        if (m_uiCleaveTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_CLEAVE) == CAST_OK)
+                m_uiCleaveTimer = urand(7000, 10000);
+        }
+        else
+            m_uiCleaveTimer -= uiDiff;
+
+        // War Stomp
+        if (m_uiWarStompTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_WARSTOMP) == CAST_OK)
+                m_uiWarStompTimer = urand(15000, 25000);
+        }
+        else
+            m_uiWarStompTimer -= uiDiff;
+
+        // Fireball Volley
+        if (m_uiFireballVolleyTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_FIREBALL_VOLLEY) == CAST_OK)
+                m_uiFireballVolleyTimer = urand(12000, 15000);
+        }
+        else
+            m_uiFireballVolleyTimer -= uiDiff;
+
+        // Conflagration
+        if (m_uiConflagrationTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_CONFLAGRATION) == CAST_OK)
+                m_uiConflagrationTimer = 12000;
+        }
+        else
+            m_uiConflagrationTimer -= uiDiff;
+
+        /* This is obsolete code, not working anymore, keep as reference, should be handled in core though
+        * // Aura Check. If the gamer is affected by confliguration we attack a random gamer.
+        * if (m_creature->getVictim()->HasAura(SPELL_CONFLAGRATION, EFFECT_INDEX_0))
+        * {
+        *     if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 1))
+        *         m_creature->TauntApply(pTarget);
+        * }
+        */
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_razorgore(Creature* pCreature)
+{
+    return new boss_razorgoreAI(pCreature);
+}
+
+void AddSC_boss_razorgore()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_razorgore";
+    pNewScript->GetAI = &GetAI_boss_razorgore;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_vaelastrasz.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_vaelastrasz.cpp
new file mode 100644
index 0000000..bb8581b
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_vaelastrasz.cpp
@@ -0,0 +1,390 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Vaelastrasz
+SD%Complete: 75
+SDComment: Burning Adrenaline not correctly implemented in core
+SDCategory: Blackwing Lair
+EndScriptData */
+
+#include "precompiled.h"
+#include "blackwing_lair.h"
+
+enum
+{
+    SAY_LINE_1                  = -1469026,
+    SAY_LINE_2                  = -1469027,
+    SAY_LINE_3                  = -1469028,
+    SAY_HALFLIFE                = -1469029,
+    SAY_KILLTARGET              = -1469030,
+    SAY_NEFARIUS_CORRUPT_1      = -1469006,                 // When he corrupts Vaelastrasz
+    SAY_NEFARIUS_CORRUPT_2      = -1469032,
+    SAY_TECHNICIAN_RUN          = -1469034,
+
+    SPELL_ESSENCE_OF_THE_RED    = 23513,
+    SPELL_FLAME_BREATH          = 23461,
+    SPELL_FIRE_NOVA             = 23462,
+    SPELL_TAIL_SWEEP            = 15847,
+    SPELL_BURNING_ADRENALINE    = 23620,
+    SPELL_CLEAVE                = 20684,                    // Chain cleave is most likely named something different and contains a dummy effect
+
+    SPELL_NEFARIUS_CORRUPTION   = 23642,
+
+    GOSSIP_ITEM_VAEL_1          = -3469003,
+    GOSSIP_ITEM_VAEL_2          = -3469004,
+    // Vael Gossip texts might be 7156 and 7256; At the moment are missing from DB
+    // For the moment add the default values
+    GOSSIP_TEXT_VAEL_1          = 384,
+    GOSSIP_TEXT_VAEL_2          = 384,
+
+    FACTION_HOSTILE             = 14,
+
+    AREATRIGGER_VAEL_INTRO      = 3626,
+};
+
+struct MANGOS_DLL_DECL boss_vaelastraszAI : public ScriptedAI
+{
+    boss_vaelastraszAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+
+        // Set stand state to dead before the intro event
+        m_creature->SetStandState(UNIT_STAND_STATE_DEAD);
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    ObjectGuid m_nefariusGuid;
+    uint32 m_uiIntroTimer;
+    uint8 m_uiIntroPhase;
+
+    ObjectGuid m_playerGuid;
+    uint32 m_uiSpeechTimer;
+    uint8 m_uiSpeechNum;
+
+    uint32 m_uiCleaveTimer;
+    uint32 m_uiFlameBreathTimer;
+    uint32 m_uiFireNovaTimer;
+    uint32 m_uiBurningAdrenalineCasterTimer;
+    uint32 m_uiBurningAdrenalineTankTimer;
+    uint32 m_uiTailSweepTimer;
+    bool m_bHasYelled;
+
+    void Reset()
+    {
+        m_playerGuid.Clear();
+
+        m_uiIntroTimer                   = 0;
+        m_uiIntroPhase                   = 0;
+        m_uiSpeechTimer                  = 0;
+        m_uiSpeechNum                    = 0;
+        m_uiCleaveTimer                  = 8000;            // These times are probably wrong
+        m_uiFlameBreathTimer             = 11000;
+        m_uiBurningAdrenalineCasterTimer = 15000;
+        m_uiBurningAdrenalineTankTimer   = 45000;
+        m_uiFireNovaTimer                = 5000;
+        m_uiTailSweepTimer               = 20000;
+        m_bHasYelled = false;
+
+        // Creature should have only 1/3 of hp
+        m_creature->SetHealth(uint32(m_creature->GetMaxHealth()*.3));
+    }
+
+    void BeginIntro()
+    {
+        // Start Intro delayed
+        m_uiIntroTimer = 1000;
+
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_VAELASTRASZ, SPECIAL);
+    }
+
+    void BeginSpeech(Player* pTarget)
+    {
+        // Stand up and begin speach
+        m_playerGuid = pTarget->GetObjectGuid();
+
+        // 10 seconds
+        DoScriptText(SAY_LINE_1, m_creature);
+
+        // Make boss stand
+        m_creature->SetStandState(UNIT_STAND_STATE_STAND);
+
+        m_uiSpeechTimer = 10000;
+        m_uiSpeechNum = 0;
+    }
+
+    void KilledUnit(Unit* pVictim)
+    {
+        if (urand(0, 4))
+            return;
+
+        DoScriptText(SAY_KILLTARGET, m_creature, pVictim);
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_VAELASTRASZ, IN_PROGRESS);
+
+        // Buff players on aggro
+        DoCastSpellIfCan(m_creature, SPELL_ESSENCE_OF_THE_RED);
+    }
+
+    void JustDied(Unit* pKiller)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_VAELASTRASZ, DONE);
+    }
+
+    void JustReachedHome()
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_VAELASTRASZ, FAIL);
+    }
+
+    void JustSummoned(Creature* pSummoned)
+    {
+        if (pSummoned->GetEntry() == NPC_LORD_VICTOR_NEFARIUS)
+        {
+            // Set not selectable, so players won't interact with it
+            pSummoned->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
+            m_nefariusGuid = pSummoned->GetObjectGuid();
+        }
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (m_uiIntroTimer)
+        {
+            if (m_uiIntroTimer <= uiDiff)
+            {
+                switch (m_uiIntroPhase)
+                {
+                    case 0:
+                        m_creature->SummonCreature(NPC_LORD_VICTOR_NEFARIUS, aNefariusSpawnLoc[0], aNefariusSpawnLoc[1], aNefariusSpawnLoc[2], aNefariusSpawnLoc[3], TEMPSUMMON_TIMED_DESPAWN, 25000);
+                        m_uiIntroTimer = 1000;
+                        break;
+                    case 1:
+                        if (Creature* pNefarius = m_creature->GetMap()->GetCreature(m_nefariusGuid))
+                        {
+                            pNefarius->CastSpell(m_creature, SPELL_NEFARIUS_CORRUPTION, true);
+                            DoScriptText(SAY_NEFARIUS_CORRUPT_1, pNefarius);
+                        }
+                        m_uiIntroTimer = 16000;
+                        break;
+                    case 2:
+                        if (Creature* pNefarius = m_creature->GetMap()->GetCreature(m_nefariusGuid))
+                            DoScriptText(SAY_NEFARIUS_CORRUPT_2, pNefarius);
+
+                        // Set npc flags now
+                        m_creature->SetFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_GOSSIP);
+                        m_creature->SetFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_QUESTGIVER);
+                        m_uiIntroTimer = 0;
+                        break;
+                }
+                ++m_uiIntroPhase;
+            }
+            else
+                m_uiIntroTimer -= uiDiff;
+        }
+
+        // Speech
+        if (m_uiSpeechTimer)
+        {
+            if (m_uiSpeechTimer <= uiDiff)
+            {
+                switch (m_uiSpeechNum)
+                {
+                    case 0:
+                        // 16 seconds till next line
+                        DoScriptText(SAY_LINE_2, m_creature);
+                        m_uiSpeechTimer = 16000;
+                        ++m_uiSpeechNum;
+                        break;
+                    case 1:
+                        // This one is actually 16 seconds but we only go to 10 seconds because he starts attacking after he says "I must fight this!"
+                        DoScriptText(SAY_LINE_3, m_creature);
+                        m_uiSpeechTimer = 10000;
+                        ++m_uiSpeechNum;
+                        break;
+                    case 2:
+                        m_creature->setFaction(FACTION_HOSTILE);
+
+                        if (m_playerGuid)
+                        {
+                            if (Player* pPlayer = m_creature->GetMap()->GetPlayer(m_playerGuid))
+                                AttackStart(pPlayer);
+                        }
+                        m_uiSpeechTimer = 0;
+                        break;
+                }
+            }
+            else
+                m_uiSpeechTimer -= uiDiff;
+        }
+
+        // Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Yell if hp lower than 15%
+        if (m_creature->GetHealthPercent() < 15.0f && !m_bHasYelled)
+        {
+            DoScriptText(SAY_HALFLIFE, m_creature);
+            m_bHasYelled = true;
+        }
+
+        // Cleave Timer
+        if (m_uiCleaveTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_CLEAVE) == CAST_OK)
+                m_uiCleaveTimer = 15000;
+        }
+        else
+            m_uiCleaveTimer -= uiDiff;
+
+        // Flame Breath Timer
+        if (m_uiFlameBreathTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_FLAME_BREATH) == CAST_OK)
+                m_uiFlameBreathTimer = urand(4000, 8000);
+        }
+        else
+            m_uiFlameBreathTimer -= uiDiff;
+
+        // Burning Adrenaline Caster Timer
+        if (m_uiBurningAdrenalineCasterTimer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0, SPELL_BURNING_ADRENALINE, SELECT_FLAG_PLAYER | SELECT_FLAG_POWER_MANA))
+            {
+                pTarget->CastSpell(pTarget, SPELL_BURNING_ADRENALINE, true, NULL, NULL, m_creature->GetObjectGuid());
+                m_uiBurningAdrenalineCasterTimer = 15000;
+            }
+        }
+        else
+            m_uiBurningAdrenalineCasterTimer -= uiDiff;
+
+        // Burning Adrenaline Tank Timer
+        if (m_uiBurningAdrenalineTankTimer < uiDiff)
+        {
+            // have the victim cast the spell on himself otherwise the third effect aura will be applied
+            // to Vael instead of the player
+            m_creature->getVictim()->CastSpell(m_creature->getVictim(), SPELL_BURNING_ADRENALINE, true, NULL, NULL, m_creature->GetObjectGuid());
+
+            m_uiBurningAdrenalineTankTimer = 45000;
+        }
+        else
+            m_uiBurningAdrenalineTankTimer -= uiDiff;
+
+        // Fire Nova Timer
+        if (m_uiFireNovaTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_FIRE_NOVA) == CAST_OK)
+                m_uiFireNovaTimer = 5000;
+        }
+        else
+            m_uiFireNovaTimer -= uiDiff;
+
+        // Tail Sweep Timer
+        if (m_uiTailSweepTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_TAIL_SWEEP) == CAST_OK)
+                m_uiTailSweepTimer = 20000;
+        }
+        else
+            m_uiTailSweepTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+bool GossipSelect_boss_vaelastrasz(Player* pPlayer, Creature* pCreature, uint32 uiSender, uint32 uiAction)
+{
+    switch (uiAction)
+    {
+        case GOSSIP_ACTION_INFO_DEF + 1:
+            pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_VAEL_2, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 2);
+            pPlayer->SEND_GOSSIP_MENU(GOSSIP_TEXT_VAEL_2, pCreature->GetObjectGuid());
+            break;
+        case GOSSIP_ACTION_INFO_DEF + 2:
+            pPlayer->CLOSE_GOSSIP_MENU();
+            if (boss_vaelastraszAI* pVaelAI = dynamic_cast<boss_vaelastraszAI*>(pCreature->AI()))
+                pVaelAI->BeginSpeech(pPlayer);
+            break;
+    }
+
+    return true;
+}
+
+bool GossipHello_boss_vaelastrasz(Player* pPlayer, Creature* pCreature)
+{
+    if (pCreature->isQuestGiver())
+        pPlayer->PrepareQuestMenu(pCreature->GetObjectGuid());
+
+    pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_VAEL_1, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 1);
+    pPlayer->SEND_GOSSIP_MENU(GOSSIP_TEXT_VAEL_1, pCreature->GetObjectGuid());
+
+    return true;
+}
+
+CreatureAI* GetAI_boss_vaelastrasz(Creature* pCreature)
+{
+    return new boss_vaelastraszAI(pCreature);
+}
+
+bool AreaTrigger_at_vaelastrasz(Player* pPlayer, AreaTriggerEntry const* pAt)
+{
+    if (pAt->id == AREATRIGGER_VAEL_INTRO)
+    {
+        if (pPlayer->isGameMaster() || pPlayer->isDead())
+            return false;
+
+        if (instance_blackwing_lair* pInstance = (instance_blackwing_lair*)pPlayer->GetInstanceData())
+        {
+            // Handle intro event
+            if (pInstance->GetData(TYPE_VAELASTRASZ) == NOT_STARTED)
+            {
+                if (Creature* pVaelastrasz = pInstance->GetSingleCreatureFromStorage(NPC_VAELASTRASZ))
+                    if (boss_vaelastraszAI* pVaelAI = dynamic_cast<boss_vaelastraszAI*>(pVaelastrasz->AI()))
+                        pVaelAI->BeginIntro();
+            }
+
+            // ToDo: make goblins flee
+        }
+    }
+
+    return false;
+}
+
+void AddSC_boss_vaelastrasz()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_vaelastrasz";
+    pNewScript->GetAI = &GetAI_boss_vaelastrasz;
+    pNewScript->pGossipHello = &GossipHello_boss_vaelastrasz;
+    pNewScript->pGossipSelect = &GossipSelect_boss_vaelastrasz;
+    pNewScript->RegisterSelf();
+
+    pNewScript = new Script;
+    pNewScript->Name = "at_vaelastrasz";
+    pNewScript->pAreaTrigger = &AreaTrigger_at_vaelastrasz;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_victor_nefarius.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_victor_nefarius.cpp
new file mode 100644
index 0000000..f914803
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/boss_victor_nefarius.cpp
@@ -0,0 +1,418 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Victor_Nefarius
+SD%Complete: 90
+SDComment: Small adjustments needed; Timers
+SDCategory: Blackwing Lair
+EndScriptData */
+
+#include "precompiled.h"
+#include "blackwing_lair.h"
+
+enum
+{
+    SAY_GAMESBEGIN_1                = -1469004,
+    SAY_GAMESBEGIN_2                = -1469005,
+    SAY_NEFARIAN_INTRO              = -1469007,
+
+    GOSSIP_ITEM_NEFARIUS_1          = -3469000,
+    GOSSIP_ITEM_NEFARIUS_2          = -3469001,
+    GOSSIP_ITEM_NEFARIUS_3          = -3469002,
+    GOSSIP_TEXT_NEFARIUS_1          = 7134,
+    GOSSIP_TEXT_NEFARIUS_2          = 7198,
+    GOSSIP_TEXT_NEFARIUS_3          = 7199,
+
+    MAX_DRAKES                      = 5,
+    MAX_DRAKE_SUMMONS               = 42,
+    NPC_BRONZE_DRAKANOID            = 14263,
+    NPC_BLUE_DRAKANOID              = 14261,
+    NPC_RED_DRAKANOID               = 14264,
+    NPC_GREEN_DRAKANOID             = 14262,
+    NPC_BLACK_DRAKANOID             = 14265,
+    NPC_CHROMATIC_DRAKANOID         = 14302,
+
+    SPELL_NEFARIUS_BARRIER          = 22663,                // immunity in phase 1
+    SPELL_SHADOWBLINK_INTRO         = 22664,
+    SPELL_SHADOWBOLT_VOLLEY         = 22665,
+    SPELL_SILENCE                   = 22666,
+    SPELL_SHADOW_COMMAND            = 22667,
+    SPELL_SHADOWBOLT                = 22677,
+    SPELL_FEAR                      = 22678,
+    SPELL_SHADOWBLINK               = 22681,                // triggers a random from spells (22668 - 22676)
+
+    SPELL_SUMMON_DRAKONID_BONES     = 23363,
+
+    MAP_ID_BWL                      = 469,
+
+    FACTION_BLACK_DRAGON            = 103
+};
+
+static const DialogueEntry aIntroDialogue[] =
+{
+    {SAY_GAMESBEGIN_1,    NPC_LORD_VICTOR_NEFARIUS,     4000},
+    {SAY_GAMESBEGIN_2,    NPC_LORD_VICTOR_NEFARIUS,     5000},
+    {SPELL_SHADOWBLINK,   0,                            0},
+    {0, 0, 0},
+};
+
+struct SpawnLocation
+{
+    float m_fX, m_fY, m_fZ;
+};
+
+static const SpawnLocation aNefarianLocs[4] =
+{
+    {-7599.32f, -1191.72f, 475.545f},                       // opening where red/blue/black darknid spawner appear (ori 3.05433)
+    {-7526.27f, -1135.04f, 473.445f},                       // same as above, closest to door (ori 5.75959)
+    {-7498.177f, -1273.277f, 481.649f},                     // nefarian spawn location (ori 1.798)
+    {-7502.002f, -1256.503f, 476.758f},                     // nefarian fly to this position
+};
+
+static const uint32 aPossibleDrake[MAX_DRAKES] = {NPC_BRONZE_DRAKANOID, NPC_BLUE_DRAKANOID, NPC_RED_DRAKANOID, NPC_GREEN_DRAKANOID, NPC_BLACK_DRAKANOID};
+
+//This script is complicated
+//Instead of morphing Victor Nefarius we will have him control phase 1
+//And then have him spawn "Nefarian" for phase 2
+//When phase 2 starts Victor Nefarius will go invisible and stop attacking
+//If Nefarian reched home because nef killed the players then nef will trigger this guy to EnterEvadeMode
+//and allow players to start the event over
+//If nefarian dies then he will kill himself then he will be despawned in Nefarian script
+//To prevent players from doing the event twice
+
+// Dev note: Lord Victor Nefarius should despawn completely, then ~5 seconds later Nefarian should appear.
+
+struct MANGOS_DLL_DECL boss_victor_nefariusAI : public ScriptedAI, private DialogueHelper
+{
+    boss_victor_nefariusAI(Creature* pCreature) : ScriptedAI(pCreature),
+        DialogueHelper(aIntroDialogue)
+    {
+        // Select the 2 different drakes that we are going to use until despawned
+        // 5 possiblities for the first drake, 4 for the second, 20 total possiblites
+
+        // select two different numbers between 0..MAX_DRAKES-1
+        uint8 uiPos1 = urand(0, MAX_DRAKES - 1);
+        uint8 uiPos2 = (uiPos1 + urand(1, MAX_DRAKES - 1)) % MAX_DRAKES;
+
+        m_uiDrakeTypeOne = aPossibleDrake[uiPos1];
+        m_uiDrakeTypeTwo = aPossibleDrake[uiPos2];
+
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        InitializeDialogueHelper(m_pInstance);
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    uint32 m_uiSpawnedAdds;
+    uint32 m_uiAddSpawnTimer;
+    uint32 m_uiShadowBoltTimer;
+    uint32 m_uiFearTimer;
+    uint32 m_uiDrakeTypeOne;
+    uint32 m_uiDrakeTypeTwo;
+    uint32 m_uiShadowboltVolleyTimer;
+    uint32 m_uiSilenceTimer;
+    uint32 m_uiShadowCommandTimer;
+    uint32 m_uiShadowBlinkTimer;
+
+    void Reset()
+    {
+        // Check the map id because the same creature entry is involved in other scripted event in other instance
+        if (m_creature->GetMapId() != MAP_ID_BWL)
+            return;
+
+        m_uiSpawnedAdds             = 0;
+        m_uiAddSpawnTimer           = 10000;
+        m_uiShadowBoltTimer         = 3000;
+        m_uiFearTimer               = 8000;
+        m_uiShadowboltVolleyTimer   = 13000;
+        m_uiSilenceTimer            = 23000;
+        m_uiShadowCommandTimer      = 30000;
+        m_uiShadowBlinkTimer        = 40000;
+
+        // set gossip flag to begin the event
+        m_creature->SetFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_GOSSIP);
+
+        // Make visible if needed
+        if (m_creature->GetVisibility() != VISIBILITY_ON)
+            m_creature->SetVisibility(VISIBILITY_ON);
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_NEFARIAN, IN_PROGRESS);
+    }
+
+    void JustReachedHome()
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_NEFARIAN, FAIL);
+    }
+
+    void AttackStart(Unit* pWho)
+    {
+        if (m_creature->Attack(pWho, false))
+        {
+            m_creature->AddThreat(pWho);
+            m_creature->SetInCombatWith(pWho);
+            pWho->SetInCombatWith(m_creature);
+
+            // Only range attack - ToDo: research the distance
+            m_creature->GetMotionMaster()->MoveChase(pWho, 30.0f);
+        }
+    }
+
+    void JustSummoned(Creature* pSummoned)
+    {
+        if (m_creature->GetMapId() != MAP_ID_BWL)
+            return;
+
+        if (pSummoned->GetEntry() == NPC_NEFARIAN)
+        {
+            pSummoned->SetWalk(false);
+
+            // see boss_onyxia (also note the removal of this in boss_nefarian)
+            pSummoned->SetByteValue(UNIT_FIELD_BYTES_1, 3, UNIT_BYTE1_FLAG_ALWAYS_STAND | UNIT_BYTE1_FLAG_UNK_2);
+            pSummoned->SetLevitate(true);
+
+            // Let Nefarian fly towards combat area
+            pSummoned->GetMotionMaster()->MovePoint(1, aNefarianLocs[3].m_fX, aNefarianLocs[3].m_fY, aNefarianLocs[3].m_fZ);
+            DoScriptText(SAY_NEFARIAN_INTRO, pSummoned);
+        }
+        else
+        {
+            ++m_uiSpawnedAdds;
+
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+                pSummoned->AI()->AttackStart(pTarget);
+        }
+    }
+
+    void SummonedMovementInform(Creature* pSummoned, uint32 uiMotionType, uint32 uiPointId)
+    {
+        if (m_creature->GetMapId() != MAP_ID_BWL)
+            return;
+
+        // If Nefarian has reached combat area, let him attack
+        if (pSummoned->GetEntry() == NPC_NEFARIAN && uiMotionType == POINT_MOTION_TYPE && uiPointId == 1)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+                pSummoned->AI()->AttackStart(pTarget);
+        }
+    }
+
+    void SummonedCreatureJustDied(Creature* pSummoned)
+    {
+        if (m_creature->GetMapId() != MAP_ID_BWL)
+            return;
+
+        // Despawn self when Nefarian is killed
+        if (pSummoned->GetEntry() == NPC_NEFARIAN)
+            m_creature->ForcedDespawn();
+        else
+            pSummoned->CastSpell(pSummoned, SPELL_SUMMON_DRAKONID_BONES, true);
+    }
+
+    void JustDidDialogueStep(int32 iEntry)
+    {
+        // Start combat after the dialogue is finished
+        if (iEntry == SPELL_SHADOWBLINK)
+        {
+            m_creature->SetStandState(UNIT_STAND_STATE_STAND);
+            m_creature->SetFactionTemporary(FACTION_BLACK_DRAGON, TEMPFACTION_RESTORE_REACH_HOME);
+            DoCastSpellIfCan(m_creature, SPELL_NEFARIUS_BARRIER, CAST_TRIGGERED);
+            DoCastSpellIfCan(m_creature, SPELL_SHADOWBLINK_INTRO, CAST_TRIGGERED);
+            m_creature->SetInCombatWithZone();
+        }
+    }
+
+    void DoStartIntro()
+    {
+        StartNextDialogueText(SAY_GAMESBEGIN_1);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (m_creature->GetMapId() != MAP_ID_BWL)
+            return;
+
+        DialogueUpdate(uiDiff);
+
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Only do this if we haven't spawned nef yet
+        if (m_uiSpawnedAdds < MAX_DRAKE_SUMMONS)
+        {
+            // Shadowbolt Timer
+            if (m_uiShadowBoltTimer < uiDiff)
+            {
+                if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+                {
+                    if (DoCastSpellIfCan(pTarget, SPELL_SHADOWBOLT) == CAST_OK)
+                        m_uiShadowBoltTimer = urand(2000, 4000);
+                }
+            }
+            else
+                m_uiShadowBoltTimer -= uiDiff;
+
+            // Fear Timer
+            if (m_uiFearTimer < uiDiff)
+            {
+                if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 1))
+                {
+                    if (DoCastSpellIfCan(pTarget, SPELL_FEAR) == CAST_OK)
+                        m_uiFearTimer = urand(10000, 20000);
+                }
+            }
+            else
+                m_uiFearTimer -= uiDiff;
+
+            // Shadowbolt Volley
+            if (m_uiShadowboltVolleyTimer < uiDiff)
+            {
+                if (DoCastSpellIfCan(m_creature, SPELL_SHADOWBOLT_VOLLEY) == CAST_OK)
+                    m_uiShadowboltVolleyTimer = urand(19000, 28000);
+            }
+            else
+                m_uiShadowboltVolleyTimer -= uiDiff;
+
+            // Silence
+            if (m_uiSilenceTimer < uiDiff)
+            {
+                if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+                {
+                    if (DoCastSpellIfCan(pTarget, SPELL_SILENCE) == CAST_OK)
+                        m_uiSilenceTimer = urand(14000, 23000);
+                }
+            }
+            else
+                m_uiSilenceTimer -= uiDiff;
+
+            // Shadow Command
+            if (m_uiShadowCommandTimer < uiDiff)
+            {
+                if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 1))
+                {
+                    if (DoCastSpellIfCan(pTarget, SPELL_SHADOW_COMMAND) == CAST_OK)
+                        m_uiShadowCommandTimer = urand(24000, 30000);
+                }
+            }
+            else
+                m_uiShadowCommandTimer -= uiDiff;
+
+            // ShadowBlink
+            if (m_uiShadowBlinkTimer < uiDiff)
+            {
+                if (DoCastSpellIfCan(m_creature, SPELL_SHADOWBLINK) == CAST_OK)
+                    m_uiShadowBlinkTimer = urand(30000, 40000);
+            }
+            else
+                m_uiShadowBlinkTimer -= uiDiff;
+
+            // Add spawning mechanism
+            if (m_uiAddSpawnTimer < uiDiff)
+            {
+                //Spawn 2 random types of creatures at the 2 locations
+                uint32 uiCreatureId = 0;
+
+                // 1 in 3 chance it will be a chromatic
+                uiCreatureId = urand(0, 2) ? m_uiDrakeTypeOne : NPC_CHROMATIC_DRAKANOID;
+                m_creature->SummonCreature(uiCreatureId, aNefarianLocs[0].m_fX, aNefarianLocs[0].m_fY, aNefarianLocs[0].m_fZ, 5.000f, TEMPSUMMON_TIMED_OR_CORPSE_DESPAWN, 30000);
+
+                // 1 in 3 chance it will be a chromatic
+                uiCreatureId = urand(0, 2) ? m_uiDrakeTypeTwo : NPC_CHROMATIC_DRAKANOID;
+                m_creature->SummonCreature(uiCreatureId, aNefarianLocs[1].m_fX, aNefarianLocs[1].m_fY, aNefarianLocs[1].m_fZ, 5.000, TEMPSUMMON_TIMED_OR_CORPSE_DESPAWN, 30000);
+
+                //Begin phase 2 by spawning Nefarian
+                if (m_uiSpawnedAdds >= MAX_DRAKE_SUMMONS)
+                {
+                    //Inturrupt any spell casting
+                    m_creature->InterruptNonMeleeSpells(false);
+
+                    //Make super invis
+                    if (m_creature->GetVisibility() != VISIBILITY_OFF)
+                        m_creature->SetVisibility(VISIBILITY_OFF);
+
+                    // Spawn Nefarian
+                    // Summon as active, to be able to work proper!
+                    m_creature->SummonCreature(NPC_NEFARIAN, aNefarianLocs[2].m_fX, aNefarianLocs[2].m_fY, aNefarianLocs[2].m_fZ, 0, TEMPSUMMON_DEAD_DESPAWN, 0, true);
+                }
+
+                m_uiAddSpawnTimer = 4000;
+            }
+            else
+                m_uiAddSpawnTimer -= uiDiff;
+        }
+    }
+};
+
+CreatureAI* GetAI_boss_victor_nefarius(Creature* pCreature)
+{
+    return new boss_victor_nefariusAI(pCreature);
+}
+
+bool GossipHello_boss_victor_nefarius(Player* pPlayer, Creature* pCreature)
+{
+    if (pCreature->GetMapId() != MAP_ID_BWL)
+        return true;
+
+    pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_NEFARIUS_1 , GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+1);
+    pPlayer->SEND_GOSSIP_MENU(GOSSIP_TEXT_NEFARIUS_1, pCreature->GetObjectGuid());
+    return true;
+}
+
+bool GossipSelect_boss_victor_nefarius(Player* pPlayer, Creature* pCreature, uint32 uiSender, uint32 uiAction)
+{
+    if (pCreature->GetMapId() != MAP_ID_BWL)
+        return true;
+
+    switch(uiAction)
+    {
+        case GOSSIP_ACTION_INFO_DEF+1:
+            pCreature->HandleEmote(EMOTE_ONESHOT_TALK);
+            pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_NEFARIUS_2, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+2);
+            pPlayer->SEND_GOSSIP_MENU(GOSSIP_TEXT_NEFARIUS_2, pCreature->GetObjectGuid());
+            break;
+        case GOSSIP_ACTION_INFO_DEF+2:
+            pCreature->HandleEmote(EMOTE_ONESHOT_TALK);
+            pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_NEFARIUS_3, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+3);
+            pPlayer->SEND_GOSSIP_MENU(GOSSIP_TEXT_NEFARIUS_3, pCreature->GetObjectGuid());
+            break;
+        case GOSSIP_ACTION_INFO_DEF+3:
+            pCreature->RemoveFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_GOSSIP);
+            pPlayer->CLOSE_GOSSIP_MENU();
+            // Start the intro event
+            if (boss_victor_nefariusAI* pBossAI = dynamic_cast<boss_victor_nefariusAI*>(pCreature->AI()))
+                pBossAI->DoStartIntro();
+            break;
+    }
+    return true;
+}
+
+void AddSC_boss_victor_nefarius()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_victor_nefarius";
+    pNewScript->GetAI = &GetAI_boss_victor_nefarius;
+    pNewScript->pGossipHello = &GossipHello_boss_victor_nefarius;
+    pNewScript->pGossipSelect = &GossipSelect_boss_victor_nefarius;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/instance_blackwing_lair.cpp b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/instance_blackwing_lair.cpp
new file mode 100644
index 0000000..008e7d9
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/blackwing_lair/instance_blackwing_lair.cpp
@@ -0,0 +1,251 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Instance_Blackwing_Lair
+SD%Complete: 0
+SDComment:
+SDCategory: Blackwing Lair
+EndScriptData */
+
+#include "precompiled.h"
+#include "blackwing_lair.h"
+
+instance_blackwing_lair::instance_blackwing_lair(Map* pMap) : ScriptedInstance(pMap)
+{
+    Initialize();
+}
+
+void instance_blackwing_lair::Initialize()
+{
+    memset(&m_auiEncounter, 0, sizeof(m_auiEncounter));
+}
+
+bool instance_blackwing_lair::IsEncounterInProgress() const
+{
+    for (uint8 i = 0; i < MAX_ENCOUNTER; ++i)
+    {
+        if (m_auiEncounter[i] == IN_PROGRESS)
+            return true;
+    }
+    return false;
+}
+
+void instance_blackwing_lair::OnCreatureCreate(Creature* pCreature)
+{
+    switch (pCreature->GetEntry())
+    {
+        case NPC_BLACKWING_TECHNICIAN:
+            // Sort creatures so we can get only the ones near Vaelastrasz
+            if (pCreature->IsWithinDist2d(aNefariusSpawnLoc[0], aNefariusSpawnLoc[1], 50.0f))
+                m_lTechnicianGuids.push_back(pCreature->GetObjectGuid());
+            break;
+        case NPC_MONSTER_GENERATOR:
+            m_lGeneratorGuids.push_back(pCreature->GetObjectGuid());
+            break;
+        case NPC_BLACKWING_ORB_TRIGGER:
+        case NPC_VAELASTRASZ:
+        case NPC_LORD_VICTOR_NEFARIUS:
+            m_mNpcEntryGuidStore[pCreature->GetEntry()] = pCreature->GetObjectGuid();
+            break;
+    }
+}
+
+void instance_blackwing_lair::OnObjectCreate(GameObject* pGo)
+{
+    switch(pGo->GetEntry())
+    {
+        case GO_DOOR_RAZORGORE_ENTER:
+        case GO_ORB_OF_DOMINATION:
+        case GO_DOOR_NEFARIAN:
+            break;
+        case GO_DOOR_RAZORGORE_EXIT:
+            if (m_auiEncounter[TYPE_RAZORGORE] == DONE)
+                pGo->SetGoState(GO_STATE_ACTIVE);
+            break;
+        case GO_DOOR_CHROMAGGUS_EXIT:
+            if (m_auiEncounter[TYPE_CHROMAGGUS] == DONE)
+                pGo->SetGoState(GO_STATE_ACTIVE);
+            break;
+        case GO_DOOR_VAELASTRASZ:
+            if (m_auiEncounter[TYPE_VAELASTRASZ] == DONE)
+                pGo->SetGoState(GO_STATE_ACTIVE);
+            break;
+        case GO_DOOR_LASHLAYER:
+            if (m_auiEncounter[TYPE_LASHLAYER] == DONE)
+                pGo->SetGoState(GO_STATE_ACTIVE);
+            break;
+        case GO_BLACK_DRAGON_EGG:
+            m_lDragonEggGuids.push_back(pGo->GetObjectGuid());
+            return;
+        case GO_DRAKONID_BONES:
+            m_lDrakonidBonesGuids.push_back(pGo->GetObjectGuid());
+            return;
+
+        default:
+            return;
+    }
+    m_mGoEntryGuidStore[pGo->GetEntry()] = pGo->GetObjectGuid();
+}
+
+void instance_blackwing_lair::SetData(uint32 uiType, uint32 uiData)
+{
+    switch(uiType)
+    {
+        case TYPE_RAZORGORE:
+            m_auiEncounter[uiType] = uiData;
+            DoUseDoorOrButton(GO_DOOR_RAZORGORE_ENTER);
+            if (uiData == DONE)
+                DoUseDoorOrButton(GO_DOOR_RAZORGORE_EXIT);
+            else if (uiData == FAIL)
+            {
+                // Reset the Orb of Domination and the eggs
+                DoToggleGameObjectFlags(GO_ORB_OF_DOMINATION, GO_FLAG_NO_INTERACT, true);
+
+                // ToDo: reset the Dragon Eggs
+            }
+            break;
+        case TYPE_VAELASTRASZ:
+            m_auiEncounter[uiType] = uiData;
+            // Prevent the players from running back to the first room; use if the encounter is not special
+            if (uiData != SPECIAL)
+                DoUseDoorOrButton(GO_DOOR_RAZORGORE_EXIT);
+            if (uiData == DONE)
+                DoUseDoorOrButton(GO_DOOR_VAELASTRASZ);
+            break;
+        case TYPE_LASHLAYER:
+            m_auiEncounter[uiType] = uiData;
+            if (uiData == DONE)
+                DoUseDoorOrButton(GO_DOOR_LASHLAYER);
+            break;
+        case TYPE_FIREMAW:
+        case TYPE_EBONROC:
+        case TYPE_FLAMEGOR:
+            m_auiEncounter[uiType] = uiData;
+            break;
+        case TYPE_CHROMAGGUS:
+            m_auiEncounter[uiType] = uiData;
+            if (uiData == DONE)
+                DoUseDoorOrButton(GO_DOOR_CHROMAGGUS_EXIT);
+            break;
+        case TYPE_NEFARIAN:
+            // Don't store the same thing twice
+            if (m_auiEncounter[uiType] == uiData)
+                break;
+            if (uiData == SPECIAL)
+            {
+                //handle missing spell 23362
+                Creature* pNefarius = GetSingleCreatureFromStorage(NPC_LORD_VICTOR_NEFARIUS);
+                if (!pNefarius)
+                    break;
+
+                for (GuidList::const_iterator itr = m_lDrakonidBonesGuids.begin(); itr != m_lDrakonidBonesGuids.end(); ++itr)
+                {
+                    // The Go script will handle the missing spell 23361
+                    if (GameObject* pGo = instance->GetGameObject(*itr))
+                        pGo->Use(pNefarius);
+                }
+                // Don't store special data
+                break;
+            }
+            m_auiEncounter[uiType] = uiData;
+            DoUseDoorOrButton(GO_DOOR_NEFARIAN);
+            // Cleanup the drakonid bones
+            if (uiData == FAIL)
+            {
+                for (GuidList::const_iterator itr = m_lDrakonidBonesGuids.begin(); itr != m_lDrakonidBonesGuids.end(); ++itr)
+                {
+                    if (GameObject* pGo = instance->GetGameObject(*itr))
+                        pGo->SetLootState(GO_JUST_DEACTIVATED);
+                }
+
+                m_lDrakonidBonesGuids.clear();
+            }
+            break;
+    }
+
+    if (uiData == DONE)
+    {
+        OUT_SAVE_INST_DATA;
+
+        std::ostringstream saveStream;
+        saveStream << m_auiEncounter[0] << " " << m_auiEncounter[1] << " " << m_auiEncounter[2] << " "
+            << m_auiEncounter[3] << " " << m_auiEncounter[4] << " " << m_auiEncounter[5] << " "
+            << m_auiEncounter[6] << " " << m_auiEncounter[7];
+
+        m_strInstData = saveStream.str();
+
+        SaveToDB();
+        OUT_SAVE_INST_DATA_COMPLETE;
+    }
+}
+
+void instance_blackwing_lair::Load(const char* chrIn)
+{
+    if (!chrIn)
+    {
+        OUT_LOAD_INST_DATA_FAIL;
+        return;
+    }
+
+    OUT_LOAD_INST_DATA(chrIn);
+
+    std::istringstream loadStream(chrIn);
+    loadStream >> m_auiEncounter[0] >> m_auiEncounter[1] >> m_auiEncounter[2] >> m_auiEncounter[3]
+        >> m_auiEncounter[4] >> m_auiEncounter[5] >> m_auiEncounter[6] >> m_auiEncounter[7];
+
+    for(uint8 i = 0; i < MAX_ENCOUNTER; ++i)
+    {
+        if (m_auiEncounter[i] == IN_PROGRESS)
+            m_auiEncounter[i] = NOT_STARTED;
+    }
+
+    OUT_LOAD_INST_DATA_COMPLETE;
+}
+
+uint32 instance_blackwing_lair::GetData(uint32 uiType)
+{
+    if (uiType < MAX_ENCOUNTER)
+        return m_auiEncounter[uiType];
+
+    return 0;
+}
+
+void instance_blackwing_lair::OnCreatureDeath(Creature* pCreature)
+{
+    if (pCreature->GetEntry() == NPC_GRETHOK_CONTROLLER)
+    {
+        DoToggleGameObjectFlags(GO_ORB_OF_DOMINATION, GO_FLAG_NO_INTERACT, false);
+
+        if (Creature* pOrbTrigger = GetSingleCreatureFromStorage(NPC_BLACKWING_ORB_TRIGGER))
+            pOrbTrigger->InterruptNonMeleeSpells(false);
+    }
+}
+
+InstanceData* GetInstanceData_instance_blackwing_lair(Map* pMap)
+{
+    return new instance_blackwing_lair(pMap);
+}
+
+void AddSC_instance_blackwing_lair()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "instance_blackwing_lair";
+    pNewScript->GetInstanceData = &GetInstanceData_instance_blackwing_lair;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_baron_geddon.cpp b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_baron_geddon.cpp
new file mode 100644
index 0000000..5e476b1
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_baron_geddon.cpp
@@ -0,0 +1,144 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Baron_Geddon
+SD%Complete: 100
+SDComment: Armaggedon is not working properly (core issue)
+SDCategory: Molten Core
+EndScriptData */
+
+#include "precompiled.h"
+#include "molten_core.h"
+
+enum
+{
+    EMOTE_SERVICE               = -1409000,
+
+    SPELL_INFERNO               = 19695,
+    SPELL_IGNITE_MANA           = 19659,
+    SPELL_LIVING_BOMB           = 20475,
+    SPELL_ARMAGEDDON            = 20478
+};
+
+struct MANGOS_DLL_DECL boss_baron_geddonAI : public ScriptedAI
+{
+    boss_baron_geddonAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    bool m_bIsArmageddon;
+    uint32 m_uiInfernoTimer;
+    uint32 m_uiIgniteManaTimer;
+    uint32 m_uiLivingBombTimer;
+
+    void Reset()
+    {
+        m_bIsArmageddon = false;
+        m_uiInfernoTimer = 45000;
+        m_uiIgniteManaTimer = 30000;
+        m_uiLivingBombTimer = 35000;
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_GEDDON, IN_PROGRESS);
+    }
+
+    void JustDied(Unit* pKiller)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_GEDDON, DONE);
+    }
+
+    void JustReachedHome()
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_GEDDON, NOT_STARTED);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        if (m_bIsArmageddon)                                // Do nothing untill armageddon triggers
+            return;
+
+        // If we are <2% hp cast Armageddom
+        if (m_creature->GetHealthPercent() <= 2.0f && !m_bIsArmageddon)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_ARMAGEDDON, CAST_INTERRUPT_PREVIOUS) == CAST_OK)
+            {
+                DoScriptText(EMOTE_SERVICE, m_creature);
+                m_bIsArmageddon = true;
+                return;
+            }
+        }
+
+        // Inferno_Timer
+        if (m_uiInfernoTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_INFERNO) == CAST_OK)
+                m_uiInfernoTimer = 45000;
+        }
+        else
+            m_uiInfernoTimer -= uiDiff;
+
+        // Ignite Mana Timer
+        if (m_uiIgniteManaTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_IGNITE_MANA) == CAST_OK)
+                m_uiIgniteManaTimer = 30000;
+        }
+        else
+            m_uiIgniteManaTimer -= uiDiff;
+
+        // Living Bomb Timer
+        if (m_uiLivingBombTimer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+            {
+                if (DoCastSpellIfCan(pTarget, SPELL_LIVING_BOMB) == CAST_OK)
+                    m_uiLivingBombTimer = 35000;
+            }
+        }
+        else
+            m_uiLivingBombTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_baron_geddon(Creature* pCreature)
+{
+    return new boss_baron_geddonAI(pCreature);
+}
+
+void AddSC_boss_baron_geddon()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_baron_geddon";
+    pNewScript->GetAI = &GetAI_boss_baron_geddon;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_garr.cpp b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_garr.cpp
new file mode 100644
index 0000000..3a23c61
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_garr.cpp
@@ -0,0 +1,187 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Garr
+SD%Complete: 50
+SDComment: Garr's enrage is missing
+SDCategory: Molten Core
+EndScriptData */
+
+#include "precompiled.h"
+#include "molten_core.h"
+
+enum
+{
+    // Garr spells
+    SPELL_ANTIMAGICPULSE        = 19492,
+    SPELL_MAGMASHACKLES         = 19496,
+    SPELL_ENRAGE                = 19516,                    // TODO Stacking enrage (stacks to 10 times)
+
+    // Add spells
+    SPELL_ERUPTION              = 19497,
+    SPELL_MASSIVE_ERUPTION      = 20483,                    // TODO possible on death
+    SPELL_IMMOLATE              = 20294,
+    SPELL_SEPARATION_ANXIETY    = 23492,                    // Used if separated too far from Garr, 21095 use unknown.
+};
+
+struct MANGOS_DLL_DECL boss_garrAI : public ScriptedAI
+{
+    boss_garrAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    uint32 m_uiAntiMagicPulseTimer;
+    uint32 m_uiMagmaShacklesTimer;
+
+    void Reset()
+    {
+        m_uiAntiMagicPulseTimer = 25000;
+        m_uiMagmaShacklesTimer = 15000;
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_GARR, IN_PROGRESS);
+    }
+
+    void JustDied(Unit* pKiller)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_GARR, DONE);
+    }
+
+    void JustReachedHome()
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_GARR, FAIL);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // AntiMagicPulse_Timer
+        if (m_uiAntiMagicPulseTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_ANTIMAGICPULSE) == CAST_OK)
+                m_uiAntiMagicPulseTimer = urand(10000, 15000);
+        }
+        else
+            m_uiAntiMagicPulseTimer -= uiDiff;
+
+        // MagmaShackles_Timer
+        if (m_uiMagmaShacklesTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_MAGMASHACKLES) == CAST_OK)
+                m_uiMagmaShacklesTimer = urand(8000, 12000);
+        }
+        else
+            m_uiMagmaShacklesTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+struct MANGOS_DLL_DECL mob_fireswornAI : public ScriptedAI
+{
+    mob_fireswornAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    uint32 m_uiImmolateTimer;
+    uint32 m_uiSeparationCheckTimer;
+
+    void Reset()
+    {
+        m_uiImmolateTimer = urand(4000, 8000);              // These times are probably wrong
+        m_uiSeparationCheckTimer = 5000;
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Immolate_Timer
+        if (m_uiImmolateTimer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+            {
+                if (DoCastSpellIfCan(pTarget, SPELL_IMMOLATE) == CAST_OK)
+                    m_uiImmolateTimer = urand(5000, 10000);
+            }
+        }
+        else m_uiImmolateTimer -= uiDiff;
+
+        if (m_uiSeparationCheckTimer < uiDiff)
+        {
+            // Distance guesswork, but should be ok
+            Creature* pGarr = m_pInstance->GetSingleCreatureFromStorage(NPC_GARR);
+            if (pGarr && pGarr->isAlive() && !m_creature->IsWithinDist2d(pGarr->GetPositionX(), pGarr->GetPositionY(), 50.0f))
+                DoCastSpellIfCan(m_creature, SPELL_SEPARATION_ANXIETY, CAST_TRIGGERED);
+
+            m_uiSeparationCheckTimer = 5000;
+        }
+        else
+            m_uiSeparationCheckTimer -= uiDiff;
+
+        // Cast Erruption and let them die
+        if (m_creature->GetHealthPercent() <= 10.0f)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(), SPELL_ERUPTION);
+            m_creature->SetDeathState(JUST_DIED);
+            m_creature->RemoveCorpse();
+        }
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_garr(Creature* pCreature)
+{
+    return new boss_garrAI(pCreature);
+}
+
+CreatureAI* GetAI_mob_firesworn(Creature* pCreature)
+{
+    return new mob_fireswornAI(pCreature);
+}
+
+void AddSC_boss_garr()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_garr";
+    pNewScript->GetAI = &GetAI_boss_garr;
+    pNewScript->RegisterSelf();
+
+    pNewScript = new Script;
+    pNewScript->Name = "mob_firesworn";
+    pNewScript->GetAI = &GetAI_mob_firesworn;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_gehennas.cpp b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_gehennas.cpp
new file mode 100644
index 0000000..25aa81b
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_gehennas.cpp
@@ -0,0 +1,130 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Gehennas
+SD%Complete: 90
+SDComment:
+SDCategory: Molten Core
+EndScriptData */
+
+#include "precompiled.h"
+#include "molten_core.h"
+
+enum
+{
+    SPELL_SHADOW_BOLT           = 19728,                    // 19729 exists too, but can be reflected
+    SPELL_RAIN_OF_FIRE          = 19717,
+    SPELL_GEHENNAS_CURSE        = 19716
+};
+
+struct MANGOS_DLL_DECL boss_gehennasAI : public ScriptedAI
+{
+    boss_gehennasAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    uint32 m_uiShadowBoltTimer;
+    uint32 m_uiRainOfFireTimer;
+    uint32 m_uiGehennasCurseTimer;
+
+    void Reset()
+    {
+        m_uiShadowBoltTimer = 6000;
+        m_uiRainOfFireTimer = 10000;
+        m_uiGehennasCurseTimer = 12000;
+    }
+
+    void Aggro(Unit* pwho)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_GEHENNAS, IN_PROGRESS);
+    }
+
+    void JustDied(Unit* pKiller)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_GEHENNAS, DONE);
+    }
+
+    void JustReachedHome()
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_GEHENNAS, FAIL);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // ShadowBolt Timer
+        if (m_uiShadowBoltTimer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 1))
+            {
+                if (DoCastSpellIfCan(pTarget, SPELL_SHADOW_BOLT) == CAST_OK)
+                    m_uiShadowBoltTimer = 7000;
+            }
+            else                                            // In case someone attempts soloing, we don't need to scan for targets every tick
+                m_uiShadowBoltTimer = 7000;
+        }
+        else
+            m_uiShadowBoltTimer -= uiDiff;
+
+        // Rain of Fire Timer
+        if (m_uiRainOfFireTimer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+            {
+                if (DoCastSpellIfCan(pTarget, SPELL_RAIN_OF_FIRE) == CAST_OK)
+                    m_uiRainOfFireTimer = urand(4000, 12000);
+            }
+        }
+        else
+            m_uiRainOfFireTimer -= uiDiff;
+
+        // GehennasCurse Timer
+        if (m_uiGehennasCurseTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_GEHENNAS_CURSE) == CAST_OK)
+                m_uiGehennasCurseTimer = 30000;
+        }
+        else
+            m_uiGehennasCurseTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_gehennas(Creature* pCreature)
+{
+    return new boss_gehennasAI(pCreature);
+}
+
+void AddSC_boss_gehennas()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_gehennas";
+    pNewScript->GetAI = &GetAI_boss_gehennas;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_golemagg.cpp b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_golemagg.cpp
new file mode 100644
index 0000000..8338571
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_golemagg.cpp
@@ -0,0 +1,202 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Golemagg
+SD%Complete: 80
+SDComment: Rager need to be tied to boss (Despawn on boss-death)
+SDCategory: Molten Core
+EndScriptData */
+
+#include "precompiled.h"
+#include "molten_core.h"
+
+enum
+{
+    SPELL_MAGMA_SPLASH      = 13879,
+    SPELL_PYROBLAST         = 20228,
+    SPELL_EARTHQUAKE        = 19798,
+    SPELL_ENRAGE            = 19953,
+    SPELL_GOLEMAGG_TRUST    = 20553,
+
+    // Core Rager
+    EMOTE_LOW_HP            = -1409002,
+    SPELL_MANGLE            = 19820
+};
+
+struct MANGOS_DLL_DECL boss_golemaggAI : public ScriptedAI
+{
+    boss_golemaggAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    uint32 m_uiPyroblastTimer;
+    uint32 m_uiEarthquakeTimer;
+    uint32 m_uiBuffTimer;
+    bool m_bEnraged;
+
+    void Reset()
+    {
+        m_uiPyroblastTimer  = 7 * IN_MILLISECONDS;
+        m_uiEarthquakeTimer = 3 * IN_MILLISECONDS;
+        m_uiBuffTimer       = 1.5 * IN_MILLISECONDS;
+        m_bEnraged = false;
+
+        m_creature->CastSpell(m_creature, SPELL_MAGMA_SPLASH, true);
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_GOLEMAGG, IN_PROGRESS);
+    }
+
+    void JustDied(Unit* pKiller)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_GOLEMAGG, DONE);
+    }
+
+    void JustReachedHome()
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_GOLEMAGG, FAIL);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Pyroblast
+        if (m_uiPyroblastTimer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+            {
+                if (DoCastSpellIfCan(pTarget, SPELL_PYROBLAST) == CAST_OK)
+                    m_uiPyroblastTimer = 7*IN_MILLISECONDS;
+            }
+        }
+        else
+            m_uiPyroblastTimer -= uiDiff;
+
+        // Enrage
+        if (!m_bEnraged && m_creature->GetHealthPercent() < 10.0f)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_ENRAGE) == CAST_OK)
+                m_bEnraged = true;
+        }
+
+        // Earthquake
+        if (m_bEnraged)
+        {
+            if (m_uiEarthquakeTimer < uiDiff)
+            {
+                if (DoCastSpellIfCan(m_creature, SPELL_EARTHQUAKE) == CAST_OK)
+                    m_uiEarthquakeTimer = 3*IN_MILLISECONDS;
+            }
+            else
+                m_uiEarthquakeTimer -= uiDiff;
+        }
+
+        // Golemagg's Trust
+        if (m_uiBuffTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_GOLEMAGG_TRUST);
+            m_uiBuffTimer = 1.5*IN_MILLISECONDS;
+        }
+        else
+            m_uiBuffTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+struct MANGOS_DLL_DECL mob_core_ragerAI : public ScriptedAI
+{
+    mob_core_ragerAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+    uint32 m_uiMangleTimer;
+
+    void Reset()
+    {
+        m_uiMangleTimer = 7*IN_MILLISECONDS;                 // These times are probably wrong
+    }
+
+    void DamageTaken(Unit* pDoneBy, uint32& uiDamage)
+    {
+        if (m_creature->GetHealthPercent() < 50.0f)
+        {
+            if (m_pInstance && m_pInstance->GetData(TYPE_GOLEMAGG) != DONE)
+            {
+                DoScriptText(EMOTE_LOW_HP, m_creature);
+                m_creature->SetHealth(m_creature->GetMaxHealth());
+                uiDamage = 0;
+            }
+        }
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Mangle
+        if (m_uiMangleTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_MANGLE) == CAST_OK)
+                m_uiMangleTimer = 10*IN_MILLISECONDS;
+        }
+        else
+            m_uiMangleTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_golemagg(Creature* pCreature)
+{
+    return new boss_golemaggAI(pCreature);
+}
+
+CreatureAI* GetAI_mob_core_rager(Creature* pCreature)
+{
+    return new mob_core_ragerAI(pCreature);
+}
+
+void AddSC_boss_golemagg()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_golemagg";
+    pNewScript->GetAI = &GetAI_boss_golemagg;
+    pNewScript->RegisterSelf();
+
+    pNewScript = new Script;
+    pNewScript->Name = "mob_core_rager";
+    pNewScript->GetAI = &GetAI_mob_core_rager;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_lucifron.cpp b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_lucifron.cpp
new file mode 100644
index 0000000..2f9322b
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_lucifron.cpp
@@ -0,0 +1,125 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Lucifron
+SD%Complete: 100
+SDComment:
+SDCategory: Molten Core
+EndScriptData */
+
+#include "precompiled.h"
+#include "molten_core.h"
+
+enum
+{
+    SPELL_IMPENDINGDOOM     = 19702,
+    SPELL_LUCIFRONCURSE     = 19703,
+    SPELL_SHADOWSHOCK       = 19460
+};
+
+struct MANGOS_DLL_DECL boss_lucifronAI : public ScriptedAI
+{
+    boss_lucifronAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    uint32 m_uiImpendingDoomTimer;
+    uint32 m_uiLucifronCurseTimer;
+    uint32 m_uiShadowShockTimer;
+
+    void Reset()
+    {
+        m_uiImpendingDoomTimer = 10000;
+        m_uiLucifronCurseTimer = 20000;
+        m_uiShadowShockTimer   = 6000;
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_LUCIFRON, IN_PROGRESS);
+    }
+
+    void JustDied(Unit* pKiller)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_LUCIFRON, DONE);
+    }
+
+    void JustReachedHome()
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_LUCIFRON, FAIL);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Impending doom timer
+        if (m_uiImpendingDoomTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_IMPENDINGDOOM) == CAST_OK)
+                m_uiImpendingDoomTimer = 20000;
+        }
+        else
+            m_uiImpendingDoomTimer -= uiDiff;
+
+        // Lucifron's curse timer
+        if (m_uiLucifronCurseTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_LUCIFRONCURSE) == CAST_OK)
+                m_uiLucifronCurseTimer = 20000;
+        }
+        else
+            m_uiLucifronCurseTimer -= uiDiff;
+
+        // Shadowshock
+        if (m_uiShadowShockTimer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+            {
+                if (DoCastSpellIfCan(pTarget, SPELL_SHADOWSHOCK) == CAST_OK)
+                    m_uiShadowShockTimer = 6000;
+            }
+        }
+        else
+            m_uiShadowShockTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_lucifron(Creature* pCreature)
+{
+    return new boss_lucifronAI(pCreature);
+}
+
+void AddSC_boss_lucifron()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_lucifron";
+    pNewScript->GetAI = &GetAI_boss_lucifron;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_magmadar.cpp b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_magmadar.cpp
new file mode 100644
index 0000000..629bd39
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_magmadar.cpp
@@ -0,0 +1,134 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Magmadar
+SD%Complete: 75
+SDComment: Lavabomb needs still core support
+SDCategory: Molten Core
+EndScriptData */
+
+#include "precompiled.h"
+#include "molten_core.h"
+
+enum
+{
+    EMOTE_GENERIC_FRENZY_KILL   = -1000001,
+
+    SPELL_FRENZY                = 19451,
+    SPELL_MAGMASPIT             = 19449,                    // This is actually a buff he gives himself
+    SPELL_PANIC                 = 19408,
+    SPELL_LAVABOMB              = 19411,                    // This calls a dummy server side effect that isn't implemented yet
+    SPELL_LAVABOMB_ALT          = 19428
+};
+
+struct MANGOS_DLL_DECL boss_magmadarAI : public ScriptedAI
+{
+    boss_magmadarAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    uint32 m_uiFrenzyTimer;
+    uint32 m_uiPanicTimer;
+    uint32 m_uiLavabombTimer;
+
+    void Reset()
+    {
+        m_uiFrenzyTimer = 30000;
+        m_uiPanicTimer = 7000;
+        m_uiLavabombTimer = 12000;
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        DoCastSpellIfCan(m_creature, SPELL_MAGMASPIT, true);
+
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_MAGMADAR, IN_PROGRESS);
+    }
+
+    void JustDied(Unit* pKiller)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_MAGMADAR, DONE);
+    }
+
+    void JustReachedHome()
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_MAGMADAR, NOT_STARTED);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Frenzy_Timer
+        if (m_uiFrenzyTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_FRENZY) == CAST_OK)
+            {
+                DoScriptText(EMOTE_GENERIC_FRENZY_KILL, m_creature);
+                m_uiFrenzyTimer = 15000;
+            }
+        }
+        else
+            m_uiFrenzyTimer -= uiDiff;
+
+        // Panic_Timer
+        if (m_uiPanicTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_PANIC) == CAST_OK)
+                m_uiPanicTimer = 30000;
+        }
+        else
+            m_uiPanicTimer -= uiDiff;
+
+        // Lavabomb_Timer
+        if (m_uiLavabombTimer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+            {
+                if (DoCastSpellIfCan(pTarget, SPELL_LAVABOMB) == CAST_OK)
+                    m_uiLavabombTimer = 12000;
+            }
+        }
+        else
+            m_uiLavabombTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_magmadar(Creature* pCreature)
+{
+    return new boss_magmadarAI(pCreature);
+}
+
+void AddSC_boss_magmadar()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_magmadar";
+    pNewScript->GetAI = &GetAI_boss_magmadar;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_majordomo_executus.cpp b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_majordomo_executus.cpp
new file mode 100644
index 0000000..7c7f307
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_majordomo_executus.cpp
@@ -0,0 +1,478 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Majordomo_Executus
+SD%Complete: 95
+SDComment: Minor weaknesses
+SDCategory: Molten Core
+EndScriptData */
+
+#include "precompiled.h"
+#include "molten_core.h"
+#include "TemporarySummon.h"
+
+enum
+{
+    SAY_AGGRO               = -1409003,
+    SAY_SLAY                = -1409005,
+    SAY_SPECIAL             = -1409006,                     // Use unknown
+    SAY_LAST_ADD            = -1409019,                     // When only one add remaining
+    SAY_DEFEAT_1            = -1409007,
+    SAY_DEFEAT_2            = -1409020,
+    SAY_DEFEAT_3            = -1409021,
+
+    SAY_SUMMON_0            = -1409023,
+    SAY_SUMMON_1            = -1409024,
+    SAY_SUMMON_MAJ          = -1409008,
+    SAY_ARRIVAL1_RAG        = -1409009,
+    SAY_ARRIVAL2_MAJ        = -1409010,
+    SAY_ARRIVAL3_RAG        = -1409011,
+    SAY_ARRIVAL4_MAJ        = -1409022,
+
+    GOSSIP_ITEM_SUMMON_1    = -3409000,
+    GOSSIP_ITEM_SUMMON_2    = -3409001,
+    GOSSIP_ITEM_SUMMON_3    = -3409002,
+
+    TEXT_ID_SUMMON_1        = 4995,
+    TEXT_ID_SUMMON_2        = 5011,
+    TEXT_ID_SUMMON_3        = 5012,
+
+    SPELL_MAGIC_REFLECTION  = 20619,
+    SPELL_DAMAGE_REFLECTION = 21075,
+    SPELL_BLASTWAVE         = 20229,
+    SPELL_AEGIS             = 20620,
+    SPELL_TELEPORT          = 20618,
+
+    SPELL_TELEPORT_SELF     = 19484,
+    SPELL_SUMMON_RAGNAROS   = 19774,
+    SPELL_ELEMENTAL_FIRE    = 19773,
+    SPELL_RAGNA_EMERGE      = 20568,
+};
+
+struct MANGOS_DLL_DECL boss_majordomoAI : public ScriptedAI
+{
+    boss_majordomoAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (instance_molten_core*)pCreature->GetInstanceData();
+        m_bHasEncounterFinished = false;
+        Reset();
+    }
+
+    instance_molten_core* m_pInstance;
+
+    uint32 m_uiMagicReflectionTimer;
+    uint32 m_uiDamageReflectionTimer;
+    uint32 m_uiBlastwaveTimer;
+    uint32 m_uiTeleportTimer;
+    uint32 m_uiAegisTimer;
+    uint32 m_uiSpeechTimer;
+
+    ObjectGuid m_ragnarosGuid;
+    bool m_bHasEncounterFinished;
+    uint8 m_uiAddsKilled;
+    uint8 m_uiSpeech;
+    GuidList m_luiMajordomoAddsGUIDs;
+
+    void Reset()
+    {
+        m_uiMagicReflectionTimer  = 30000;                  // Damage reflection first so we alternate
+        m_uiDamageReflectionTimer = 15000;
+        m_uiBlastwaveTimer = 10000;
+        m_uiTeleportTimer = 20000;
+        m_uiAegisTimer = 5000;
+        m_uiSpeechTimer = 1000;
+
+        m_uiAddsKilled = 0;
+        m_uiSpeech = 0;
+    }
+
+    void KilledUnit(Unit* pVictim)
+    {
+        if (urand(0, 4))
+            return;
+
+        DoScriptText(SAY_SLAY, m_creature);
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        if (pWho->GetTypeId() == TYPEID_UNIT && pWho->GetEntry() == NPC_RAGNAROS)
+            return;
+
+        DoScriptText(SAY_AGGRO, m_creature);
+
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_MAJORDOMO, IN_PROGRESS);
+    }
+
+    void JustReachedHome()
+    {
+        if (!m_bHasEncounterFinished)                        // Normal reached home, FAIL
+        {
+            if (m_pInstance)
+                m_pInstance->SetData(TYPE_MAJORDOMO, FAIL);
+        }
+        else                                                 // Finished the encounter, DONE
+        {
+            // Exit combat
+            m_creature->RemoveAllAuras();
+            m_creature->DeleteThreatList();
+            m_creature->CombatStop(true);
+            m_creature->SetLootRecipient(NULL);
+
+            // Set friendly
+            m_creature->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_OOC_NOT_ATTACKABLE);
+            m_creature->setFaction(FACTION_MAJORDOMO_FRIENDLY);
+
+            // Reset orientation
+            m_creature->SetFacingTo(m_aMajordomoLocations[0].m_fO);
+
+            // Start his speech
+            m_uiSpeechTimer = 1;                        // At next tick
+            m_uiSpeech = 1;
+
+            m_pInstance->SetData(TYPE_MAJORDOMO, DONE);
+        }
+    }
+
+    void StartSummonEvent(Player* pPlayer)
+    {
+        m_creature->RemoveFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_GOSSIP);
+
+        // Prevent possible exploits with double summoning
+        if (Creature* pRagnaros = m_creature->GetMap()->GetCreature(m_ragnarosGuid))
+            return;
+
+        DoScriptText(SAY_SUMMON_0, m_creature, pPlayer);
+
+        m_uiSpeechTimer = 5000;
+        m_uiSpeech = 10;
+    }
+
+    void JustRespawned()
+    {
+        // Encounter finished, need special treatment
+        if (m_bHasEncounterFinished)
+        {
+            // This needs to be set to be able to resummon Ragnaros
+            m_creature->SetFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_GOSSIP);
+
+            // Relocate here
+            debug_log("SD2: boss_majordomo_executus: Relocate to Ragnaros' Lair on respawn");
+            m_creature->GetMap()->CreatureRelocation(m_creature, m_aMajordomoLocations[1].m_fX, m_aMajordomoLocations[1].m_fY, m_aMajordomoLocations[1].m_fZ, m_aMajordomoLocations[1].m_fO);
+            m_creature->SetActiveObjectState(false);
+        }
+    }
+
+    void JustSummoned(Creature* pSummoned)
+    {
+        if (pSummoned->GetEntry() == NPC_FLAMEWAKER_HEALER || pSummoned->GetEntry() == NPC_FLAMEWAKER_ELITE)
+        {
+            m_luiMajordomoAddsGUIDs.push_back(pSummoned->GetObjectGuid());
+            pSummoned->SetRespawnDelay(2*HOUR);
+        }
+        else if (pSummoned->GetEntry() == NPC_RAGNAROS)
+        {
+            m_ragnarosGuid = pSummoned->GetObjectGuid();
+            pSummoned->CastSpell(pSummoned, SPELL_RAGNA_EMERGE, false);
+        }
+    }
+
+    void JustDied(Unit* pKiller)
+    {
+        if (pKiller->GetTypeId() == TYPEID_UNIT && pKiller->GetEntry() == NPC_RAGNAROS)
+            DoScriptText(SAY_ARRIVAL4_MAJ, m_creature);
+    }
+
+    void CorpseRemoved(uint32 &uiRespawnDelay)
+    {
+        uiRespawnDelay = urand(2 * HOUR, 3 * HOUR);
+
+        if (m_bHasEncounterFinished)
+        {
+            // Needed for proper respawn handling
+            debug_log("SD2: boss_majordomo_executus: Set active");
+            m_creature->SetActiveObjectState(true);
+        }
+    }
+
+    void SummonedCreatureJustDied(Creature* pSummoned)
+    {
+        if (pSummoned->GetEntry() == NPC_FLAMEWAKER_HEALER || pSummoned->GetEntry() == NPC_FLAMEWAKER_ELITE)
+        {
+            m_uiAddsKilled += 1;
+
+            // Yell if only one Add alive
+            if (m_uiAddsKilled == m_luiMajordomoAddsGUIDs.size() - 1)
+                DoScriptText(SAY_LAST_ADD, m_creature);
+
+            // All adds are killed, retreat
+            else if (m_uiAddsKilled == m_luiMajordomoAddsGUIDs.size())
+            {
+                m_bHasEncounterFinished = true;
+                m_creature->GetMotionMaster()->MoveTargetedHome();
+            }
+        }
+    }
+
+    // Unsummon Majordomo adds
+    void UnsummonMajordomoAdds()
+    {
+        for (GuidList::const_iterator itr = m_luiMajordomoAddsGUIDs.begin(); itr != m_luiMajordomoAddsGUIDs.end(); ++itr)
+        {
+            if (Creature* pAdd = m_creature->GetMap()->GetCreature(*itr))
+                if (pAdd->IsTemporarySummon())
+                    ((TemporarySummon*)pAdd)->UnSummon();
+        }
+
+        m_luiMajordomoAddsGUIDs.clear();
+    }
+
+    void DamageTaken(Unit* pDealer, uint32& uiDamage)
+    {
+        if (uiDamage > m_creature->GetHealth())
+        {
+            uiDamage = 0;
+            DoCastSpellIfCan(m_creature, SPELL_AEGIS, CAST_TRIGGERED);
+        }
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        // Handling of his combat-end speech and Ragnaros summoning
+        if (m_uiSpeech)
+        {
+            if (m_uiSpeechTimer < uiDiff)
+            {
+                switch (m_uiSpeech)
+                {
+                    // Majordomo retreat event
+                    case 1:
+                        DoScriptText(SAY_DEFEAT_1, m_creature);
+                        m_uiSpeechTimer = 7500;
+                        ++m_uiSpeech;
+                        break;
+                    case 2:
+                        DoScriptText(SAY_DEFEAT_2, m_creature);
+                        m_uiSpeechTimer = 8000;
+                        ++m_uiSpeech;
+                        break;
+                    case 3:
+                        DoScriptText(SAY_DEFEAT_3, m_creature);
+                        m_uiSpeechTimer = 21500;
+                        ++m_uiSpeech;
+                        break;
+                    case 4:
+                        DoCastSpellIfCan(m_creature, SPELL_TELEPORT_SELF);
+                        // TODO - when should they be unsummoned?
+                        // TODO - also unclear how this should be handled, as of range issues
+                        m_uiSpeechTimer = 900;
+                        ++m_uiSpeech;
+                        break;
+                    case 5:
+                        // Majordomo is away now, remove his adds
+                        UnsummonMajordomoAdds();
+                        m_uiSpeech = 0;
+                        break;
+
+                    // Ragnaros Summon Event
+                    case 10:
+                        DoScriptText(SAY_SUMMON_1, m_creature);
+                        ++m_uiSpeech;
+                        m_uiSpeechTimer = 1000;
+                        break;
+                    case 11:
+                        DoCastSpellIfCan(m_creature, SPELL_SUMMON_RAGNAROS);
+                        // TODO - Move along, this expects to be handled with mmaps
+                        m_creature->GetMotionMaster()->MovePoint(1, 831.079590f, -816.023193f, -229.023270f);
+                        ++m_uiSpeech;
+                        m_uiSpeechTimer = 7000;
+                        break;
+                    case 12:
+                        // Reset orientation
+                        if (GameObject* pLavaSteam = m_pInstance->GetSingleGameObjectFromStorage(GO_LAVA_STEAM))
+                            m_creature->SetFacingToObject(pLavaSteam);
+                        m_uiSpeechTimer = 4500;
+                        ++m_uiSpeech;
+                        break;
+                    case 13:
+                        DoScriptText(SAY_SUMMON_MAJ, m_creature);
+                        ++m_uiSpeech;
+                        m_uiSpeechTimer = 8000;
+                        break;
+                    case 14:
+                        // Summon Ragnaros
+                        if (m_pInstance)
+                            if (GameObject* pGo = m_pInstance->GetSingleGameObjectFromStorage(GO_LAVA_STEAM))
+                                m_creature->SummonCreature(NPC_RAGNAROS, pGo->GetPositionX(), pGo->GetPositionY(), pGo->GetPositionZ(), fmod(m_creature->GetOrientation() + M_PI, 2*M_PI), TEMPSUMMON_TIMED_OR_DEAD_DESPAWN, 2*HOUR*IN_MILLISECONDS);
+                        ++m_uiSpeech;
+                        m_uiSpeechTimer = 8700;
+                        break;
+                    case 15:
+                        if (Creature* pRagnaros = m_creature->GetMap()->GetCreature(m_ragnarosGuid))
+                            DoScriptText(SAY_ARRIVAL1_RAG, pRagnaros);
+                        ++m_uiSpeech;
+                        m_uiSpeechTimer = 11700;
+                        break;
+                    case 16:
+                        DoScriptText(SAY_ARRIVAL2_MAJ, m_creature);
+                        ++m_uiSpeech;
+                        m_uiSpeechTimer = 8700;
+                        break;
+                    case 17:
+                        if (Creature* pRagnaros = m_creature->GetMap()->GetCreature(m_ragnarosGuid))
+                            DoScriptText(SAY_ARRIVAL3_RAG, pRagnaros);
+                        ++m_uiSpeech;
+                        m_uiSpeechTimer = 16500;
+                        break;
+                    case 18:
+                        if (Creature* pRagnaros = m_creature->GetMap()->GetCreature(m_ragnarosGuid))
+                            pRagnaros->CastSpell(m_creature, SPELL_ELEMENTAL_FIRE, false);
+                        // Rest of summoning speech is handled by Ragnaros, as Majordomo will be dead
+                        m_uiSpeech = 0;
+                        break;
+                }
+            }
+            else
+                m_uiSpeechTimer -= uiDiff;
+        }
+
+        // When encounter finished, no need to do anything anymore (important for moving home after victory)
+        if (m_bHasEncounterFinished)
+            return;
+
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Cast Ageis to heal self
+        if (m_uiAegisTimer <= uiDiff)
+            m_uiAegisTimer = 0;
+        else
+            m_uiAegisTimer -= uiDiff;
+
+        if (m_creature->GetHealthPercent() < 90.0f && !m_uiAegisTimer)
+        {
+            DoCastSpellIfCan(m_creature, SPELL_AEGIS);
+            m_uiAegisTimer = 10000;
+        }
+
+        // Magic Reflection Timer
+        if (m_uiMagicReflectionTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_MAGIC_REFLECTION) == CAST_OK)
+                m_uiMagicReflectionTimer = 30000;
+        }
+        else
+            m_uiMagicReflectionTimer -= uiDiff;
+
+        // Damage Reflection Timer
+        if (m_uiDamageReflectionTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_DAMAGE_REFLECTION) == CAST_OK)
+                m_uiDamageReflectionTimer = 30000;
+        }
+        else
+            m_uiDamageReflectionTimer -= uiDiff;
+
+        // Teleports the target to the heated rock in the center of the area
+        if (m_uiTeleportTimer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 1))
+            {
+                if (DoCastSpellIfCan(pTarget, SPELL_TELEPORT) == CAST_OK)
+                    m_uiTeleportTimer = 20000;
+            }
+        }
+        else
+            m_uiTeleportTimer -= uiDiff;
+
+        // Blastwave Timer
+        if (m_uiBlastwaveTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_BLASTWAVE) == CAST_OK)
+                m_uiBlastwaveTimer = 10000;
+        }
+        else
+            m_uiBlastwaveTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_majordomo(Creature* pCreature)
+{
+    return new boss_majordomoAI(pCreature);
+}
+
+bool GossipHello_boss_majordomo(Player* pPlayer, Creature* pCreature)
+{
+    if (instance_molten_core* pInstance = (instance_molten_core*)pCreature->GetInstanceData())
+    {
+        if (pInstance->GetData(TYPE_RAGNAROS) == NOT_STARTED || pInstance->GetData(TYPE_RAGNAROS) == FAIL)
+        {
+            pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_SUMMON_1, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+1);
+            pPlayer->SEND_GOSSIP_MENU(TEXT_ID_SUMMON_1, pCreature->GetObjectGuid());
+        }
+    }
+    return true;
+}
+
+bool GossipSelect_boss_majordomo(Player* pPlayer, Creature* pCreature, uint32 sender, uint32 uiAction)
+{
+    switch (uiAction)
+    {
+        case GOSSIP_ACTION_INFO_DEF + 1:
+            pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_SUMMON_2, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 2);
+            pPlayer->SEND_GOSSIP_MENU(TEXT_ID_SUMMON_2, pCreature->GetObjectGuid());
+            break;
+        case GOSSIP_ACTION_INFO_DEF + 2:
+            pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_SUMMON_3, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 3);
+            pPlayer->SEND_GOSSIP_MENU(TEXT_ID_SUMMON_3, pCreature->GetObjectGuid());
+            break;
+        case GOSSIP_ACTION_INFO_DEF + 3:
+            pPlayer->CLOSE_GOSSIP_MENU();
+            if (boss_majordomoAI* pMajoAI = dynamic_cast<boss_majordomoAI*>(pCreature->AI()))
+                pMajoAI->StartSummonEvent(pPlayer);
+            break;
+    }
+
+    return true;
+}
+
+bool EffectDummyCreature_spell_boss_majordomo(Unit* pCaster, uint32 uiSpellId, SpellEffectIndex uiEffIndex, Creature* pCreatureTarget)
+{
+    if (uiSpellId != SPELL_TELEPORT_SELF || uiEffIndex != EFFECT_INDEX_0)
+        return false;
+
+    pCreatureTarget->SetFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_GOSSIP);
+    pCreatureTarget->NearTeleportTo(m_aMajordomoLocations[1].m_fX, m_aMajordomoLocations[1].m_fY, m_aMajordomoLocations[1].m_fZ, m_aMajordomoLocations[1].m_fO, true);
+    // TODO - some visibility update?
+    return true;
+}
+
+void AddSC_boss_majordomo()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_majordomo";
+    pNewScript->pEffectDummyNPC = &EffectDummyCreature_spell_boss_majordomo;
+    pNewScript->pGossipHello = &GossipHello_boss_majordomo;
+    pNewScript->pGossipSelect = &GossipSelect_boss_majordomo;
+    pNewScript->GetAI = &GetAI_boss_majordomo;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_ragnaros.cpp b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_ragnaros.cpp
new file mode 100644
index 0000000..d9cfd07
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_ragnaros.cpp
@@ -0,0 +1,343 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Ragnaros
+SD%Complete: 70
+SDComment: Melee/ Range Combat behavior is not correct(any enemy in melee range, not only getVictim), Some abilities are missing
+SDCategory: Molten Core
+EndScriptData */
+
+#include "precompiled.h"
+#include "molten_core.h"
+
+/* There have been quite some bugs about his spells, keep this as reference untill all finished
+ * Missing features (based on wowwiki)
+ *   Lava Burst - this spell is handled by Go 178088 which is summoned by spells 21886, 21900 - 21907
+ */
+
+enum
+{
+    SAY_ARRIVAL5_RAG            = -1409012,
+    SAY_REINFORCEMENTS_1        = -1409013,
+    SAY_REINFORCEMENTS_2        = -1409014,
+    SAY_HAMMER                  = -1409015,
+    SAY_WRATH                   = -1409016,
+    SAY_KILL                    = -1409017,
+    SAY_MAGMABURST              = -1409018,
+
+    SPELL_WRATH_OF_RAGNAROS     = 20566,
+    SPELL_ELEMENTAL_FIRE        = 20564,
+    SPELL_MAGMA_BLAST           = 20565,                    // Ranged attack if nobody is in melee range
+    SPELL_MELT_WEAPON           = 21387,
+    SPELL_RAGNA_SUBMERGE        = 21107,                    // Stealth aura
+    SPELL_RAGNA_EMERGE          = 20568,                    // Emerge from lava
+    SPELL_ELEMENTAL_FIRE_KILL   = 19773,
+    SPELL_MIGHT_OF_RAGNAROS     = 21154,
+    SPELL_INTENSE_HEAT          = 21155,
+
+    MAX_ADDS_IN_SUBMERGE        = 8,
+    NPC_SON_OF_FLAME            = 12143,
+    NPC_FLAME_OF_RAGNAROS       = 13148,
+};
+
+struct MANGOS_DLL_DECL boss_ragnarosAI : public Scripted_NoMovementAI
+{
+    boss_ragnarosAI(Creature* pCreature) : Scripted_NoMovementAI(pCreature)
+    {
+        m_pInstance = (instance_molten_core*)pCreature->GetInstanceData();
+        m_uiEnterCombatTimer = 0;
+        m_bHasAggroYelled = false;
+        Reset();
+    }
+
+    instance_molten_core* m_pInstance;
+
+    uint32 m_uiEnterCombatTimer;
+    uint32 m_uiWrathOfRagnarosTimer;
+    uint32 m_uiHammerTimer;
+    uint32 m_uiMagmaBlastTimer;
+    uint32 m_uiElementalFireTimer;
+    uint32 m_uiSubmergeTimer;
+    uint32 m_uiAttackTimer;
+    uint32 m_uiAddCount;
+
+    bool m_bHasAggroYelled;
+    bool m_bHasYelledMagmaBurst;
+    bool m_bHasSubmergedOnce;
+    bool m_bIsSubmerged;
+
+    void Reset()
+    {
+        m_uiWrathOfRagnarosTimer = 30000;                   // TODO Research more, according to wowwiki 25s, but timers up to 34s confirmed
+        m_uiHammerTimer = 11000;                            // TODO wowwiki states 20-30s timer, but ~11s confirmed
+        m_uiMagmaBlastTimer = 2000;
+        m_uiElementalFireTimer = 3000;
+        m_uiSubmergeTimer = 3*MINUTE*IN_MILLISECONDS;
+        m_uiAttackTimer = 90*IN_MILLISECONDS;
+        m_uiAddCount = 0;
+
+        m_bHasYelledMagmaBurst = false;
+        m_bHasSubmergedOnce = false;
+        m_bIsSubmerged = false;
+    }
+
+    void KilledUnit(Unit* pVictim)
+    {
+        if (pVictim->GetTypeId() != TYPEID_PLAYER)
+            return;
+
+        if (urand(0, 3))
+            return;
+
+        DoScriptText(SAY_KILL, m_creature);
+    }
+
+    void JustDied(Unit* pKiller)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_RAGNAROS, DONE);
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        if (pWho->GetTypeId() == TYPEID_UNIT && pWho->GetEntry() == NPC_MAJORDOMO)
+            return;
+
+        DoCastSpellIfCan(m_creature, SPELL_MELT_WEAPON);
+
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_RAGNAROS, IN_PROGRESS);
+    }
+
+    void EnterEvadeMode()
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_RAGNAROS, FAIL);
+
+        // Reset flag if had been submerged
+        if (m_creature->HasFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE))
+            m_creature->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
+
+        ScriptedAI::EnterEvadeMode();
+    }
+
+    void SummonedCreatureJustDied(Creature* pSummmoned)
+    {
+        // If all Sons of Flame are dead, trigger emerge
+        if (pSummmoned->GetEntry() == NPC_SON_OF_FLAME)
+        {
+            m_uiAddCount--;
+
+            // If last add killed then emerge soonish
+            if (m_uiAddCount == 0)
+                m_uiAttackTimer = std::min(m_uiAttackTimer, (uint32)1000);
+        }
+    }
+
+    void JustSummoned(Creature* pSummoned)
+    {
+        if (pSummoned->GetEntry() == NPC_SON_OF_FLAME)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+                pSummoned->AI()->AttackStart(pTarget);
+
+            ++m_uiAddCount;
+        }
+        else if (pSummoned->GetEntry() == NPC_FLAME_OF_RAGNAROS)
+            pSummoned->CastSpell(pSummoned, SPELL_INTENSE_HEAT, true, NULL, NULL, m_creature->GetObjectGuid());
+    }
+
+    void SpellHitTarget(Unit* pTarget, const SpellEntry* pSpell)
+    {
+        // As Majordomo is now killed, the last timer (until attacking) must be handled with ragnaros script
+        if (pSpell->Id == SPELL_ELEMENTAL_FIRE_KILL && pTarget->GetTypeId() == TYPEID_UNIT && pTarget->GetEntry() == NPC_MAJORDOMO)
+            m_uiEnterCombatTimer = 10000;
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (m_uiEnterCombatTimer)
+        {
+            if (m_uiEnterCombatTimer <=  uiDiff)
+            {
+                if (!m_bHasAggroYelled)
+                {
+                    m_uiEnterCombatTimer = 3000;
+                    m_bHasAggroYelled = true;
+                    DoScriptText(SAY_ARRIVAL5_RAG, m_creature);
+                }
+                else
+                {
+                    m_uiEnterCombatTimer = 0;
+                    // If we don't remove this passive flag, he will be unattackable after evading, this way he will enter combat
+                    m_creature->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_PASSIVE);
+                    if (m_pInstance)
+                    {
+                        if (Player* pPlayer = m_pInstance->GetPlayerInMap(true, false))
+                        {
+                            m_creature->AI()->AttackStart(pPlayer);
+                            return;
+                        }
+                    }
+                }
+            }
+            else
+                m_uiEnterCombatTimer -= uiDiff;
+        }
+        // Return since we have no target
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        if (m_bIsSubmerged)
+        {
+            // Timer to check when Ragnaros should emerge (is set to soonish, when last add is killed)
+            if (m_uiAttackTimer < uiDiff)
+            {
+                // Become emerged again
+                DoCastSpellIfCan(m_creature, SPELL_RAGNA_EMERGE);
+                m_creature->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
+                m_uiSubmergeTimer = 3*MINUTE*IN_MILLISECONDS;
+                m_uiMagmaBlastTimer = 3000;                 // Delay the magma blast after emerge
+                m_bIsSubmerged = false;
+            }
+            else
+                m_uiAttackTimer -= uiDiff;
+
+            // Do nothing while submerged
+            return;
+        }
+
+        // Wrath Of Ragnaros Timer
+        if (m_uiWrathOfRagnarosTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_WRATH_OF_RAGNAROS) == CAST_OK)
+            {
+                DoScriptText(SAY_WRATH, m_creature);
+                m_uiWrathOfRagnarosTimer = 30000;
+            }
+        }
+        else
+            m_uiWrathOfRagnarosTimer -= uiDiff;
+
+        // Elemental Fire Timer
+        if (m_uiElementalFireTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_ELEMENTAL_FIRE) == CAST_OK)
+                m_uiElementalFireTimer = urand(10000, 14000);
+        }
+        else
+            m_uiElementalFireTimer -= uiDiff;
+
+        // Hammer of Ragnaros
+        if (m_uiHammerTimer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0, SPELL_MIGHT_OF_RAGNAROS, SELECT_FLAG_POWER_MANA))
+            {
+                if (DoCastSpellIfCan(pTarget, SPELL_MIGHT_OF_RAGNAROS) == CAST_OK)
+                {
+                    DoScriptText(SAY_HAMMER, m_creature);
+                    m_uiHammerTimer = 11000;
+                }
+            }
+            else
+                m_uiHammerTimer = 11000;
+        }
+        else
+            m_uiHammerTimer -= uiDiff;
+
+        // Submerge Timer
+        if (m_uiSubmergeTimer < uiDiff)
+        {
+            // Submerge and attack again after 90 secs
+            DoCastSpellIfCan(m_creature, SPELL_RAGNA_SUBMERGE, CAST_INTERRUPT_PREVIOUS);
+            m_creature->HandleEmote(EMOTE_ONESHOT_SUBMERGE);
+            m_bIsSubmerged = true;
+            m_uiAttackTimer = 90*IN_MILLISECONDS;
+
+            m_creature->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
+
+            // Say dependend if first time or not
+            DoScriptText(!m_bHasSubmergedOnce ? SAY_REINFORCEMENTS_1 : SAY_REINFORCEMENTS_2, m_creature);
+            m_bHasSubmergedOnce = true;
+
+            // Summon 8 elementals at random points around the boss
+            float fX, fY, fZ;
+            for(uint8 i = 0; i < MAX_ADDS_IN_SUBMERGE; ++i)
+            {
+                m_creature->GetRandomPoint(m_creature->GetPositionX(), m_creature->GetPositionY(), m_creature->GetPositionZ(), 30.0f, fX, fY, fZ);
+                m_creature->SummonCreature(NPC_SON_OF_FLAME, fX, fY, fZ, 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 1000);
+            }
+
+            return;
+        }
+        else
+            m_uiSubmergeTimer -= uiDiff;
+
+        // TODO this actually should select _any_ enemy in melee range, not only the tank
+        // Range check for melee target, if nobody is found in range, then cast magma blast on random
+        // If we are within range melee the target
+        if (m_creature->IsNonMeleeSpellCasted(false) || !m_creature->getVictim())
+            return;
+
+        if (m_creature->CanReachWithMeleeAttack(m_creature->getVictim()))
+        {
+            // Make sure our attack is ready
+            if (m_creature->isAttackReady())
+            {
+                m_creature->AttackerStateUpdate(m_creature->getVictim());
+                m_creature->resetAttackTimer();
+                m_bHasYelledMagmaBurst = false;
+            }
+        }
+        else
+        {
+            // Magma Burst Timer
+            if (m_uiMagmaBlastTimer < uiDiff)
+            {
+                if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+                {
+                    if (DoCastSpellIfCan(pTarget, SPELL_MAGMA_BLAST) == CAST_OK)
+                    {
+                        if (!m_bHasYelledMagmaBurst)
+                        {
+                            DoScriptText(SAY_MAGMABURST, m_creature);
+                            m_bHasYelledMagmaBurst = true;
+                        }
+                        m_uiMagmaBlastTimer = 1000;          // Spamm this!
+                    }
+                }
+            }
+            else
+                m_uiMagmaBlastTimer -= uiDiff;
+        }
+    }
+};
+
+CreatureAI* GetAI_boss_ragnaros(Creature* pCreature)
+{
+    return new boss_ragnarosAI(pCreature);
+}
+
+void AddSC_boss_ragnaros()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_ragnaros";
+    pNewScript->GetAI = &GetAI_boss_ragnaros;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_shazzrah.cpp b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_shazzrah.cpp
new file mode 100644
index 0000000..3429bbf
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_shazzrah.cpp
@@ -0,0 +1,156 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Shazzrah
+SD%Complete: 75
+SDComment: Teleport NYI (need core support, remove hack here when implemented)
+SDCategory: Molten Core
+EndScriptData */
+
+#include "precompiled.h"
+#include "molten_core.h"
+
+enum
+{
+    SPELL_ARCANE_EXPLOSION          = 19712,
+    SPELL_SHAZZRAH_CURSE            = 19713,
+    SPELL_MAGIC_GROUNDING           = 19714,
+    SPELL_COUNTERSPELL              = 19715,
+    SPELL_GATE_OF_SHAZZRAH          = 23138                 // effect spell: 23139
+};
+
+struct MANGOS_DLL_DECL boss_shazzrahAI : public ScriptedAI
+{
+    boss_shazzrahAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    uint32 m_uiArcaneExplosionTimer;
+    uint32 m_uiShazzrahCurseTimer;
+    uint32 m_uiMagicGroundingTimer;
+    uint32 m_uiCounterspellTimer;
+    uint32 m_uiBlinkTimer;
+
+    void Reset()
+    {
+        m_uiArcaneExplosionTimer = 6000;
+        m_uiShazzrahCurseTimer = 10000;
+        m_uiMagicGroundingTimer = 24000;
+        m_uiCounterspellTimer = 15000;
+        m_uiBlinkTimer = 30000;
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_SHAZZRAH, IN_PROGRESS);
+    }
+
+    void JustDied(Unit* pKiller)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_SHAZZRAH, DONE);
+    }
+
+    void JustReachedHome()
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_SHAZZRAH, NOT_STARTED);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Arcane Explosion Timer
+        if (m_uiArcaneExplosionTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_ARCANE_EXPLOSION) == CAST_OK)
+                m_uiArcaneExplosionTimer = urand(5000, 9000);
+        }
+        else
+            m_uiArcaneExplosionTimer -= uiDiff;
+
+        // Shazzrah Curse Timer
+        if (m_uiShazzrahCurseTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_SHAZZRAH_CURSE) == CAST_OK)
+                m_uiShazzrahCurseTimer = 20000;
+        }
+        else
+            m_uiShazzrahCurseTimer -= uiDiff;
+
+        // Magic Grounding Timer
+        if (m_uiMagicGroundingTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_MAGIC_GROUNDING) == CAST_OK)
+                m_uiMagicGroundingTimer = 35000;
+        }
+        else
+            m_uiMagicGroundingTimer -= uiDiff;
+
+        // Counterspell Timer
+        if (m_uiCounterspellTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_COUNTERSPELL) == CAST_OK)
+                m_uiCounterspellTimer = urand(16000, 20000);
+        }
+        else
+            m_uiCounterspellTimer -= uiDiff;
+
+        // Blink Timer
+        if (m_uiBlinkTimer < uiDiff)
+        {
+            // Teleporting him to a random gamer and casting Arcane Explosion after that.
+            if (DoCastSpellIfCan(m_creature, SPELL_GATE_OF_SHAZZRAH) == CAST_OK)
+            {
+                // manual, until added effect of dummy properly -- TODO REMOVE HACK
+                if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+                    m_creature->NearTeleportTo(pTarget->GetPositionX(), pTarget->GetPositionY(), pTarget->GetPositionZ(), m_creature->GetOrientation());
+                DoResetThreat();
+
+                DoCastSpellIfCan(m_creature, SPELL_ARCANE_EXPLOSION, CAST_TRIGGERED);
+
+                m_uiBlinkTimer = 45000;
+            }
+        }
+        else
+            m_uiBlinkTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_shazzrah(Creature* pCreature)
+{
+    return new boss_shazzrahAI(pCreature);
+}
+
+void AddSC_boss_shazzrah()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_shazzrah";
+    pNewScript->GetAI = &GetAI_boss_shazzrah;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_sulfuron_harbinger.cpp b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_sulfuron_harbinger.cpp
new file mode 100644
index 0000000..107a811
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/boss_sulfuron_harbinger.cpp
@@ -0,0 +1,242 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Sulfuron_Harbringer
+SD%Complete: 80
+SDComment: Spells Dark strike and Flamespear need confirmation
+SDCategory: Molten Core
+EndScriptData */
+
+#include "precompiled.h"
+#include "molten_core.h"
+
+enum
+{
+    SPELL_DARK_STRIKE           = 19777,                    // Wowhead Linked to add - need confirmation!
+    SPELL_DEMORALIZING_SHOUT    = 19778,
+    SPELL_INSPIRE               = 19779,
+    SPELL_HAND_OF_RAGNAROS      = 19780,
+    SPELL_FLAMESPEAR            = 19781,
+
+    // Adds Spells
+    SPELL_HEAL                  = 19775,
+    SPELL_SHADOWWORD_PAIN       = 19776,
+    SPELL_IMMOLATE              = 20294
+};
+
+struct MANGOS_DLL_DECL boss_sulfuronAI : public ScriptedAI
+{
+    boss_sulfuronAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    uint32 m_uiDarkstrikeTimer;
+    uint32 m_uiDemoralizingShoutTimer;
+    uint32 m_uiInspireTimer;
+    uint32 m_uiKnockdownTimer;
+    uint32 m_uiFlamespearTimer;
+
+    void Reset()
+    {
+        m_uiDarkstrikeTimer = 10000;
+        m_uiDemoralizingShoutTimer = 15000;
+        m_uiInspireTimer = 3000;
+        m_uiKnockdownTimer = 6000;
+        m_uiFlamespearTimer = 2000;
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_SULFURON, IN_PROGRESS);
+    }
+
+    void JustDied(Unit* pKiller)
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_SULFURON, DONE);
+    }
+
+    void JustReachedHome()
+    {
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_SULFURON, FAIL);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Demoralizing Shout Timer
+        if (m_uiDemoralizingShoutTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_DEMORALIZING_SHOUT) == CAST_OK)
+                m_uiDemoralizingShoutTimer = urand(15000, 20000);
+        }
+        else
+            m_uiDemoralizingShoutTimer -= uiDiff;
+
+        // Inspire Timer
+        if (m_uiInspireTimer < uiDiff)
+        {
+            Creature* pTarget = NULL;
+            std::list<Creature*> pList = DoFindFriendlyMissingBuff(45.0f, SPELL_INSPIRE);
+            if (!pList.empty())
+            {
+                std::list<Creature*>::iterator i = pList.begin();
+                advance(i, (rand()%pList.size()));
+                pTarget = (*i);
+            }
+
+            if (!pTarget)
+                pTarget = m_creature;
+
+            if (DoCastSpellIfCan(pTarget, SPELL_INSPIRE) == CAST_OK)
+                m_uiInspireTimer = 10000;
+        }
+        else
+            m_uiInspireTimer -= uiDiff;
+
+        // Hand of Ragnaros Timer
+        if (m_uiKnockdownTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_HAND_OF_RAGNAROS) == CAST_OK)
+                m_uiKnockdownTimer = urand(12000, 15000);
+        }
+        else
+            m_uiKnockdownTimer -= uiDiff;
+
+        // Flamespear Timer
+        if (m_uiFlamespearTimer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+            {
+                if (DoCastSpellIfCan(pTarget, SPELL_FLAMESPEAR) == CAST_OK)
+                    m_uiFlamespearTimer = urand(12000, 16000);
+            }
+        }
+        else
+            m_uiFlamespearTimer -= uiDiff;
+
+        // Dark Strike Timer
+        if (m_uiDarkstrikeTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_DARK_STRIKE) == CAST_OK)
+                m_uiDarkstrikeTimer = urand(15000, 18000);
+        }
+        else
+            m_uiDarkstrikeTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+struct MANGOS_DLL_DECL mob_flamewaker_priestAI : public ScriptedAI
+{
+    mob_flamewaker_priestAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    uint32 m_uiHealTimer;
+    uint32 m_uiShadowWordPainTimer;
+    uint32 m_uiImmolateTimer;
+
+    ScriptedInstance* m_pInstance;
+
+    void Reset()
+    {
+        m_uiHealTimer = urand(15000, 30000);
+        m_uiShadowWordPainTimer = 2000;
+        m_uiImmolateTimer = 8000;
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Casting Heal to Sulfuron or other Guards.
+        if (m_uiHealTimer < uiDiff)
+        {
+            if (Unit* pUnit = DoSelectLowestHpFriendly(60.0f, 1))
+            {
+                if (DoCastSpellIfCan(pUnit, SPELL_HEAL) == CAST_OK)
+                    m_uiHealTimer = urand(15000, 20000);
+            }
+        }
+        else
+            m_uiHealTimer -= uiDiff;
+
+        // ShadowWord Pain Timer
+        if (m_uiShadowWordPainTimer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+            {
+                if (DoCastSpellIfCan(pTarget, SPELL_SHADOWWORD_PAIN) == CAST_OK)
+                    m_uiShadowWordPainTimer = urand(18000, 26000);
+            }
+        }
+        else
+            m_uiShadowWordPainTimer -= uiDiff;
+
+        // Immolate Timer
+        if (m_uiImmolateTimer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+            {
+                if (DoCastSpellIfCan(pTarget, SPELL_IMMOLATE) == CAST_OK)
+                    m_uiImmolateTimer = urand(15000, 25000);
+            }
+        }
+        else
+            m_uiImmolateTimer -= uiDiff;
+
+        DoMeleeAttackIfReady();
+    }
+};
+
+CreatureAI* GetAI_boss_sulfuron(Creature* pCreature)
+{
+    return new boss_sulfuronAI(pCreature);
+}
+
+CreatureAI* GetAI_mob_flamewaker_priest(Creature* pCreature)
+{
+    return new mob_flamewaker_priestAI(pCreature);
+}
+
+void AddSC_boss_sulfuron()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_sulfuron";
+    pNewScript->GetAI = &GetAI_boss_sulfuron;
+    pNewScript->RegisterSelf();
+
+    pNewScript = new Script;
+    pNewScript->Name = "mob_flamewaker_priest";
+    pNewScript->GetAI = &GetAI_mob_flamewaker_priest;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/molten_core/instance_molten_core.cpp b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/instance_molten_core.cpp
new file mode 100644
index 0000000..f6684ab
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/instance_molten_core.cpp
@@ -0,0 +1,253 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Instance_Molten_Core
+SD%Complete: 25
+SDComment: Majordomos and Ragnaros Event missing
+SDCategory: Molten Core
+EndScriptData */
+
+#include "precompiled.h"
+#include "molten_core.h"
+
+instance_molten_core::instance_molten_core(Map* pMap) : ScriptedInstance(pMap)
+{
+    Initialize();
+}
+
+void instance_molten_core::Initialize()
+{
+    memset(&m_auiEncounter, 0, sizeof(m_auiEncounter));
+}
+
+bool instance_molten_core::IsEncounterInProgress() const
+{
+    for (uint8 i = 0; i < MAX_ENCOUNTER; ++i)
+    {
+        if (m_auiEncounter[i] == IN_PROGRESS)
+            return true;
+    }
+
+    return false;
+}
+
+void instance_molten_core::OnPlayerEnter(Player* pPlayer)
+{
+    // Summon Majordomo if can
+    DoSpawnMajordomoIfCan(true);
+}
+
+void instance_molten_core::OnCreatureCreate(Creature* pCreature)
+{
+    switch (pCreature->GetEntry())
+    {
+        // Bosses
+        case NPC_GARR:
+        case NPC_SULFURON:
+        case NPC_MAJORDOMO:
+            m_mNpcEntryGuidStore[pCreature->GetEntry()] = pCreature->GetObjectGuid();
+            break;
+    }
+}
+
+void instance_molten_core::OnObjectCreate(GameObject* pGo)
+{
+    switch(pGo->GetEntry())
+    {
+        // Runes
+        case GO_RUNE_KRESS:
+        case GO_RUNE_MOHN:
+        case GO_RUNE_BLAZ:
+        case GO_RUNE_MAZJ:
+        case GO_RUNE_ZETH:
+        case GO_RUNE_THERI:
+        case GO_RUNE_KORO:
+
+        // Majordomo event chest
+        case GO_CACHE_OF_THE_FIRE_LORD:
+        // Ragnaros GOs
+        case GO_LAVA_STEAM:
+        case GO_LAVA_SPLASH:
+            m_mGoEntryGuidStore[pGo->GetEntry()] = pGo->GetObjectGuid();
+            break;
+    }
+}
+
+void instance_molten_core::SetData(uint32 uiType, uint32 uiData)
+{
+    switch(uiType)
+    {
+        case TYPE_LUCIFRON:
+            m_auiEncounter[uiType] = uiData;
+            break;
+        case TYPE_MAGMADAR:
+            m_auiEncounter[uiType] = uiData;
+            if (uiData == DONE)
+                DoUseDoorOrButton(GO_RUNE_KRESS);
+            break;
+        case TYPE_GEHENNAS:
+            m_auiEncounter[uiType] = uiData;
+            if (uiData == DONE)
+                DoUseDoorOrButton(GO_RUNE_MOHN);
+            break;
+        case TYPE_GARR:
+            m_auiEncounter[uiType] = uiData;
+            if (uiData == DONE)
+                DoUseDoorOrButton(GO_RUNE_BLAZ);
+            break;
+        case TYPE_SHAZZRAH:
+            m_auiEncounter[uiType] = uiData;
+            if (uiData == DONE)
+                DoUseDoorOrButton(GO_RUNE_MAZJ);
+            break;
+        case TYPE_GEDDON:
+            m_auiEncounter[uiType] = uiData;
+            if (uiData == DONE)
+                DoUseDoorOrButton(GO_RUNE_ZETH);
+            break;
+        case TYPE_GOLEMAGG:
+            m_auiEncounter[uiType] = uiData;
+            if (uiData == DONE)
+                DoUseDoorOrButton(GO_RUNE_THERI);
+            break;
+        case TYPE_SULFURON:
+            m_auiEncounter[uiType] = uiData;
+            if (uiData == DONE)
+                DoUseDoorOrButton(GO_RUNE_KORO);
+            break;
+        case TYPE_MAJORDOMO:
+            m_auiEncounter[uiType] = uiData;
+            if (uiData == DONE)
+                DoRespawnGameObject(GO_CACHE_OF_THE_FIRE_LORD, HOUR);
+            break;
+        case TYPE_RAGNAROS:
+            m_auiEncounter[uiType] = uiData;
+            break;
+    }
+
+    // Check if Majordomo can be summoned
+    if (uiData == DONE)
+        DoSpawnMajordomoIfCan(false);
+
+    if (uiData == DONE)
+    {
+        OUT_SAVE_INST_DATA;
+
+        std::ostringstream saveStream;
+        saveStream << m_auiEncounter[0] << " " << m_auiEncounter[1] << " " << m_auiEncounter[2] << " "
+            << m_auiEncounter[3] << " " << m_auiEncounter[4] << " " << m_auiEncounter[5] << " "
+            << m_auiEncounter[6] << " " << m_auiEncounter[7] << " " << m_auiEncounter[8] << " "
+            << m_auiEncounter[9];
+
+        m_strInstData = saveStream.str();
+
+        SaveToDB();
+        OUT_SAVE_INST_DATA_COMPLETE;
+    }
+}
+
+uint32 instance_molten_core::GetData(uint32 uiType)
+{
+    if (uiType < MAX_ENCOUNTER)
+        return m_auiEncounter[uiType];
+
+    return 0;
+}
+
+// Handle Majordomo summon here
+void instance_molten_core::DoSpawnMajordomoIfCan(bool bByPlayerEnter)
+{
+    // If both Majordomo and Ragnaros events are finished, return
+    if (m_auiEncounter[TYPE_MAJORDOMO] == DONE && m_auiEncounter[TYPE_RAGNAROS] == DONE)
+        return;
+
+    // If already spawned return
+    if (GetSingleCreatureFromStorage(NPC_MAJORDOMO, true))
+        return;
+
+    // Check if all rune bosses are done
+    for(uint8 i = TYPE_MAGMADAR; i < TYPE_MAJORDOMO; ++i)
+    {
+        if (m_auiEncounter[i] != DONE)
+            return;
+    }
+
+    Player* pPlayer = GetPlayerInMap();
+    if (!pPlayer)
+        return;
+
+    // Summon Majordomo
+    // If Majordomo encounter isn't done, summon at encounter place, else near Ragnaros
+    uint8 uiSummonPos = m_auiEncounter[TYPE_MAJORDOMO] == DONE ? 1 : 0;
+    if (Creature* pMajordomo = pPlayer->SummonCreature(m_aMajordomoLocations[uiSummonPos].m_uiEntry, m_aMajordomoLocations[uiSummonPos].m_fX, m_aMajordomoLocations[uiSummonPos].m_fY, m_aMajordomoLocations[uiSummonPos].m_fZ, m_aMajordomoLocations[uiSummonPos].m_fO, TEMPSUMMON_MANUAL_DESPAWN, 2*HOUR*IN_MILLISECONDS))
+    {
+        if (uiSummonPos)                                    // Majordomo encounter already done, set faction
+        {
+            pMajordomo->setFaction(FACTION_MAJORDOMO_FRIENDLY);
+            pMajordomo->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_OOC_NOT_ATTACKABLE);
+            pMajordomo->SetFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_GOSSIP);
+        }
+        else                                                // Else yell and summon adds
+        {
+            if (!bByPlayerEnter)
+                DoScriptText(SAY_MAJORDOMO_SPAWN, pMajordomo);
+
+            for (uint8 i = 0; i < MAX_MAJORDOMO_ADDS; ++i)
+                pMajordomo->SummonCreature(m_aBosspawnLocs[i].m_uiEntry, m_aBosspawnLocs[i].m_fX, m_aBosspawnLocs[i].m_fY, m_aBosspawnLocs[i].m_fZ, m_aBosspawnLocs[i].m_fO, TEMPSUMMON_MANUAL_DESPAWN, DAY*IN_MILLISECONDS);
+        }
+    }
+}
+
+void instance_molten_core::Load(const char* chrIn)
+{
+    if (!chrIn)
+    {
+        OUT_LOAD_INST_DATA_FAIL;
+        return;
+    }
+
+    OUT_LOAD_INST_DATA(chrIn);
+
+    std::istringstream loadStream(chrIn);
+
+    loadStream >> m_auiEncounter[0] >> m_auiEncounter[1] >> m_auiEncounter[2] >> m_auiEncounter[3]
+    >> m_auiEncounter[4] >> m_auiEncounter[5] >> m_auiEncounter[6] >> m_auiEncounter[7]
+    >> m_auiEncounter[8] >> m_auiEncounter[9];
+
+    for(uint8 i = 0; i < MAX_ENCOUNTER; ++i)
+    {
+        if (m_auiEncounter[i] == IN_PROGRESS)
+            m_auiEncounter[i] = NOT_STARTED;
+    }
+
+    OUT_LOAD_INST_DATA_COMPLETE;
+}
+
+InstanceData* GetInstance_instance_molten_core(Map* pMap)
+{
+    return new instance_molten_core(pMap);
+}
+
+void AddSC_instance_molten_core()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "instance_molten_core";
+    pNewScript->GetInstanceData = &GetInstance_instance_molten_core;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/molten_core/molten_core.cpp b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/molten_core.cpp
new file mode 100644
index 0000000..7145b20
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/molten_core.cpp
@@ -0,0 +1,31 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Molten_Core
+SD%Complete:
+SDComment:
+SDCategory: Molten Core
+EndScriptData */
+
+/* ContentData
+EndContentData */
+
+#include "precompiled.h"
+
+void AddSC_molten_core()
+{
+}
diff --git a/scripts/eastern_kingdoms/blackrock_mountain/molten_core/molten_core.h b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/molten_core.h
new file mode 100644
index 0000000..d3cd6e4
--- /dev/null
+++ b/scripts/eastern_kingdoms/blackrock_mountain/molten_core/molten_core.h
@@ -0,0 +1,110 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software licensed under GPL version 2
+ * Please see the included DOCS/LICENSE.TXT for more information */
+
+#ifndef DEF_MOLTEN_CORE_H
+#define DEF_MOLTEN_CORE_H
+
+enum
+{
+    MAX_ENCOUNTER               = 10,
+
+    TYPE_LUCIFRON               = 0,
+    TYPE_MAGMADAR               = 1,
+    TYPE_GEHENNAS               = 2,
+    TYPE_GARR                   = 3,
+    TYPE_SHAZZRAH               = 4,
+    TYPE_GEDDON                 = 5,
+    TYPE_GOLEMAGG               = 6,
+    TYPE_SULFURON               = 7,
+    TYPE_MAJORDOMO              = 8,
+    TYPE_RAGNAROS               = 9,
+
+    NPC_LUCIFRON                = 12118,
+    NPC_MAGMADAR                = 11982,
+    NPC_GEHENNAS                = 12259,
+    NPC_GARR                    = 12057,
+    NPC_SHAZZRAH                = 12264,
+    NPC_GEDDON                  = 12056,
+    NPC_GOLEMAGG                = 11988,
+    NPC_SULFURON                = 12098,
+    NPC_MAJORDOMO               = 12018,
+    NPC_RAGNAROS                = 11502,
+
+    // Adds
+    // Used for respawn in case of wipe
+    NPC_FLAMEWAKER_PROTECTOR    = 12119,                    // Lucifron
+    NPC_FLAMEWAKER              = 11661,                    // Gehennas
+    NPC_FIRESWORN               = 12099,                    // Garr
+    NPC_CORE_RAGER              = 11672,                    // Golemagg
+    NPC_FLAMEWAKER_PRIEST       = 11662,                    // Sulfuron
+    NPC_FLAMEWAKER_HEALER       = 11663,                    // Majordomo
+    NPC_FLAMEWAKER_ELITE        = 11664,                    // Majordomo
+
+    GO_LAVA_STEAM               = 178107,
+    GO_LAVA_SPLASH              = 178108,
+    GO_CACHE_OF_THE_FIRE_LORD   = 179703,
+    GO_RUNE_KRESS               = 176956,                   // Magmadar
+    GO_RUNE_MOHN                = 176957,                   // Gehennas
+    GO_RUNE_BLAZ                = 176955,                   // Garr
+    GO_RUNE_MAZJ                = 176953,                   // Shazzah
+    GO_RUNE_ZETH                = 176952,                   // Geddon
+    GO_RUNE_THERI               = 176954,                   // Golemagg
+    GO_RUNE_KORO                = 176951,                   // Sulfuron
+
+    MAX_MAJORDOMO_ADDS          = 8,
+    FACTION_MAJORDOMO_FRIENDLY  = 1080,
+    SAY_MAJORDOMO_SPAWN         = -1409004,
+};
+
+struct sSpawnLocation
+{
+    uint32 m_uiEntry;
+    float m_fX, m_fY, m_fZ, m_fO;
+};
+
+static sSpawnLocation m_aBosspawnLocs[MAX_MAJORDOMO_ADDS] =
+{
+    {NPC_FLAMEWAKER_ELITE,  737.945f, -1156.48f, -118.945f, 4.46804f},
+    {NPC_FLAMEWAKER_ELITE,  752.520f, -1191.02f, -118.218f, 2.49582f},
+    {NPC_FLAMEWAKER_ELITE,  752.953f, -1163.94f, -118.869f, 3.70010f},
+    {NPC_FLAMEWAKER_ELITE,  738.814f, -1197.40f, -118.018f, 1.83260f},
+    {NPC_FLAMEWAKER_HEALER, 746.939f, -1194.87f, -118.016f, 2.21657f},
+    {NPC_FLAMEWAKER_HEALER, 747.132f, -1158.87f, -118.897f, 4.03171f},
+    {NPC_FLAMEWAKER_HEALER, 757.116f, -1170.12f, -118.793f, 3.40339f},
+    {NPC_FLAMEWAKER_HEALER, 755.910f, -1184.46f, -118.449f, 2.80998f}
+};
+
+static sSpawnLocation m_aMajordomoLocations[2] =
+{
+    {NPC_MAJORDOMO, 758.089f, -1176.71f, -118.640f, 3.12414f},  // Summon fight position
+    {NPC_MAJORDOMO, 847.103f, -816.153f, -229.775f, 4.344f}     // Summon and teleport location (near Ragnaros)
+};
+
+class MANGOS_DLL_DECL instance_molten_core : public ScriptedInstance
+{
+    public:
+        instance_molten_core(Map* pMap);
+        ~instance_molten_core() {}
+
+        void Initialize();
+        bool IsEncounterInProgress() const;
+
+        void OnCreatureCreate(Creature* pCreature);
+        void OnObjectCreate(GameObject* pGo);
+        void OnPlayerEnter(Player* pPlayer);
+
+        void SetData(uint32 uiType, uint32 uiData);
+        uint32 GetData(uint32 uiType);
+
+        const char* Save() { return m_strInstData.c_str(); }
+        void Load(const char* chrIn);
+
+    protected:
+        void DoSpawnMajordomoIfCan(bool bByPlayerEnter);
+
+        std::string m_strInstData;
+        uint32 m_auiEncounter[MAX_ENCOUNTER];
+};
+
+#endif
diff --git a/scripts/eastern_kingdoms/blackrock_spire/blackrock_spire.h b/scripts/eastern_kingdoms/blackrock_spire/blackrock_spire.h
deleted file mode 100644
index 5fce555..0000000
--- a/scripts/eastern_kingdoms/blackrock_spire/blackrock_spire.h
+++ /dev/null
@@ -1,143 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software licensed under GPL version 2
- * Please see the included DOCS/LICENSE.TXT for more information */
-
-#ifndef DEF_BLACKROCK_SPIRE_H
-#define DEF_BLACKROCK_SPIRE_H
-
-enum
-{
-    MAX_ENCOUNTER               = 5,
-    MAX_ROOMS                   = 7,
-
-    TYPE_ROOM_EVENT             = 1,
-    TYPE_EMBERSEER              = 2,
-    TYPE_FLAMEWREATH            = 3,                        // Only summon once per instance
-    TYPE_STADIUM                = 4,
-    TYPE_VALTHALAK              = 5,                        // Only summon once per instance
-
-    NPC_SCARSHIELD_INFILTRATOR  = 10299,
-    NPC_BLACKHAND_SUMMONER      = 9818,
-    NPC_BLACKHAND_VETERAN       = 9819,
-    NPC_PYROGUARD_EMBERSEER     = 9816,
-    NPC_BLACKHAND_INCARCERATOR  = 10316,
-    NPC_LORD_VICTOR_NEFARIUS    = 10162,
-    NPC_REND_BLACKHAND          = 10429,
-    NPC_GYTH                    = 10339,
-    NPC_DRAKKISATH              = 10363,
-    NPC_CHROMATIC_WHELP         = 10442,                    // related to Gyth arena event
-    NPC_CHROMATIC_DRAGON        = 10447,
-    NPC_BLACKHAND_HANDLER       = 10742,
-
-    // Doors
-    GO_EMBERSEER_IN             = 175244,
-    GO_DOORS                    = 175705,
-    GO_EMBERSEER_OUT            = 175153,
-    GO_GYTH_ENTRY_DOOR          = 164726,
-    GO_GYTH_COMBAT_DOOR         = 175185,
-    GO_GYTH_EXIT_DOOR           = 175186,
-    GO_DRAKKISATH_DOOR_1        = 175946,
-    GO_DRAKKISATH_DOOR_2        = 175947,
-
-    GO_ROOM_7_RUNE              = 175194,
-    GO_ROOM_3_RUNE              = 175195,
-    GO_ROOM_6_RUNE              = 175196,
-    GO_ROOM_1_RUNE              = 175197,
-    GO_ROOM_5_RUNE              = 175198,
-    GO_ROOM_2_RUNE              = 175199,
-    GO_ROOM_4_RUNE              = 175200,
-
-    GO_ROOKERY_EGG              = 175124,
-
-    GO_EMBERSEER_RUNE_1         = 175266,
-    GO_EMBERSEER_RUNE_2         = 175267,
-    GO_EMBERSEER_RUNE_3         = 175268,
-    GO_EMBERSEER_RUNE_4         = 175269,
-    GO_EMBERSEER_RUNE_5         = 175270,
-    GO_EMBERSEER_RUNE_6         = 175271,
-    GO_EMBERSEER_RUNE_7         = 175272,
-
-    MAX_STADIUM_WAVES           = 7,
-    MAX_STADIUM_MOBS_PER_WAVE   = 5,
-
-    FACTION_BLACK_DRAGON        = 103
-};
-
-struct SpawnLocation
-{
-    float m_fX, m_fY, m_fZ, m_fO;
-};
-
-static const SpawnLocation aStadiumLocs[7] =
-{
-    {210.00f, -420.30f, 110.94f, 3.14f},                    // dragons summon location
-    {210.14f, -397.54f, 111.1f},                            // Gyth summon location
-    {163.62f, -420.33f, 110.47f},                           // center of the stadium location (for movement)
-    {164.63f, -444.04f, 121.97f, 3.22f},                    // Lord Nefarius summon position
-    {161.01f, -443.73f, 121.97f, 6.26f},                    // Rend summon position
-    {164.64f, -443.30f, 121.97f, 1.61f},                    // Nefarius move position
-    {165.74f, -466.46f, 116.80f},                           // Rend move position
-};
-
-// Stadium event description
-static const uint32 aStadiumEventNpcs[MAX_STADIUM_WAVES][5] =
-{
-    {NPC_CHROMATIC_WHELP, NPC_CHROMATIC_WHELP, NPC_CHROMATIC_WHELP, NPC_CHROMATIC_DRAGON, 0},
-    {NPC_CHROMATIC_WHELP, NPC_CHROMATIC_WHELP, NPC_CHROMATIC_WHELP, NPC_CHROMATIC_DRAGON, 0},
-    {NPC_CHROMATIC_WHELP, NPC_CHROMATIC_WHELP, NPC_CHROMATIC_DRAGON, NPC_BLACKHAND_HANDLER, 0},
-    {NPC_CHROMATIC_WHELP, NPC_CHROMATIC_WHELP, NPC_CHROMATIC_DRAGON, NPC_BLACKHAND_HANDLER, 0},
-    {NPC_CHROMATIC_WHELP, NPC_CHROMATIC_WHELP, NPC_CHROMATIC_WHELP, NPC_CHROMATIC_DRAGON, NPC_BLACKHAND_HANDLER},
-    {NPC_CHROMATIC_WHELP, NPC_CHROMATIC_WHELP, NPC_CHROMATIC_DRAGON, NPC_CHROMATIC_DRAGON, NPC_BLACKHAND_HANDLER},
-    {NPC_CHROMATIC_WHELP, NPC_CHROMATIC_WHELP, NPC_CHROMATIC_DRAGON, NPC_CHROMATIC_DRAGON, NPC_BLACKHAND_HANDLER},
-};
-
-class MANGOS_DLL_DECL instance_blackrock_spire : public ScriptedInstance, private DialogueHelper
-{
-    public:
-        instance_blackrock_spire(Map* pMap);
-        ~instance_blackrock_spire() {}
-
-        void Initialize();
-
-        void OnObjectCreate(GameObject* pGo);
-        void OnCreatureCreate(Creature* pCreature);
-        void OnCreatureDeath(Creature* pCreature);
-        void OnCreatureEvade(Creature* pCreature);
-        void OnCreatureEnterCombat(Creature* pCreature);
-
-        void SetData(uint32 uiType, uint32 uiData);
-        void SetData64(uint32 uiType, uint64 uiData);
-        uint32 GetData(uint32 uiType);
-
-        const char* Save() { return m_strInstData.c_str(); }
-        void Load(const char* chrIn);
-
-        void DoUseEmberseerRunes(bool bReset = false);
-        void DoProcessEmberseerEvent();
-
-        void DoSortRoomEventMobs();
-        void GetIncarceratorGUIDList(GuidList &lList) { lList = m_lIncarceratorGUIDList; }
-        void GetRookeryEggGUIDList(GuidList &lList) { lList = m_lRookeryEggGUIDList; }
-
-        void Update(uint32 uiDiff);
-
-    private:
-        void JustDidDialogueStep(int32 iEntry);
-        void DoSendNextStadiumWave();
-
-        uint32 m_auiEncounter[MAX_ENCOUNTER];
-        std::string m_strInstData;
-
-        uint32 m_uiStadiumEventTimer;
-        uint8 m_uiStadiumWaves;
-        uint8 m_uiStadiumMobsAlive;
-
-        ObjectGuid m_aRoomRuneGuid[MAX_ROOMS];
-        GuidList m_alRoomEventMobGUIDSorted[MAX_ROOMS];
-        GuidList m_lRoomEventMobGUIDList;
-        GuidList m_lIncarceratorGUIDList;
-        GuidList m_lRookeryEggGUIDList;
-        GuidList m_lEmberseerRunesGUIDList;
-};
-
-#endif
diff --git a/scripts/eastern_kingdoms/blackrock_spire/boss_drakkisath.cpp b/scripts/eastern_kingdoms/blackrock_spire/boss_drakkisath.cpp
deleted file mode 100644
index 6f88137..0000000
--- a/scripts/eastern_kingdoms/blackrock_spire/boss_drakkisath.cpp
+++ /dev/null
@@ -1,110 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Drakkisath
-SD%Complete: 100
-SDComment:
-SDCategory: Blackrock Spire
-EndScriptData */
-
-#include "precompiled.h"
-
-enum
-{
-    SPELL_FIRENOVA       = 23462,
-    SPELL_CLEAVE         = 20691,
-    SPELL_CONFLIGURATION = 16805,
-    SPELL_THUNDERCLAP    = 15548                            //Not sure if right ID. 23931 would be a harder possibility.
-};
-
-struct MANGOS_DLL_DECL boss_drakkisathAI : public ScriptedAI
-{
-    boss_drakkisathAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
-
-    uint32 m_uiFireNovaTimer;
-    uint32 m_uiCleaveTimer;
-    uint32 m_uiConfligurationTimer;
-    uint32 m_uiThunderclapTimer;
-
-    void Reset()
-    {
-        m_uiFireNovaTimer       = 6000;
-        m_uiCleaveTimer         = 8000;
-        m_uiConfligurationTimer = 15000;
-        m_uiThunderclapTimer    = 17000;
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        // Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // FireNova
-        if (m_uiFireNovaTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_FIRENOVA);
-            m_uiFireNovaTimer = 10000;
-        }
-        else
-            m_uiFireNovaTimer -= uiDiff;
-
-        // Cleave
-        if (m_uiCleaveTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(), SPELL_CLEAVE);
-            m_uiCleaveTimer = 8000;
-        }
-        else
-            m_uiCleaveTimer -= uiDiff;
-
-        // Confliguration
-        if (m_uiConfligurationTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(), SPELL_CONFLIGURATION, 0, m_creature->getVictim()->GetObjectGuid());
-            m_uiConfligurationTimer = 18000;
-        }
-        else
-            m_uiConfligurationTimer -= uiDiff;
-
-        // Thunderclap
-        if (m_uiThunderclapTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_THUNDERCLAP);
-            m_uiThunderclapTimer = 20000;
-        }
-        else
-            m_uiThunderclapTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_drakkisath(Creature* pCreature)
-{
-    return new boss_drakkisathAI(pCreature);
-}
-
-void AddSC_boss_drakkisath()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_drakkisath";
-    pNewScript->GetAI = &GetAI_boss_drakkisath;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_spire/boss_gyth.cpp b/scripts/eastern_kingdoms/blackrock_spire/boss_gyth.cpp
deleted file mode 100644
index 7e7c4ec..0000000
--- a/scripts/eastern_kingdoms/blackrock_spire/boss_gyth.cpp
+++ /dev/null
@@ -1,148 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Gyth
-SD%Complete: 100
-SDComment: Timers may need adjustments
-SDCategory: Blackrock Spire
-EndScriptData */
-
-#include "precompiled.h"
-#include "blackrock_spire.h"
-
-enum
-{
-    SAY_NEFARIUS_BUFF_GYTH  = -1229017,
-    EMOTE_KNOCKED_OFF       = -1229019,
-
-    SPELL_CHROMATIC_CHAOS   = 16337,                // casted by Nefarius at 50%
-    SPELL_REND_MOUNTS       = 16167,
-    SPELL_SUMMON_REND       = 16328,
-    SPELL_CORROSIVE_ACID    = 16359,
-    SPELL_FREEZE            = 16350,
-    SPELL_FLAME_BREATH      = 16390,
-    SPELL_KNOCK_AWAY        = 10101,
-};
-
-struct MANGOS_DLL_DECL boss_gythAI : public ScriptedAI
-{
-    boss_gythAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (instance_blackrock_spire*) pCreature->GetInstanceData();
-        Reset();
-    }
-
-    instance_blackrock_spire* m_pInstance;
-
-    uint32 uiCorrosiveAcidTimer;
-    uint32 uiFreezeTimer;
-    uint32 uiFlamebreathTimer;
-
-    bool m_bSummonedRend;
-    bool m_bHasChromaticChaos;
-
-    void Reset()
-    {
-        uiCorrosiveAcidTimer = 8000;
-        uiFreezeTimer        = 11000;
-        uiFlamebreathTimer   = 4000;
-        m_bSummonedRend      = false;
-        m_bHasChromaticChaos = false;
-
-        DoCastSpellIfCan(m_creature, SPELL_REND_MOUNTS);
-    }
-
-    void JustSummoned(Creature* pSummoned)
-    {
-        DoScriptText(EMOTE_KNOCKED_OFF, pSummoned);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        //Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Chromatic Chaos at 50%
-        if (!m_bHasChromaticChaos && m_creature->GetHealthPercent() < 50.0f)
-        {
-            if (m_pInstance)
-            {
-                if (Creature* pNefarius = m_pInstance->GetSingleCreatureFromStorage(NPC_LORD_VICTOR_NEFARIUS))
-                {
-                    pNefarius->CastSpell(m_creature, SPELL_CHROMATIC_CHAOS, true);
-                    DoScriptText(SAY_NEFARIUS_BUFF_GYTH, pNefarius);
-                    m_bHasChromaticChaos = true;
-                }
-            }
-        }
-
-        // CorrosiveAcid_Timer
-        if (uiCorrosiveAcidTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_CORROSIVE_ACID) == CAST_OK)
-                uiCorrosiveAcidTimer = 7000;
-        }
-        else
-            uiCorrosiveAcidTimer -= uiDiff;
-
-        // Freeze_Timer
-        if (uiFreezeTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_FREEZE) == CAST_OK)
-                uiFreezeTimer = 16000;
-        }
-        else
-            uiFreezeTimer -= uiDiff;
-
-        // Flamebreath_Timer
-        if (uiFlamebreathTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_FLAME_BREATH) == CAST_OK)
-                uiFlamebreathTimer = 10500;
-        }
-        else
-            uiFlamebreathTimer -= uiDiff;
-
-        // Summon Rend
-        if (!m_bSummonedRend && m_creature->GetHealthPercent() < 11.0f)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_SUMMON_REND) == CAST_OK)
-            {
-                m_creature->RemoveAurasDueToSpell(SPELL_REND_MOUNTS);
-                m_bSummonedRend = true;
-            }
-        }
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_gyth(Creature* pCreature)
-{
-    return new boss_gythAI(pCreature);
-}
-
-void AddSC_boss_gyth()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_gyth";
-    pNewScript->GetAI = &GetAI_boss_gyth;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_spire/boss_halycon.cpp b/scripts/eastern_kingdoms/blackrock_spire/boss_halycon.cpp
deleted file mode 100644
index e40f262..0000000
--- a/scripts/eastern_kingdoms/blackrock_spire/boss_halycon.cpp
+++ /dev/null
@@ -1,92 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Halycon
-SD%Complete: 100
-SDComment:
-SDCategory: Blackrock Spire
-EndScriptData */
-
-#include "precompiled.h"
-
-#define SPELL_CROWDPUMMEL       10887
-#define SPELL_MIGHTYBLOW        14099
-
-#define ADD_1X                  -169.839203f
-#define ADD_1Y                  -324.961395f
-#define ADD_1Z                  64.401443f
-#define ADD_1O                  3.124724f
-
-struct MANGOS_DLL_DECL boss_halyconAI : public ScriptedAI
-{
-    boss_halyconAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
-
-    uint32 CrowdPummel_Timer;
-    uint32 MightyBlow_Timer;
-    bool Summoned;
-
-    void Reset()
-    {
-        CrowdPummel_Timer = 8000;
-        MightyBlow_Timer = 14000;
-        Summoned = false;
-    }
-
-    void UpdateAI(const uint32 diff)
-    {
-        //Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        //CrowdPummel_Timer
-        if (CrowdPummel_Timer < diff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(),SPELL_CROWDPUMMEL);
-            CrowdPummel_Timer = 14000;
-        }else CrowdPummel_Timer -= diff;
-
-        //MightyBlow_Timer
-        if (MightyBlow_Timer < diff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(),SPELL_MIGHTYBLOW);
-            MightyBlow_Timer = 10000;
-        }else MightyBlow_Timer -= diff;
-
-        //Summon Gizrul
-        if (!Summoned && m_creature->GetHealthPercent() < 25.0f)
-        {
-            m_creature->SummonCreature(10268,ADD_1X,ADD_1Y,ADD_1Z,ADD_1O,TEMPSUMMON_TIMED_DESPAWN,300000);
-            Summoned = true;
-        }
-
-        DoMeleeAttackIfReady();
-    }
-};
-CreatureAI* GetAI_boss_halycon(Creature* pCreature)
-{
-    return new boss_halyconAI(pCreature);
-}
-
-void AddSC_boss_halycon()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_halycon";
-    pNewScript->GetAI = &GetAI_boss_halycon;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_spire/boss_highlord_omokk.cpp b/scripts/eastern_kingdoms/blackrock_spire/boss_highlord_omokk.cpp
deleted file mode 100644
index 57d65d2..0000000
--- a/scripts/eastern_kingdoms/blackrock_spire/boss_highlord_omokk.cpp
+++ /dev/null
@@ -1,134 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Highlord_Omokk
-SD%Complete: 100
-SDComment:
-SDCategory: Blackrock Spire
-EndScriptData */
-
-#include "precompiled.h"
-
-enum
-{
-    SPELL_WARSTOMP    = 24375,
-    SPELL_STRIKE      = 18368,
-    SPELL_REND        = 18106,
-    SPELL_SUNDERARMOR = 24317,
-    SPELL_KNOCKAWAY   = 20686,
-    SPELL_SLOW        = 22356
-};
-
-struct MANGOS_DLL_DECL boss_highlordomokkAI : public ScriptedAI
-{
-    boss_highlordomokkAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
-
-    uint32 m_uiWarStompTimer;
-    uint32 m_uiStrikeTimer;
-    uint32 m_uiRendTimer;
-    uint32 m_uiSunderArmorTimer;
-    uint32 m_uiKnockAwayTimer;
-    uint32 m_uiSlowTimer;
-
-    void Reset()
-    {
-        m_uiWarStompTimer    = 15000;
-        m_uiStrikeTimer      = 10000;
-        m_uiRendTimer        = 14000;
-        m_uiSunderArmorTimer = 2000;
-        m_uiKnockAwayTimer   = 18000;
-        m_uiSlowTimer        = 24000;
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        //Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // WarStomp
-        if (m_uiWarStompTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_WARSTOMP);
-            m_uiWarStompTimer = 14000;
-        }
-        else
-            m_uiWarStompTimer -= uiDiff;
-
-        // Strike
-        if (m_uiStrikeTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(), SPELL_STRIKE);
-            m_uiStrikeTimer = 10000;
-        }
-        else
-            m_uiStrikeTimer -= uiDiff;
-
-        // Rend
-        if (m_uiRendTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(), SPELL_REND);
-            m_uiRendTimer = 18000;
-        }
-        else
-            m_uiRendTimer -= uiDiff;
-
-        // Sunder Armor
-        if (m_uiSunderArmorTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(), SPELL_SUNDERARMOR);
-            m_uiSunderArmorTimer = 25000;
-        }
-        else
-            m_uiSunderArmorTimer -= uiDiff;
-
-        // KnockAway
-        if (m_uiKnockAwayTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_KNOCKAWAY);
-            m_uiKnockAwayTimer = 12000;
-        }
-        else
-            m_uiKnockAwayTimer -= uiDiff;
-
-        // Slow
-        if (m_uiSlowTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_SLOW);
-            m_uiSlowTimer = 18000;
-        }
-        else
-            m_uiSlowTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_highlordomokk(Creature* pCreature)
-{
-    return new boss_highlordomokkAI(pCreature);
-}
-
-void AddSC_boss_highlordomokk()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_highlord_omokk";
-    pNewScript->GetAI = &GetAI_boss_highlordomokk;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_spire/boss_mother_smolderweb.cpp b/scripts/eastern_kingdoms/blackrock_spire/boss_mother_smolderweb.cpp
deleted file mode 100644
index 25a1e66..0000000
--- a/scripts/eastern_kingdoms/blackrock_spire/boss_mother_smolderweb.cpp
+++ /dev/null
@@ -1,93 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Mother_Smolderweb
-SD%Complete: 100
-SDComment: Uncertain how often mother's milk is casted
-SDCategory: Blackrock Spire
-EndScriptData */
-
-#include "precompiled.h"
-
-enum
-{
-    SPELL_CRYSTALIZE              = 16104,
-    SPELL_MOTHERSMILK             = 16468,
-    SPELL_SUMMON_SPIRE_SPIDERLING = 16103
-};
-
-struct MANGOS_DLL_DECL boss_mothersmolderwebAI : public ScriptedAI
-{
-    boss_mothersmolderwebAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
-
-    uint32 m_uiCrystalizeTimer;
-    uint32 m_uiMothersMilkTimer;
-
-    void Reset()
-    {
-        m_uiCrystalizeTimer  = 20000;
-        m_uiMothersMilkTimer = 10000;
-    }
-
-    void DamageTaken(Unit* pDoneBy, uint32 &uiDamage)
-    {
-        if (m_creature->GetHealth() <= uiDamage)
-            DoCastSpellIfCan(m_creature, SPELL_SUMMON_SPIRE_SPIDERLING, CAST_TRIGGERED);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        // Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Crystalize
-        if (m_uiCrystalizeTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_CRYSTALIZE);
-            m_uiCrystalizeTimer = 15000;
-        }
-        else
-            m_uiCrystalizeTimer -= uiDiff;
-
-        // Mothers Milk
-        if (m_uiMothersMilkTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_MOTHERSMILK);
-            m_uiMothersMilkTimer = urand(5000, 12500);
-        }
-        else
-            m_uiMothersMilkTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_mothersmolderweb(Creature* pCreature)
-{
-    return new boss_mothersmolderwebAI(pCreature);
-}
-
-void AddSC_boss_mothersmolderweb()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_mother_smolderweb";
-    pNewScript->GetAI = &GetAI_boss_mothersmolderweb;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_spire/boss_overlord_wyrmthalak.cpp b/scripts/eastern_kingdoms/blackrock_spire/boss_overlord_wyrmthalak.cpp
deleted file mode 100644
index fa82561..0000000
--- a/scripts/eastern_kingdoms/blackrock_spire/boss_overlord_wyrmthalak.cpp
+++ /dev/null
@@ -1,143 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Overlord_Wyrmthalak
-SD%Complete: 100
-SDComment:
-SDCategory: Blackrock Spire
-EndScriptData */
-
-#include "precompiled.h"
-
-enum
-{
-    SPELL_BLASTWAVE            = 11130,
-    SPELL_SHOUT                = 23511,
-    SPELL_CLEAVE               = 20691,
-    SPELL_KNOCKAWAY            = 20686,
-
-    NPC_SPIRESTONE_WARLORD     = 9216,
-    NPC_SMOLDERTHORN_BERSERKER = 9268
-
-};
-
-const float afLocations[2][4]=
-{
-    {-39.355381f, -513.456482f, 88.472046f, 4.679872f},
-    {-49.875881f, -511.896942f, 88.195160f, 4.613114f}
-};
-
-struct MANGOS_DLL_DECL boss_overlordwyrmthalakAI : public ScriptedAI
-{
-    boss_overlordwyrmthalakAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
-
-    uint32 m_uiBlastWaveTimer;
-    uint32 m_uiShoutTimer;
-    uint32 m_uiCleaveTimer;
-    uint32 m_uiKnockawayTimer;
-    bool m_bSummoned;
-
-    void Reset()
-    {
-        m_uiBlastWaveTimer = 20000;
-        m_uiShoutTimer     = 2000;
-        m_uiCleaveTimer    = 6000;
-        m_uiKnockawayTimer = 12000;
-        m_bSummoned = false;
-    }
-
-    void JustSummoned(Creature* pSummoned)
-    {
-        if (pSummoned->GetEntry() != NPC_SPIRESTONE_WARLORD && pSummoned->GetEntry() != NPC_SMOLDERTHORN_BERSERKER)
-            return;
-
-        if (m_creature->getVictim())
-        {
-            Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0);
-            pSummoned->AI()->AttackStart(pTarget ? pTarget : m_creature->getVictim());
-        }
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        // Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // BlastWave
-        if (m_uiBlastWaveTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_BLASTWAVE);
-            m_uiBlastWaveTimer = 20000;
-        }
-        else
-            m_uiBlastWaveTimer -= uiDiff;
-
-        // Shout
-        if (m_uiShoutTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_SHOUT);
-            m_uiShoutTimer = 10000;
-        }
-        else
-            m_uiShoutTimer -= uiDiff;
-
-        // Cleave
-        if (m_uiCleaveTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(), SPELL_CLEAVE);
-            m_uiCleaveTimer = 7000;
-        }
-        else
-            m_uiCleaveTimer -= uiDiff;
-
-        // Knockaway
-        if (m_uiKnockawayTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_KNOCKAWAY);
-            m_uiKnockawayTimer = 14000;
-        }
-        else
-            m_uiKnockawayTimer -= uiDiff;
-
-        // Summon two Beserks
-        if (!m_bSummoned && m_creature->GetHealthPercent() < 51.0f)
-        {
-            m_creature->SummonCreature(NPC_SPIRESTONE_WARLORD, afLocations[0][0], afLocations[0][1], afLocations[0][2], afLocations[0][3], TEMPSUMMON_TIMED_DESPAWN, 300000);
-            m_creature->SummonCreature(NPC_SMOLDERTHORN_BERSERKER, afLocations[1][0], afLocations[1][1], afLocations[1][2], afLocations[1][3], TEMPSUMMON_TIMED_DESPAWN, 300000);
-
-            m_bSummoned = true;
-        }
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_overlordwyrmthalak(Creature* pCreature)
-{
-    return new boss_overlordwyrmthalakAI(pCreature);
-}
-
-void AddSC_boss_overlordwyrmthalak()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_overlord_wyrmthalak";
-    pNewScript->GetAI = &GetAI_boss_overlordwyrmthalak;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_spire/boss_pyroguard_emberseer.cpp b/scripts/eastern_kingdoms/blackrock_spire/boss_pyroguard_emberseer.cpp
deleted file mode 100644
index 8c78aef..0000000
--- a/scripts/eastern_kingdoms/blackrock_spire/boss_pyroguard_emberseer.cpp
+++ /dev/null
@@ -1,207 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Pyroguard_Emberseer
-SD%Complete: 90
-SDComment: Dummy spells used during the transformation may need further research
-SDCategory: Blackrock Spire
-EndScriptData */
-
-#include "precompiled.h"
-#include "blackrock_spire.h"
-
-enum
-{
-    // Intro emote/say
-    EMOTE_NEAR              = -1229001,
-    EMOTE_FULL              = -1229002,
-    SAY_FREE                = -1229003,
-
-    MAX_GROWING_STACKS      = 20,
-
-    // Intro spells
-    SPELL_ENCAGE_EMBERSEER  = 15281,                        // cast by Blackhand Incarcerator
-
-    SPELL_FIRE_SHIELD       = 13376,                        // not sure what's the purpose of this
-    SPELL_DESPAWN_EMBERSEER = 16078,                        // not sure what's the purpose of this
-    SPELL_FREEZE_ANIM       = 16245,                        // not sure what's the purpose of this
-    SPELL_FULL_STRENGHT     = 16047,
-    SPELL_GROWING           = 16049,                        // stacking aura
-    SPELL_BONUS_DAMAGE      = 16534,                        // triggered on full grow
-    SPELL_TRANSFORM         = 16052,
-
-    // Combat spells
-    SPELL_FIRENOVA          = 23462,
-    SPELL_FLAMEBUFFET       = 23341,
-    SPELL_PYROBLAST         = 20228                         // guesswork, but best fitting in spells-area, was 17274 (has mana cost)
-};
-
-struct MANGOS_DLL_DECL boss_pyroguard_emberseerAI : public ScriptedAI
-{
-    boss_pyroguard_emberseerAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (instance_blackrock_spire*) pCreature->GetInstanceData();
-        Reset();
-    }
-
-    instance_blackrock_spire* m_pInstance;
-
-    uint32 m_uiEncageTimer;
-    uint32 m_uiFireNovaTimer;
-    uint32 m_uiFlameBuffetTimer;
-    uint32 m_uiPyroBlastTimer;
-    uint8 m_uiGrowingStacks;
-
-    void Reset()
-    {
-        m_uiEncageTimer         = 10000;
-        m_uiFireNovaTimer       = 6000;
-        m_uiFlameBuffetTimer    = 3000;
-        m_uiPyroBlastTimer      = 14000;
-        m_uiGrowingStacks       = 0;
-
-        m_creature->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
-    }
-
-    void JustDied(Unit* pKiller)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_EMBERSEER, DONE);
-    }
-
-    void JustReachedHome()
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_EMBERSEER, FAIL);
-    }
-
-    // Wrapper to handle the transformation
-    void DoHandleEmberseerGrowing()
-    {
-        ++m_uiGrowingStacks;
-
-        if (m_uiGrowingStacks == MAX_GROWING_STACKS*0.5f)
-            DoScriptText(EMOTE_NEAR, m_creature);
-        else if (m_uiGrowingStacks == MAX_GROWING_STACKS)
-        {
-            DoScriptText(EMOTE_FULL, m_creature);
-            DoScriptText(SAY_FREE, m_creature);
-
-            // Note: the spell order needs further research
-            DoCastSpellIfCan(m_creature, SPELL_FULL_STRENGHT, CAST_TRIGGERED);
-            DoCastSpellIfCan(m_creature, SPELL_BONUS_DAMAGE, CAST_TRIGGERED);
-            DoCastSpellIfCan(m_creature, SPELL_TRANSFORM, CAST_TRIGGERED);
-
-            // activate all runes
-            if (m_pInstance)
-            {
-                m_pInstance->DoUseEmberseerRunes();
-                // Redundant check: if for some reason the event isn't set in progress until this point - avoid using the altar again when the boss is fully grown
-                m_pInstance->SetData(TYPE_EMBERSEER, IN_PROGRESS);
-            }
-
-            m_creature->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
-        }
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        // Cast Encage spell on OOC timer
-        if (m_uiEncageTimer)
-        {
-            if (m_uiEncageTimer <= uiDiff)
-            {
-                GuidList m_lIncarceratorsGuid;
-                m_pInstance->GetIncarceratorGUIDList(m_lIncarceratorsGuid);
-
-                for (GuidList::const_iterator itr = m_lIncarceratorsGuid.begin(); itr != m_lIncarceratorsGuid.end(); ++itr)
-                {
-                    if (Creature* pIncarcerator = m_creature->GetMap()->GetCreature(*itr))
-                        pIncarcerator->CastSpell(m_creature, SPELL_ENCAGE_EMBERSEER, false);
-                }
-
-                m_uiEncageTimer = 0;
-            }
-            else
-                m_uiEncageTimer -= uiDiff;
-        }
-
-        // Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // FireNova Timer
-        if (m_uiFireNovaTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_FIRENOVA) == CAST_OK)
-                m_uiFireNovaTimer = 6000;
-        }
-        else
-            m_uiFireNovaTimer -= uiDiff;
-
-        // FlameBuffet Timer
-        if (m_uiFlameBuffetTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_FLAMEBUFFET) == CAST_OK)
-                m_uiFlameBuffetTimer = 14000;
-        }
-        else
-            m_uiFlameBuffetTimer -= uiDiff;
-
-        // PyroBlast Timer
-        if (m_uiPyroBlastTimer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-            {
-                if (DoCastSpellIfCan(pTarget, SPELL_PYROBLAST) == CAST_OK)
-                    m_uiPyroBlastTimer = 15000;
-            }
-        }
-        else
-            m_uiPyroBlastTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_pyroguard_emberseer(Creature* pCreature)
-{
-    return new boss_pyroguard_emberseerAI(pCreature);
-}
-
-bool EffectDummyCreature_pyroguard_emberseer(Unit* pCaster, uint32 uiSpellId, SpellEffectIndex uiEffIndex, Creature* pCreatureTarget)
-{
-    //always check spellid and effectindex
-    if (uiSpellId == SPELL_GROWING && uiEffIndex == EFFECT_INDEX_0)
-    {
-        if (boss_pyroguard_emberseerAI* pEmberseerAI = dynamic_cast<boss_pyroguard_emberseerAI*>(pCreatureTarget->AI()))
-            pEmberseerAI->DoHandleEmberseerGrowing();
-    }
-
-    return false;
-}
-
-void AddSC_boss_pyroguard_emberseer()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_pyroguard_emberseer";
-    pNewScript->GetAI = &GetAI_boss_pyroguard_emberseer;
-    pNewScript->pEffectDummyNPC = &EffectDummyCreature_pyroguard_emberseer;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_spire/boss_quartermaster_zigris.cpp b/scripts/eastern_kingdoms/blackrock_spire/boss_quartermaster_zigris.cpp
deleted file mode 100644
index 25c8be0..0000000
--- a/scripts/eastern_kingdoms/blackrock_spire/boss_quartermaster_zigris.cpp
+++ /dev/null
@@ -1,90 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Quartmaster_Zigris
-SD%Complete: 100
-SDComment: Needs revision
-SDCategory: Blackrock Spire
-EndScriptData */
-
-#include "precompiled.h"
-
-enum
-{
-    SPELL_SHOOT          = 16496,
-    SPELL_STUNBOMB       = 16497,
-    SPELL_HEALING_POTION = 15504,
-    SPELL_HOOKEDNET      = 15609
-};
-
-struct MANGOS_DLL_DECL boss_quatermasterzigrisAI : public ScriptedAI
-{
-    boss_quatermasterzigrisAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
-
-    uint32 m_uiShootTimer;
-    uint32 m_uiStunBombTimer;
-    //uint32 HelingPotion_Timer;
-
-    void Reset()
-    {
-        m_uiShootTimer    = 1000;
-        m_uiStunBombTimer = 16000;
-        //HelingPotion_Timer = 25000;
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        // Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Shoot
-        if (m_uiShootTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(), SPELL_SHOOT);
-            m_uiShootTimer = 500;
-        }
-        else
-            m_uiShootTimer -= uiDiff;
-
-        // StunBomb
-        if (m_uiStunBombTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_STUNBOMB);
-            m_uiStunBombTimer = 14000;
-        }
-        else
-            m_uiStunBombTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_quatermasterzigris(Creature* pCreature)
-{
-    return new boss_quatermasterzigrisAI(pCreature);
-}
-
-void AddSC_boss_quatermasterzigris()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "quartermaster_zigris";
-    pNewScript->GetAI = &GetAI_boss_quatermasterzigris;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_spire/boss_rend_blackhand.cpp b/scripts/eastern_kingdoms/blackrock_spire/boss_rend_blackhand.cpp
deleted file mode 100644
index be09d19..0000000
--- a/scripts/eastern_kingdoms/blackrock_spire/boss_rend_blackhand.cpp
+++ /dev/null
@@ -1,98 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Rend_Blackhand
-SD%Complete: 100
-SDComment: Intro event NYI
-SDCategory: Blackrock Spire
-EndScriptData */
-
-#include "precompiled.h"
-
-enum
-{
-    SPELL_WHIRLWIND   = 26038,
-    SPELL_CLEAVE      = 20691,
-    SPELL_THUNDERCLAP = 23931                               //Not sure if he cast this spell
-};
-
-struct MANGOS_DLL_DECL boss_rend_blackhandAI : public ScriptedAI
-{
-    boss_rend_blackhandAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
-
-    uint32 m_uiWhirlWindTimer;
-    uint32 m_uiCleaveTimer;
-    uint32 m_uiThunderclapTimer;
-
-    void Reset()
-    {
-        m_uiWhirlWindTimer   = 20000;
-        m_uiCleaveTimer      = 5000;
-        m_uiThunderclapTimer = 9000;
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        // Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // WhirlWind
-        if (m_uiWhirlWindTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_WHIRLWIND);
-            m_uiWhirlWindTimer = 18000;
-        }
-        else
-            m_uiWhirlWindTimer -= uiDiff;
-
-        // Cleave
-        if (m_uiCleaveTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(), SPELL_CLEAVE);
-            m_uiCleaveTimer = 10000;
-        }
-        else
-            m_uiCleaveTimer -= uiDiff;
-
-        // Thunderclap
-        if (m_uiThunderclapTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_THUNDERCLAP);
-            m_uiThunderclapTimer = 16000;
-        }
-        else
-            m_uiThunderclapTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_rend_blackhand(Creature* pCreature)
-{
-    return new boss_rend_blackhandAI(pCreature);
-}
-
-void AddSC_boss_rend_blackhand()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_rend_blackhand";
-    pNewScript->GetAI = &GetAI_boss_rend_blackhand;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_spire/boss_shadow_hunter_voshgajin.cpp b/scripts/eastern_kingdoms/blackrock_spire/boss_shadow_hunter_voshgajin.cpp
deleted file mode 100644
index 1a9cd75..0000000
--- a/scripts/eastern_kingdoms/blackrock_spire/boss_shadow_hunter_voshgajin.cpp
+++ /dev/null
@@ -1,101 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Shadow_Hunter_Voshgajin
-SD%Complete: 100
-SDComment:
-SDCategory: Blackrock Spire
-EndScriptData */
-
-#include "precompiled.h"
-
-enum
-{
-    SPELL_CURSEOFBLOOD = 24673,
-    SPELL_HEX          = 16708,
-    SPELL_CLEAVE       = 20691
-};
-
-struct MANGOS_DLL_DECL boss_shadowvoshAI : public ScriptedAI
-{
-    boss_shadowvoshAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
-
-    uint32 m_uiCurseOfBloodTimer;
-    uint32 m_uiHexTimer;
-    uint32 m_uiCleaveTimer;
-
-    void Reset()
-    {
-        m_uiCurseOfBloodTimer = 2000;
-        m_uiHexTimer          = 8000;
-        m_uiCleaveTimer       = 14000;
-
-        //m_creature->CastSpell(m_creature,SPELL_ICEARMOR,true);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        // Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Curse Of Blood
-        if (m_uiCurseOfBloodTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_CURSEOFBLOOD);
-            m_uiCurseOfBloodTimer = 45000;
-        }
-        else
-            m_uiCurseOfBloodTimer -= uiDiff;
-
-        // Hex
-        if (m_uiHexTimer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-                DoCastSpellIfCan(pTarget, SPELL_HEX);
-            m_uiHexTimer = 15000;
-        }
-        else
-            m_uiHexTimer -= uiDiff;
-
-        // Cleave
-        if (m_uiCleaveTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(), SPELL_CLEAVE);
-            m_uiCleaveTimer = 7000;
-        }
-        else
-            m_uiCleaveTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_shadowvosh(Creature* pCreature)
-{
-    return new boss_shadowvoshAI(pCreature);
-}
-
-void AddSC_boss_shadowvosh()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_shadow_hunter_voshgajin";
-    pNewScript->GetAI = &GetAI_boss_shadowvosh;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_spire/boss_the_beast.cpp b/scripts/eastern_kingdoms/blackrock_spire/boss_the_beast.cpp
deleted file mode 100644
index 6329f87..0000000
--- a/scripts/eastern_kingdoms/blackrock_spire/boss_the_beast.cpp
+++ /dev/null
@@ -1,100 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_The_Best
-SD%Complete: 100
-SDComment:
-SDCategory: Blackrock Spire
-EndScriptData */
-
-#include "precompiled.h"
-
-enum
-{
-    SPELL_FLAMEBREAK     = 16785,
-    SPELL_IMMOLATE       = 20294,
-    SPELL_TERRIFYINGROAR = 14100
-};
-
-struct MANGOS_DLL_DECL boss_thebeastAI : public ScriptedAI
-{
-    boss_thebeastAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
-
-    uint32 m_uiFlamebreakTimer;
-    uint32 m_uiImmolateTimer;
-    uint32 m_uiTerrifyingRoarTimer;
-
-    void Reset()
-    {
-        m_uiFlamebreakTimer     = 12000;
-        m_uiImmolateTimer       = 3000;
-        m_uiTerrifyingRoarTimer = 23000;
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        // Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Flamebreak
-        if (m_uiFlamebreakTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_FLAMEBREAK);
-            m_uiFlamebreakTimer = 10000;
-        }
-        else
-            m_uiFlamebreakTimer -= uiDiff;
-
-        // Immolate
-        if (m_uiImmolateTimer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-                DoCastSpellIfCan(pTarget, SPELL_IMMOLATE);
-
-            m_uiImmolateTimer = 8000;
-        }
-        else
-            m_uiImmolateTimer -= uiDiff;
-
-        // Terrifying Roar
-        if (m_uiTerrifyingRoarTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_TERRIFYINGROAR);
-            m_uiTerrifyingRoarTimer = 20000;
-        }
-        else
-            m_uiTerrifyingRoarTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_thebeast(Creature* pCreature)
-{
-    return new boss_thebeastAI(pCreature);
-}
-
-void AddSC_boss_thebeast()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_the_beast";
-    pNewScript->GetAI = &GetAI_boss_thebeast;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_spire/boss_warmaster_voone.cpp b/scripts/eastern_kingdoms/blackrock_spire/boss_warmaster_voone.cpp
deleted file mode 100644
index a6728b6..0000000
--- a/scripts/eastern_kingdoms/blackrock_spire/boss_warmaster_voone.cpp
+++ /dev/null
@@ -1,119 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Warmaster_Voone
-SD%Complete: 100
-SDComment:
-SDCategory: Blackrock Spire
-EndScriptData */
-
-#include "precompiled.h"
-
-#define SPELL_SNAPKICK          15618
-#define SPELL_CLEAVE            15284
-#define SPELL_UPPERCUT          10966
-#define SPELL_MORTALSTRIKE      15708
-#define SPELL_PUMMEL            15615
-#define SPELL_THROWAXE          16075
-
-struct MANGOS_DLL_DECL boss_warmastervooneAI : public ScriptedAI
-{
-    boss_warmastervooneAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
-
-    uint32 Snapkick_Timer;
-    uint32 Cleave_Timer;
-    uint32 Uppercut_Timer;
-    uint32 MortalStrike_Timer;
-    uint32 Pummel_Timer;
-    uint32 ThrowAxe_Timer;
-
-    void Reset()
-    {
-        Snapkick_Timer = 8000;
-        Cleave_Timer = 14000;
-        Uppercut_Timer = 20000;
-        MortalStrike_Timer = 12000;
-        Pummel_Timer = 32000;
-        ThrowAxe_Timer = 1000;
-    }
-
-    void UpdateAI(const uint32 diff)
-    {
-        //Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        //Snapkick_Timer
-        if (Snapkick_Timer < diff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(),SPELL_SNAPKICK);
-            Snapkick_Timer = 6000;
-        }else Snapkick_Timer -= diff;
-
-        //Cleave_Timer
-        if (Cleave_Timer < diff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(),SPELL_CLEAVE);
-            Cleave_Timer = 12000;
-        }else Cleave_Timer -= diff;
-
-        //Uppercut_Timer
-        if (Uppercut_Timer < diff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(),SPELL_UPPERCUT);
-            Uppercut_Timer = 14000;
-        }else Uppercut_Timer -= diff;
-
-        //MortalStrike_Timer
-        if (MortalStrike_Timer < diff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(),SPELL_MORTALSTRIKE);
-            MortalStrike_Timer = 10000;
-        }else MortalStrike_Timer -= diff;
-
-        //Pummel_Timer
-        if (Pummel_Timer < diff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(),SPELL_PUMMEL);
-            Pummel_Timer = 16000;
-        }else Pummel_Timer -= diff;
-
-        //ThrowAxe_Timer
-        if (ThrowAxe_Timer < diff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(),SPELL_THROWAXE);
-            ThrowAxe_Timer = 8000;
-        }else ThrowAxe_Timer -= diff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_warmastervoone(Creature* pCreature)
-{
-    return new boss_warmastervooneAI(pCreature);
-}
-
-void AddSC_boss_warmastervoone()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_warmaster_voone";
-    pNewScript->GetAI = &GetAI_boss_warmastervoone;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackrock_spire/instance_blackrock_spire.cpp b/scripts/eastern_kingdoms/blackrock_spire/instance_blackrock_spire.cpp
deleted file mode 100644
index 96db488..0000000
--- a/scripts/eastern_kingdoms/blackrock_spire/instance_blackrock_spire.cpp
+++ /dev/null
@@ -1,619 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: instance_blackrock_spire
-SD%Complete: 75
-SDComment: The Stadium event is missing some yells. Seal of Ascension related event NYI
-SDCategory: Blackrock Spire
-EndScriptData */
-
-#include "precompiled.h"
-#include "blackrock_spire.h"
-
-enum
-{
-    AREATRIGGER_ENTER_UBRS      = 2046,
-    AREATRIGGER_STADIUM         = 2026,
-
-    // Arena event dialogue - handled by instance
-    SAY_NEFARIUS_INTRO_1        = -1229004,
-    SAY_NEFARIUS_INTRO_2        = -1229005,
-    SAY_NEFARIUS_ATTACK_1       = -1229006,
-    SAY_REND_JOIN               = -1229007,
-    SAY_NEFARIUS_ATTACK_2       = -1229008,
-    SAY_NEFARIUS_ATTACK_3       = -1229009,
-    SAY_NEFARIUS_ATTACK_4       = -1229010,
-    SAY_REND_LOSE_1             = -1229011,
-    SAY_REND_LOSE_2             = -1229012,
-    SAY_NEFARIUS_LOSE_3         = -1229013,
-    SAY_NEFARIUS_LOSE_4         = -1229014,
-    SAY_REND_ATTACK             = -1229015,
-    SAY_NEFARIUS_WARCHIEF       = -1229016,
-    SAY_NEFARIUS_VICTORY        = -1229018,
-
-    // Emberseer event
-    EMOTE_BEGIN                 = -1229000,
-
-    SPELL_EMBERSEER_GROWING     = 16048,
-};
-
-/* Areatrigger
-1470 Instance Entry
-1628 LBRS, between Spiders and Ogres
-1946 LBRS, ubrs pre-quest giver (1)
-1986 LBRS, ubrs pre-quest giver (2)
-1987 LBRS, ubrs pre-quest giver (3)
-2026 UBRS, stadium event trigger
-2046 UBRS, way to upper
-2066 UBRS, The Beast - Exit (to the dark chamber)
-2067 UBRS, The Beast - Entry
-2068 LBRS, fall out of map
-3726 UBRS, entrance to BWL
-*/
-
-static const DialogueEntry aStadiumDialogue[] =
-{
-    {NPC_LORD_VICTOR_NEFARIUS,  0,                          1000},
-    {SAY_NEFARIUS_INTRO_1,      NPC_LORD_VICTOR_NEFARIUS,   7000},
-    {SAY_NEFARIUS_INTRO_2,      NPC_LORD_VICTOR_NEFARIUS,   5000},
-    {NPC_BLACKHAND_HANDLER,     0,                          0},
-    {SAY_NEFARIUS_LOSE_4,       NPC_LORD_VICTOR_NEFARIUS,   3000},
-    {SAY_REND_ATTACK,           NPC_REND_BLACKHAND,         2000},
-    {SAY_NEFARIUS_WARCHIEF,     NPC_LORD_VICTOR_NEFARIUS,   0},
-    {SAY_NEFARIUS_VICTORY,      NPC_LORD_VICTOR_NEFARIUS,   5000},
-    {NPC_REND_BLACKHAND,        0,                          0},
-    {0, 0, 0},
-};
-
-instance_blackrock_spire::instance_blackrock_spire(Map* pMap) : ScriptedInstance(pMap), DialogueHelper(aStadiumDialogue),
-    m_uiStadiumEventTimer(0),
-    m_uiStadiumMobsAlive(0),
-    m_uiStadiumWaves(0)
-{
-    Initialize();
-}
-
-void instance_blackrock_spire::Initialize()
-{
-    memset(&m_auiEncounter, 0, sizeof(m_auiEncounter));
-    memset(&m_aRoomRuneGuid, 0, sizeof(m_aRoomRuneGuid));
-    InitializeDialogueHelper(this);
-}
-
-void instance_blackrock_spire::OnObjectCreate(GameObject* pGo)
-{
-    switch(pGo->GetEntry())
-    {
-        case GO_EMBERSEER_IN:
-            if (GetData(TYPE_ROOM_EVENT) == DONE)
-                pGo->SetGoState(GO_STATE_ACTIVE);
-            break;
-        case GO_DOORS:
-            break;
-        case GO_EMBERSEER_OUT:
-            if (GetData(TYPE_EMBERSEER) == DONE)
-                pGo->SetGoState(GO_STATE_ACTIVE);
-            break;
-        case GO_GYTH_ENTRY_DOOR:
-        case GO_GYTH_COMBAT_DOOR:
-        case GO_DRAKKISATH_DOOR_1:
-        case GO_DRAKKISATH_DOOR_2:
-            break;
-        case GO_GYTH_EXIT_DOOR:
-            if (GetData(TYPE_STADIUM) == DONE)
-                pGo->SetGoState(GO_STATE_ACTIVE);
-            break;
-
-        case GO_ROOM_1_RUNE: m_aRoomRuneGuid[0] = pGo->GetObjectGuid(); return;
-        case GO_ROOM_2_RUNE: m_aRoomRuneGuid[1] = pGo->GetObjectGuid(); return;
-        case GO_ROOM_3_RUNE: m_aRoomRuneGuid[2] = pGo->GetObjectGuid(); return;
-        case GO_ROOM_4_RUNE: m_aRoomRuneGuid[3] = pGo->GetObjectGuid(); return;
-        case GO_ROOM_5_RUNE: m_aRoomRuneGuid[4] = pGo->GetObjectGuid(); return;
-        case GO_ROOM_6_RUNE: m_aRoomRuneGuid[5] = pGo->GetObjectGuid(); return;
-        case GO_ROOM_7_RUNE: m_aRoomRuneGuid[6] = pGo->GetObjectGuid(); return;
-
-        case GO_ROOKERY_EGG: m_lRookeryEggGUIDList.push_back(pGo->GetObjectGuid());   return;
-
-        case GO_EMBERSEER_RUNE_1:
-        case GO_EMBERSEER_RUNE_2:
-        case GO_EMBERSEER_RUNE_3:
-        case GO_EMBERSEER_RUNE_4:
-        case GO_EMBERSEER_RUNE_5:
-        case GO_EMBERSEER_RUNE_6:
-        case GO_EMBERSEER_RUNE_7:
-            m_lEmberseerRunesGUIDList.push_back(pGo->GetObjectGuid());
-            return;
-
-        default:
-            return;
-    }
-    m_mGoEntryGuidStore[pGo->GetEntry()] = pGo->GetObjectGuid();
-}
-
-void instance_blackrock_spire::OnCreatureCreate(Creature* pCreature)
-{
-    switch(pCreature->GetEntry())
-    {
-        case NPC_PYROGUARD_EMBERSEER:
-        case NPC_LORD_VICTOR_NEFARIUS:
-        case NPC_GYTH:
-        case NPC_REND_BLACKHAND:
-        case NPC_SCARSHIELD_INFILTRATOR:
-            m_mNpcEntryGuidStore[pCreature->GetEntry()] = pCreature->GetObjectGuid();
-            break;
-
-        case NPC_BLACKHAND_SUMMONER:
-        case NPC_BLACKHAND_VETERAN:      m_lRoomEventMobGUIDList.push_back(pCreature->GetObjectGuid()); break;
-        case NPC_BLACKHAND_INCARCERATOR: m_lIncarceratorGUIDList.push_back(pCreature->GetObjectGuid()); break;
-    }
-}
-
-void instance_blackrock_spire::SetData(uint32 uiType, uint32 uiData)
-{
-    switch(uiType)
-    {
-        case TYPE_ROOM_EVENT:
-            if (uiData == DONE)
-                DoUseDoorOrButton(GO_EMBERSEER_IN);
-            m_auiEncounter[0] = uiData;
-            break;
-        case TYPE_EMBERSEER:
-            // Don't set the same data twice
-            if (m_auiEncounter[1] == uiData)
-                break;
-            // Combat door
-            DoUseDoorOrButton(GO_DOORS);
-            // Respawn all incarcerators and reset the runes on FAIL
-            if (uiData == FAIL)
-            {
-                for (GuidList::const_iterator itr = m_lIncarceratorGUIDList.begin(); itr != m_lIncarceratorGUIDList.end(); ++itr)
-                {
-                    if (Creature* pIncarcerator = instance->GetCreature(*itr))
-                    {
-                        if (!pIncarcerator->isAlive())
-                            pIncarcerator->Respawn();
-                        pIncarcerator->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_PASSIVE);
-                    }
-                }
-
-                DoUseEmberseerRunes(true);
-            }
-            else if (uiData == DONE)
-            {
-                DoUseEmberseerRunes();
-                DoUseDoorOrButton(GO_EMBERSEER_OUT);
-            }
-            m_auiEncounter[1] = uiData;
-            break;
-        case TYPE_FLAMEWREATH:
-            m_auiEncounter[2] = uiData;
-            break;
-        case TYPE_STADIUM:
-            // Don't set the same data twice
-            if (m_auiEncounter[3] == uiData)
-                break;
-            // Combat door
-            DoUseDoorOrButton(GO_GYTH_ENTRY_DOOR);
-            // Start event
-            if (uiData == IN_PROGRESS)
-                StartNextDialogueText(SAY_NEFARIUS_INTRO_1);
-            else if (uiData == DONE)
-                DoUseDoorOrButton(GO_GYTH_EXIT_DOOR);
-            else if (uiData == FAIL)
-            {
-                // Despawn Nefarius and Rend on fail (the others are despawned OnCreatureEvade())
-                if (Creature* pNefarius = GetSingleCreatureFromStorage(NPC_LORD_VICTOR_NEFARIUS))
-                    pNefarius->ForcedDespawn();
-                if (Creature* pRend = GetSingleCreatureFromStorage(NPC_REND_BLACKHAND))
-                    pRend->ForcedDespawn();
-                if (Creature* pGyth = GetSingleCreatureFromStorage(NPC_GYTH))
-                    pGyth->ForcedDespawn();
-
-                m_uiStadiumEventTimer = 0;
-                m_uiStadiumMobsAlive = 0;
-                m_uiStadiumWaves = 0;
-            }
-            m_auiEncounter[3] = uiData;
-            break;
-        case TYPE_VALTHALAK:
-            m_auiEncounter[4] = uiData;
-            break;
-    }
-
-    if (uiData == DONE)
-    {
-        OUT_SAVE_INST_DATA;
-
-        std::ostringstream saveStream;
-        saveStream << m_auiEncounter[0] << " " << m_auiEncounter[1] << " " << m_auiEncounter[2] << " " << m_auiEncounter[3] << " " << m_auiEncounter[4];
-
-        m_strInstData = saveStream.str();
-
-        SaveToDB();
-        OUT_SAVE_INST_DATA_COMPLETE;
-    }
-}
-
-void instance_blackrock_spire::SetData64(uint32 uiType, uint64 uiData)
-{
-    if (uiType == TYPE_ROOM_EVENT && GetData(TYPE_ROOM_EVENT) == IN_PROGRESS)
-    {
-        uint8 uiNotEmptyRoomsCount = 0;
-        for (uint8 i = 0; i < MAX_ROOMS; ++i)
-        {
-            if (m_aRoomRuneGuid[i])                       // This check is used, to ensure which runes still need processing
-            {
-                m_alRoomEventMobGUIDSorted[i].remove(ObjectGuid(uiData));
-                if (m_alRoomEventMobGUIDSorted[i].empty())
-                {
-                    DoUseDoorOrButton(m_aRoomRuneGuid[i]);
-                    m_aRoomRuneGuid[i].Clear();
-                }
-                else
-                    ++uiNotEmptyRoomsCount;                 // found an not empty room
-            }
-        }
-        if (!uiNotEmptyRoomsCount)
-            SetData(TYPE_ROOM_EVENT, DONE);
-    }
-}
-
-void instance_blackrock_spire::Load(const char* chrIn)
-{
-    if (!chrIn)
-    {
-        OUT_LOAD_INST_DATA_FAIL;
-        return;
-    }
-
-    OUT_LOAD_INST_DATA(chrIn);
-
-    std::istringstream loadStream(chrIn);
-    loadStream >> m_auiEncounter[0] >> m_auiEncounter[1] >> m_auiEncounter[2] >> m_auiEncounter[3] >> m_auiEncounter[4];
-
-    for(uint8 i = 0; i < MAX_ENCOUNTER; ++i)
-    {
-        if (m_auiEncounter[i] == IN_PROGRESS)
-            m_auiEncounter[i] = NOT_STARTED;
-    }
-
-    OUT_LOAD_INST_DATA_COMPLETE;
-}
-
-uint32 instance_blackrock_spire::GetData(uint32 uiType)
-{
-    switch(uiType)
-    {
-        case TYPE_ROOM_EVENT:   return m_auiEncounter[0];
-        case TYPE_EMBERSEER:    return m_auiEncounter[1];
-        case TYPE_FLAMEWREATH:  return m_auiEncounter[2];
-        case TYPE_STADIUM:      return m_auiEncounter[3];
-        case TYPE_VALTHALAK:    return m_auiEncounter[4];
-    }
-    return 0;
-}
-
-void instance_blackrock_spire::DoSortRoomEventMobs()
-{
-    if (GetData(TYPE_ROOM_EVENT) != NOT_STARTED)
-        return;
-
-    for (uint8 i = 0; i < MAX_ROOMS; ++i)
-    {
-        if (GameObject* pRune = instance->GetGameObject(m_aRoomRuneGuid[i]))
-        {
-            for (GuidList::const_iterator itr = m_lRoomEventMobGUIDList.begin(); itr != m_lRoomEventMobGUIDList.end(); ++itr)
-            {
-                Creature* pCreature = instance->GetCreature(*itr);
-                if (pCreature && pCreature->isAlive() && pCreature->GetDistance(pRune) < 10.0f)
-                    m_alRoomEventMobGUIDSorted[i].push_back(*itr);
-            }
-        }
-    }
-
-    SetData(TYPE_ROOM_EVENT, IN_PROGRESS);
-}
-
-void instance_blackrock_spire::OnCreatureDeath(Creature* pCreature)
-{
-    switch (pCreature->GetEntry())
-    {
-        case NPC_DRAKKISATH:
-            // Just open the doors, don't save anything because it's the last boss
-            DoUseDoorOrButton(GO_DRAKKISATH_DOOR_1);
-            DoUseDoorOrButton(GO_DRAKKISATH_DOOR_2);
-            break;
-        case NPC_CHROMATIC_WHELP:
-        case NPC_CHROMATIC_DRAGON:
-        case NPC_BLACKHAND_HANDLER:
-            // check if it's summoned - some npcs with the same entry are already spawned in the instance
-            if (!pCreature->IsTemporarySummon())
-                break;
-            --m_uiStadiumMobsAlive;
-            if (m_uiStadiumMobsAlive == 0)
-                DoSendNextStadiumWave();
-            break;
-        case NPC_GYTH:
-        case NPC_REND_BLACKHAND:
-            --m_uiStadiumMobsAlive;
-            if (m_uiStadiumMobsAlive == 0)
-                StartNextDialogueText(SAY_NEFARIUS_VICTORY);
-            break;
-    }
-}
-
-void instance_blackrock_spire::OnCreatureEvade(Creature* pCreature)
-{
-    switch (pCreature->GetEntry())
-    {
-        // Emberseer should evade if the incarcerators evade
-        case NPC_BLACKHAND_INCARCERATOR:
-            if (Creature* pEmberseer = GetSingleCreatureFromStorage(NPC_PYROGUARD_EMBERSEER))
-                pEmberseer->AI()->EnterEvadeMode();
-            break;
-        case NPC_CHROMATIC_WHELP:
-        case NPC_CHROMATIC_DRAGON:
-        case NPC_BLACKHAND_HANDLER:
-        case NPC_GYTH:
-        case NPC_REND_BLACKHAND:
-            // check if it's summoned - some npcs with the same entry are already spawned in the instance
-            if (!pCreature->IsTemporarySummon())
-                break;
-            SetData(TYPE_STADIUM, FAIL);
-            pCreature->ForcedDespawn();
-            break;
-    }
-}
-
-void instance_blackrock_spire::OnCreatureEnterCombat(Creature* pCreature)
-{
-    switch (pCreature->GetEntry())
-    {
-        // Once one of the Incarcerators gets Aggro, the door should close
-        case NPC_BLACKHAND_INCARCERATOR:
-            SetData(TYPE_EMBERSEER, IN_PROGRESS);
-            break;
-    }
-}
-
-void instance_blackrock_spire::DoProcessEmberseerEvent()
-{
-    if (GetData(TYPE_EMBERSEER) == DONE || GetData(TYPE_EMBERSEER) == IN_PROGRESS)
-        return;
-
-    if (m_lIncarceratorGUIDList.empty())
-    {
-        error_log("SD2: Npc %u couldn't be found. Please check your DB content!", NPC_BLACKHAND_INCARCERATOR);
-        return;
-    }
-
-    // start to grow
-    if (Creature* pEmberseer = GetSingleCreatureFromStorage(NPC_PYROGUARD_EMBERSEER))
-    {
-        // If already casting, return
-        if (pEmberseer->HasAura(SPELL_EMBERSEER_GROWING))
-            return;
-
-        DoScriptText(EMOTE_BEGIN, pEmberseer);
-        pEmberseer->CastSpell(pEmberseer, SPELL_EMBERSEER_GROWING, true);
-    }
-
-    // remove the incarcerators flags and stop casting
-    for (GuidList::const_iterator itr = m_lIncarceratorGUIDList.begin(); itr != m_lIncarceratorGUIDList.end(); ++itr)
-    {
-        if (Creature* pCreature = instance->GetCreature(*itr))
-        {
-            if (pCreature->isAlive())
-            {
-                pCreature->InterruptNonMeleeSpells(false);
-                pCreature->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_PASSIVE);
-            }
-        }
-    }
-}
-
-void instance_blackrock_spire::DoUseEmberseerRunes(bool bReset)
-{
-    if (m_lEmberseerRunesGUIDList.empty())
-        return;
-
-    for (GuidList::const_iterator itr = m_lEmberseerRunesGUIDList.begin(); itr != m_lEmberseerRunesGUIDList.end(); itr++)
-    {
-        if (bReset)
-        {
-            if (GameObject* pRune = instance->GetGameObject(*itr))
-                pRune->ResetDoorOrButton();
-        }
-        else
-            DoUseDoorOrButton(*itr);
-    }
-}
-
-void instance_blackrock_spire::JustDidDialogueStep(int32 iEntry)
-{
-    switch (iEntry)
-    {
-        case NPC_BLACKHAND_HANDLER:
-            m_uiStadiumEventTimer = 1000;
-            // Move the two near the balcony
-            if (Creature* pRend = GetSingleCreatureFromStorage(NPC_REND_BLACKHAND))
-                pRend->SetFacingTo(aStadiumLocs[5].m_fO);
-            if (Creature* pNefarius = GetSingleCreatureFromStorage(NPC_LORD_VICTOR_NEFARIUS))
-                pNefarius->GetMotionMaster()->MovePoint(0, aStadiumLocs[5].m_fX, aStadiumLocs[5].m_fY, aStadiumLocs[5].m_fZ);
-            break;
-        case SAY_NEFARIUS_WARCHIEF:
-            // Prepare for Gyth - note: Nefarius should be moving around the balcony
-            if (Creature* pRend = GetSingleCreatureFromStorage(NPC_REND_BLACKHAND))
-            {
-                pRend->ForcedDespawn(5000);
-                pRend->SetWalk(false);
-                pRend->GetMotionMaster()->MovePoint(0, aStadiumLocs[6].m_fX, aStadiumLocs[6].m_fY, aStadiumLocs[6].m_fZ);
-            }
-            m_uiStadiumEventTimer = 30000;
-            break;
-        case SAY_NEFARIUS_VICTORY:
-            SetData(TYPE_STADIUM, DONE);
-            break;
-        case NPC_REND_BLACKHAND:
-            // Despawn Nefarius
-            if (Creature* pNefarius = GetSingleCreatureFromStorage(NPC_LORD_VICTOR_NEFARIUS))
-            {
-                pNefarius->ForcedDespawn(5000);
-                pNefarius->GetMotionMaster()->MovePoint(0, aStadiumLocs[6].m_fX, aStadiumLocs[6].m_fY, aStadiumLocs[6].m_fZ);
-            }
-            break;
-
-    }
-}
-
-void instance_blackrock_spire::DoSendNextStadiumWave()
-{
-    if (m_uiStadiumWaves < MAX_STADIUM_WAVES)
-    {
-         // Send current wave mobs
-        if (Creature* pNefarius = GetSingleCreatureFromStorage(NPC_LORD_VICTOR_NEFARIUS))
-        {
-            float fX, fY, fZ;
-            for (uint8 i = 0; i < MAX_STADIUM_MOBS_PER_WAVE; ++i)
-            {
-                if (aStadiumEventNpcs[m_uiStadiumWaves][i] == 0)
-                    continue;
-
-                pNefarius->GetRandomPoint(aStadiumLocs[0].m_fX, aStadiumLocs[0].m_fY, aStadiumLocs[0].m_fZ, 7.0f, fX, fY, fZ);
-                fX = std::min(aStadiumLocs[0].m_fX, fX);            // Halfcircle - suits better the rectangular form
-                if (Creature* pTemp = pNefarius->SummonCreature(aStadiumEventNpcs[m_uiStadiumWaves][i], fX, fY, fZ, 0.0f, TEMPSUMMON_DEAD_DESPAWN, 0))
-                {
-                    // Get some point in the center of the stadium
-                    pTemp->GetRandomPoint(aStadiumLocs[2].m_fX, aStadiumLocs[2].m_fY, aStadiumLocs[2].m_fZ, 5.0f, fX, fY, fZ);
-                    fX = std::min(aStadiumLocs[2].m_fX, fX);        // Halfcircle - suits better the rectangular form
-
-                    pTemp->GetMotionMaster()->MovePoint(0, fX, fY, fZ);
-                    ++m_uiStadiumMobsAlive;
-                }
-            }
-        }
-
-        DoUseDoorOrButton(GO_GYTH_COMBAT_DOOR);
-    }
-    // All waves are cleared - start Gyth intro
-    else if (m_uiStadiumWaves == MAX_STADIUM_WAVES)
-        StartNextDialogueText(SAY_NEFARIUS_LOSE_4);
-    else
-    {
-       // Send Gyth
-        if (Creature* pNefarius = GetSingleCreatureFromStorage(NPC_LORD_VICTOR_NEFARIUS))
-        {
-            if (Creature* pTemp = pNefarius->SummonCreature(NPC_GYTH, aStadiumLocs[1].m_fX, aStadiumLocs[1].m_fY, aStadiumLocs[1].m_fZ, 0.0f, TEMPSUMMON_DEAD_DESPAWN, 0))
-                pTemp->GetMotionMaster()->MovePoint(0, aStadiumLocs[2].m_fX, aStadiumLocs[2].m_fY, aStadiumLocs[2].m_fZ);
-        }
-
-        // Set this to 2, because Rend will be summoned later during the fight
-        m_uiStadiumMobsAlive = 2;
-
-        DoUseDoorOrButton(GO_GYTH_COMBAT_DOOR);
-    }
-
-    ++m_uiStadiumWaves;
-
-    // Stop the timer when all the waves have been sent
-    if (m_uiStadiumWaves >= MAX_STADIUM_WAVES)
-        m_uiStadiumEventTimer = 0;
-    else
-        m_uiStadiumEventTimer = 60000;
-}
-
-void instance_blackrock_spire::Update(uint32 uiDiff)
-{
-    DialogueUpdate(uiDiff);
-
-    if (m_uiStadiumEventTimer)
-    {
-        if (m_uiStadiumEventTimer <= uiDiff)
-            DoSendNextStadiumWave();
-        else
-            m_uiStadiumEventTimer -= uiDiff;
-    }
-}
-
-InstanceData* GetInstanceData_instance_blackrock_spire(Map* pMap)
-{
-    return new instance_blackrock_spire(pMap);
-}
-
-bool AreaTrigger_at_blackrock_spire(Player* pPlayer, AreaTriggerEntry const* pAt)
-{
-    if (!pPlayer->isAlive() || pPlayer->isGameMaster())
-        return false;
-
-    switch (pAt->id)
-    {
-        case AREATRIGGER_ENTER_UBRS:
-            if (instance_blackrock_spire* pInstance = (instance_blackrock_spire*) pPlayer->GetInstanceData())
-                pInstance->DoSortRoomEventMobs();
-            break;
-        case AREATRIGGER_STADIUM:
-            if (instance_blackrock_spire* pInstance = (instance_blackrock_spire*) pPlayer->GetInstanceData())
-            {
-                if (pInstance->GetData(TYPE_STADIUM) == IN_PROGRESS || pInstance->GetData(TYPE_STADIUM) == DONE)
-                    return false;
-
-                // Summon Nefarius and Rend for the dialogue event
-                // Note: Nefarius and Rend need to be hostile and not attackable
-                if (Creature* pNefarius = pPlayer->SummonCreature(NPC_LORD_VICTOR_NEFARIUS, aStadiumLocs[3].m_fX, aStadiumLocs[3].m_fY, aStadiumLocs[3].m_fZ, aStadiumLocs[3].m_fO, TEMPSUMMON_CORPSE_DESPAWN, 0))
-                    pNefarius->setFaction(FACTION_BLACK_DRAGON);
-                if (Creature* pRend = pPlayer->SummonCreature(NPC_REND_BLACKHAND, aStadiumLocs[4].m_fX, aStadiumLocs[4].m_fY, aStadiumLocs[4].m_fZ, aStadiumLocs[4].m_fO, TEMPSUMMON_CORPSE_DESPAWN, 0))
-                    pRend->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_OOC_NOT_ATTACKABLE);
-
-                pInstance->SetData(TYPE_STADIUM, IN_PROGRESS);
-            }
-            break;
-    }
-    return false;
-}
-
-bool ProcessEventId_event_spell_altar_emberseer(uint32 uiEventId, Object* pSource, Object* pTarget, bool bIsStart)
-{
-    if (bIsStart && pSource->GetTypeId() == TYPEID_PLAYER)
-    {
-        if (instance_blackrock_spire* pInstance = (instance_blackrock_spire*)((Player*)pSource)->GetInstanceData())
-        {
-            pInstance->DoProcessEmberseerEvent();
-            return true;
-        }
-    }
-    return false;
-}
-
-void AddSC_instance_blackrock_spire()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "instance_blackrock_spire";
-    pNewScript->GetInstanceData = &GetInstanceData_instance_blackrock_spire;
-    pNewScript->RegisterSelf();
-
-    pNewScript = new Script;
-    pNewScript->Name = "at_blackrock_spire";
-    pNewScript->pAreaTrigger = &AreaTrigger_at_blackrock_spire;
-    pNewScript->RegisterSelf();
-
-    pNewScript = new Script;
-    pNewScript->Name = "event_spell_altar_emberseer";
-    pNewScript->pProcessEventId = &ProcessEventId_event_spell_altar_emberseer;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackwing_lair/blackwing_lair.h b/scripts/eastern_kingdoms/blackwing_lair/blackwing_lair.h
deleted file mode 100644
index 0730b2f..0000000
--- a/scripts/eastern_kingdoms/blackwing_lair/blackwing_lair.h
+++ /dev/null
@@ -1,80 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software licensed under GPL version 2
- * Please see the included DOCS/LICENSE.TXT for more information */
-
-#ifndef DEF_BLACKWING_LAIR
-#define DEF_BLACKWING_LAIR
-
-enum
-{
-    MAX_ENCOUNTER               = 8,
-
-    TYPE_RAZORGORE              = 0,
-    TYPE_VAELASTRASZ            = 1,
-    TYPE_LASHLAYER              = 2,
-    TYPE_FIREMAW                = 3,
-    TYPE_EBONROC                = 4,
-    TYPE_FLAMEGOR               = 5,
-    TYPE_CHROMAGGUS             = 6,
-    TYPE_NEFARIAN               = 7,
-
-    NPC_RAZORGORE               = 12435,
-    NPC_VAELASTRASZ             = 13020,
-    NPC_LASHLAYER               = 12017,
-    NPC_FIREMAW                 = 11983,
-    NPC_EBONROC                 = 14601,
-    NPC_FLAMEGOR                = 11981,
-    NPC_CHROMAGGUS              = 14020,
-    NPC_NEFARIAN                = 11583,
-    NPC_LORD_VICTOR_NEFARIUS    = 10162,
-    NPC_BLACKWING_TECHNICIAN    = 13996,                    // Flees at Vael intro event
-    NPC_GRETHOK_CONTROLLER      = 12557,
-    NPC_BLACKWING_ORB_TRIGGER   = 14449,
-    NPC_MONSTER_GENERATOR       = 12434,
-
-    GO_DOOR_RAZORGORE_ENTER     = 176964,
-    GO_DOOR_RAZORGORE_EXIT      = 176965,
-    GO_DOOR_NEFARIAN            = 176966,
-    //GO_DOOR_CHROMAGGUS_ENTER  = 179115,
-    //GO_DOOR_CHROMAGGUS_SIDE   = 179116,
-    GO_DOOR_CHROMAGGUS_EXIT     = 179117,
-    GO_DOOR_VAELASTRASZ         = 179364,
-    GO_DOOR_LASHLAYER           = 179365,
-    GO_ORB_OF_DOMINATION        = 177808,                   // trigger 19832 on Razorgore
-    GO_BLACK_DRAGON_EGG         = 177807,
-    GO_DRAKONID_BONES           = 179804,
-};
-
-// Coords used to spawn Nefarius at the throne
-static const float aNefariusSpawnLoc[4] = {-7466.16f, -1040.80f, 412.053f, 2.14675f};
-
-class MANGOS_DLL_DECL instance_blackwing_lair : public ScriptedInstance
-{
-    public:
-        instance_blackwing_lair(Map* pMap);
-        ~instance_blackwing_lair() {}
-
-        void Initialize();
-        bool IsEncounterInProgress() const;
-
-        void OnCreatureCreate(Creature* pCreature);
-        void OnObjectCreate(GameObject* pGo);
-        void OnCreatureDeath(Creature* pCreature);
-
-        void SetData(uint32 uiType, uint32 uiData);
-        uint32 GetData(uint32 uiType);
-
-        const char* Save() { return m_strInstData.c_str(); }
-        void Load(const char* chrIn);
-
-    protected:
-        std::string m_strInstData;
-        uint32 m_auiEncounter[MAX_ENCOUNTER];
-
-        GuidList m_lTechnicianGuids;
-        GuidList m_lGeneratorGuids;
-        GuidList m_lDragonEggGuids;
-        GuidList m_lDrakonidBonesGuids;
-};
-
-#endif
diff --git a/scripts/eastern_kingdoms/blackwing_lair/boss_broodlord_lashlayer.cpp b/scripts/eastern_kingdoms/blackwing_lair/boss_broodlord_lashlayer.cpp
deleted file mode 100644
index 29b7048..0000000
--- a/scripts/eastern_kingdoms/blackwing_lair/boss_broodlord_lashlayer.cpp
+++ /dev/null
@@ -1,144 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Broodlord_Lashlayer
-SD%Complete: 100
-SDComment:
-SDCategory: Blackwing Lair
-EndScriptData */
-
-#include "precompiled.h"
-#include "blackwing_lair.h"
-
-enum
-{
-    SAY_AGGRO                   = -1469000,
-    SAY_LEASH                   = -1469001,
-
-    SPELL_CLEAVE                = 26350,
-    SPELL_BLAST_WAVE            = 23331,
-    SPELL_MORTAL_STRIKE         = 24573,
-    SPELL_KNOCK_AWAY            = 25778
-};
-
-struct MANGOS_DLL_DECL boss_broodlordAI : public ScriptedAI
-{
-    boss_broodlordAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    uint32 m_uiCleaveTimer;
-    uint32 m_uiBlastWaveTimer;
-    uint32 m_uiMortalStrikeTimer;
-    uint32 m_uiKnockAwayTimer;
-
-    void Reset()
-    {
-        m_uiCleaveTimer         = 8000;                     // These times are probably wrong
-        m_uiBlastWaveTimer      = 12000;
-        m_uiMortalStrikeTimer   = 20000;
-        m_uiKnockAwayTimer      = 30000;
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_LASHLAYER, IN_PROGRESS);
-
-        DoScriptText(SAY_AGGRO, m_creature);
-    }
-
-    void JustDied(Unit* pKiller)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_LASHLAYER, DONE);
-    }
-
-    void JustReachedHome()
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_LASHLAYER, FAIL);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Cleave Timer
-        if (m_uiCleaveTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_CLEAVE) == CAST_OK)
-                m_uiCleaveTimer = 7000;
-        }
-        else
-            m_uiCleaveTimer -= uiDiff;
-
-        // Blast Wave
-        if (m_uiBlastWaveTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_BLAST_WAVE) == CAST_OK)
-                m_uiBlastWaveTimer = urand(8000, 16000);
-        }
-        else
-            m_uiBlastWaveTimer -= uiDiff;
-
-        // Mortal Strike Timer
-        if (m_uiMortalStrikeTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_MORTAL_STRIKE) == CAST_OK)
-                m_uiMortalStrikeTimer = urand(25000, 35000);
-        }
-        else
-            m_uiMortalStrikeTimer -= uiDiff;
-
-        if (m_uiKnockAwayTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(), SPELL_KNOCK_AWAY);
-            // Drop 50% aggro - TODO should be scriptedEffect?
-            if (m_creature->getThreatManager().getThreat(m_creature->getVictim()))
-                m_creature->getThreatManager().modifyThreatPercent(m_creature->getVictim(), -50);
-
-            m_uiKnockAwayTimer = urand(15000, 30000);
-        }
-        else
-            m_uiKnockAwayTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-
-        if (EnterEvadeIfOutOfCombatArea(uiDiff))
-            DoScriptText(SAY_LEASH, m_creature);
-    }
-};
-CreatureAI* GetAI_boss_broodlord(Creature* pCreature)
-{
-    return new boss_broodlordAI(pCreature);
-}
-
-void AddSC_boss_broodlord()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_broodlord";
-    pNewScript->GetAI = &GetAI_boss_broodlord;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackwing_lair/boss_chromaggus.cpp b/scripts/eastern_kingdoms/blackwing_lair/boss_chromaggus.cpp
deleted file mode 100644
index 81ff986..0000000
--- a/scripts/eastern_kingdoms/blackwing_lair/boss_chromaggus.cpp
+++ /dev/null
@@ -1,258 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Chromaggus
-SD%Complete: 95
-SDComment: Chromatic Mutation disabled due to lack of core support
-SDCategory: Blackwing Lair
-EndScriptData */
-
-#include "precompiled.h"
-#include "blackwing_lair.h"
-
-enum
-{
-    EMOTE_GENERIC_FRENZY_KILL   = -1000001,
-    EMOTE_SHIMMER               = -1469003,
-
-    // These spells are actually called elemental shield
-    // What they do is decrease all damage by 75% then they increase
-    // One school of damage by 1100%
-    SPELL_FIRE_VULNERABILITY    = 22277,
-    SPELL_FROST_VULNERABILITY   = 22278,
-    SPELL_SHADOW_VULNERABILITY  = 22279,
-    SPELL_NATURE_VULNERABILITY  = 22280,
-    SPELL_ARCANE_VULNERABILITY  = 22281,
-
-    MAX_BREATHS                 = 5,
-    SPELL_INCINERATE            = 23308,                    // Incinerate 23308,23309
-    SPELL_TIME_LAPSE            = 23310,                    // Time lapse 23310, 23311(old threat mod that was removed in 2.01)
-    SPELL_CORROSIVE_ACID        = 23313,                    // Corrosive Acid 23313, 23314
-    SPELL_IGNITE_FLESH          = 23315,                    // Ignite Flesh 23315,23316
-    SPELL_FROST_BURN            = 23187,                    // Frost burn 23187, 23189
-
-    // Brood Affliction 23173 - Scripted Spell that cycles through all targets within 100 yards and has a chance to cast one of the afflictions on them
-    // Since Scripted spells arn't coded I'll just write a function that does the same thing
-    SPELL_BROODAF_BLUE          = 23153,                    // Blue affliction 23153
-    SPELL_BROODAF_BLACK         = 23154,                    // Black affliction 23154
-    SPELL_BROODAF_RED           = 23155,                    // Red affliction 23155 (23168 on death)
-    SPELL_BROODAF_BRONZE        = 23170,                    // Bronze Affliction  23170
-    SPELL_BROODAF_GREEN         = 23169,                    // Brood Affliction Green 23169
-
-    SPELL_CHROMATIC_MUT_1       = 23174,                    // Spell cast on player if they get all 5 debuffs
-
-    SPELL_FRENZY                = 28371,                    // The frenzy spell may be wrong
-    SPELL_ENRAGE                = 28747
-};
-
-static const uint32 aPossibleBreaths[MAX_BREATHS] = {SPELL_INCINERATE, SPELL_TIME_LAPSE, SPELL_CORROSIVE_ACID, SPELL_IGNITE_FLESH, SPELL_FROST_BURN};
-
-struct MANGOS_DLL_DECL boss_chromaggusAI : public ScriptedAI
-{
-    boss_chromaggusAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        // Select the 2 different breaths that we are going to use until despawned
-        // 5 possiblities for the first breath, 4 for the second, 20 total possiblites
-
-        // select two different numbers between 0..MAX_BREATHS-1
-        uint8 uiPos1 = urand(0, MAX_BREATHS - 1);
-        uint8 uiPos2 = (uiPos1 + urand(1, MAX_BREATHS - 1)) % MAX_BREATHS;
-
-        m_uiBreathOneSpell = aPossibleBreaths[uiPos1];
-        m_uiBreathTwoSpell = aPossibleBreaths[uiPos2];
-
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    uint32 m_uiBreathOneSpell;
-    uint32 m_uiBreathTwoSpell;
-    uint32 m_uiCurrentVulnerabilitySpell;
-
-    uint32 m_uiShimmerTimer;
-    uint32 m_uiBreathOneTimer;
-    uint32 m_uiBreathTwoTimer;
-    uint32 m_uiAfflictionTimer;
-    uint32 m_uiFrenzyTimer;
-    bool m_bEnraged;
-
-    void Reset()
-    {
-        m_uiCurrentVulnerabilitySpell = 0;                  // We use this to store our last vulnerability spell so we can remove it later
-
-        m_uiShimmerTimer    = 0;                            // Time till we change vurlnerabilites
-        m_uiBreathOneTimer  = 30000;                        // First breath is 30 seconds
-        m_uiBreathTwoTimer  = 60000;                        // Second is 1 minute so that we can alternate
-        m_uiAfflictionTimer = 10000;                        // This is special - 5 seconds means that we cast this on 1 pPlayer every 5 sconds
-        m_uiFrenzyTimer     = 15000;
-
-        m_bEnraged          = false;
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_CHROMAGGUS, IN_PROGRESS);
-    }
-
-    void JustDied(Unit* pKiller)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_CHROMAGGUS, DONE);
-    }
-
-    void JustReachedHome()
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_CHROMAGGUS, FAIL);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Shimmer Timer Timer
-        if (m_uiShimmerTimer < uiDiff)
-        {
-            // Remove old vulnerability spell
-            if (m_uiCurrentVulnerabilitySpell)
-                m_creature->RemoveAurasDueToSpell(m_uiCurrentVulnerabilitySpell);
-
-            // Cast new random vurlnabilty on self
-            uint32 aSpellId[] = {SPELL_FIRE_VULNERABILITY, SPELL_FROST_VULNERABILITY, SPELL_SHADOW_VULNERABILITY, SPELL_NATURE_VULNERABILITY, SPELL_ARCANE_VULNERABILITY};
-            uint32 uiSpell = aSpellId[urand(0, 4)];
-
-            if (DoCastSpellIfCan(m_creature, uiSpell) == CAST_OK)
-            {
-                m_uiCurrentVulnerabilitySpell = uiSpell;
-
-                DoScriptText(EMOTE_SHIMMER, m_creature);
-                m_uiShimmerTimer = 45000;
-            }
-        }
-        else
-            m_uiShimmerTimer -= uiDiff;
-
-        // Breath One Timer
-        if (m_uiBreathOneTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, m_uiBreathOneSpell) == CAST_OK)
-                m_uiBreathOneTimer = 60000;
-        }
-        else
-            m_uiBreathOneTimer -= uiDiff;
-
-        // Breath Two Timer
-        if (m_uiBreathTwoTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, m_uiBreathTwoSpell) == CAST_OK)
-                m_uiBreathTwoTimer = 60000;
-        }
-        else
-            m_uiBreathTwoTimer -= uiDiff;
-
-        // Affliction Timer
-        if (m_uiAfflictionTimer < uiDiff)
-        {
-            uint32 m_uiSpellAfflict = 0;
-
-            switch(urand(0, 4))
-            {
-                case 0: m_uiSpellAfflict = SPELL_BROODAF_BLUE; break;
-                case 1: m_uiSpellAfflict = SPELL_BROODAF_BLACK; break;
-                case 2: m_uiSpellAfflict = SPELL_BROODAF_RED; break;
-                case 3: m_uiSpellAfflict = SPELL_BROODAF_BRONZE; break;
-                case 4: m_uiSpellAfflict = SPELL_BROODAF_GREEN; break;
-            }
-
-            GuidVector vGuids;
-            m_creature->FillGuidsListFromThreatList(vGuids);
-            for (GuidVector::const_iterator i = vGuids.begin(); i != vGuids.end(); ++i)
-            {
-                Unit* pUnit = m_creature->GetMap()->GetUnit(*i);
-
-                if (pUnit)
-                {
-                    // Cast affliction
-                    DoCastSpellIfCan(pUnit, m_uiSpellAfflict, CAST_TRIGGERED);
-
-                    // Chromatic mutation if target is effected by all afflictions
-                    if (pUnit->HasAura(SPELL_BROODAF_BLUE, EFFECT_INDEX_0)
-                        && pUnit->HasAura(SPELL_BROODAF_BLACK, EFFECT_INDEX_0)
-                        && pUnit->HasAura(SPELL_BROODAF_RED, EFFECT_INDEX_0)
-                        && pUnit->HasAura(SPELL_BROODAF_BRONZE, EFFECT_INDEX_0)
-                        && pUnit->HasAura(SPELL_BROODAF_GREEN, EFFECT_INDEX_0))
-                    {
-                        //target->RemoveAllAuras();
-                        //DoCastSpellIfCan(target,SPELL_CHROMATIC_MUT_1);
-
-                        // Chromatic mutation is causing issues
-                        // Assuming it is caused by a lack of core support for Charm
-                        // So instead we instant kill our target
-
-                        // WORKAROUND
-                        if (pUnit->GetTypeId() == TYPEID_PLAYER)
-                            m_creature->CastSpell(pUnit, 5, false);
-                    }
-                }
-            }
-
-            m_uiAfflictionTimer = 10000;
-        }
-        else
-            m_uiAfflictionTimer -= uiDiff;
-
-        // Frenzy Timer
-        if (m_uiFrenzyTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_FRENZY) == CAST_OK)
-            {
-                DoScriptText(EMOTE_GENERIC_FRENZY_KILL, m_creature);
-                m_uiFrenzyTimer = urand(10000, 15000);
-            }
-        }
-        else
-            m_uiFrenzyTimer -= uiDiff;
-
-        // Enrage if not already enraged and below 20%
-        if (!m_bEnraged && m_creature->GetHealthPercent() < 20.0f)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_ENRAGE);
-            m_bEnraged = true;
-        }
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_chromaggus(Creature* pCreature)
-{
-    return new boss_chromaggusAI(pCreature);
-}
-
-void AddSC_boss_chromaggus()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_chromaggus";
-    pNewScript->GetAI = &GetAI_boss_chromaggus;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackwing_lair/boss_ebonroc.cpp b/scripts/eastern_kingdoms/blackwing_lair/boss_ebonroc.cpp
deleted file mode 100644
index b68dfc3..0000000
--- a/scripts/eastern_kingdoms/blackwing_lair/boss_ebonroc.cpp
+++ /dev/null
@@ -1,123 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Ebonroc
-SD%Complete: 90
-SDComment: Thrash is missing
-SDCategory: Blackwing Lair
-EndScriptData */
-
-#include "precompiled.h"
-#include "blackwing_lair.h"
-
-enum
-{
-    SPELL_SHADOW_FLAME          = 22539,
-    SPELL_WING_BUFFET           = 18500,
-    SPELL_SHADOW_OF_EBONROC     = 23340,
-    SPELL_THRASH                = 3391,                     // TODO missing
-};
-
-struct MANGOS_DLL_DECL boss_ebonrocAI : public ScriptedAI
-{
-    boss_ebonrocAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    uint32 m_uiShadowFlameTimer;
-    uint32 m_uiWingBuffetTimer;
-    uint32 m_uiShadowOfEbonrocTimer;
-
-    void Reset()
-    {
-        m_uiShadowFlameTimer        = 15000;                // These times are probably wrong
-        m_uiWingBuffetTimer         = 30000;
-        m_uiShadowOfEbonrocTimer    = 45000;
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_EBONROC, IN_PROGRESS);
-    }
-
-    void JustDied(Unit* pKiller)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_EBONROC, DONE);
-    }
-
-    void JustReachedHome()
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_EBONROC, FAIL);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Shadow Flame Timer
-        if (m_uiShadowFlameTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_SHADOW_FLAME) == CAST_OK)
-                m_uiShadowFlameTimer = urand(12000, 15000);
-        }
-        else
-            m_uiShadowFlameTimer -= uiDiff;
-
-        // Wing Buffet Timer
-        if (m_uiWingBuffetTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_WING_BUFFET) == CAST_OK)
-                m_uiWingBuffetTimer = 25000;
-        }
-        else
-            m_uiWingBuffetTimer -= uiDiff;
-
-        // Shadow of Ebonroc Timer
-        if (m_uiShadowOfEbonrocTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_SHADOW_OF_EBONROC) == CAST_OK)
-                m_uiShadowOfEbonrocTimer = urand(25000, 35000);
-        }
-        else
-            m_uiShadowOfEbonrocTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_ebonroc(Creature* pCreature)
-{
-    return new boss_ebonrocAI(pCreature);
-}
-
-void AddSC_boss_ebonroc()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_ebonroc";
-    pNewScript->GetAI = &GetAI_boss_ebonroc;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackwing_lair/boss_firemaw.cpp b/scripts/eastern_kingdoms/blackwing_lair/boss_firemaw.cpp
deleted file mode 100644
index 0550af3..0000000
--- a/scripts/eastern_kingdoms/blackwing_lair/boss_firemaw.cpp
+++ /dev/null
@@ -1,127 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Firemaw
-SD%Complete: 80
-SDComment: Thrash missing
-SDCategory: Blackwing Lair
-EndScriptData */
-
-#include "precompiled.h"
-#include "blackwing_lair.h"
-
-enum
-{
-    SPELL_SHADOW_FLAME          = 22539,
-    SPELL_WING_BUFFET           = 23339,
-    SPELL_FLAME_BUFFET          = 23341,
-    SPELL_THRASH                = 3391,                     // TODO, missing
-};
-
-struct MANGOS_DLL_DECL boss_firemawAI : public ScriptedAI
-{
-    boss_firemawAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    uint32 m_uiShadowFlameTimer;
-    uint32 m_uiWingBuffetTimer;
-    uint32 m_uiFlameBuffetTimer;
-
-    void Reset()
-    {
-        m_uiShadowFlameTimer = 30000;                       // These times are probably wrong
-        m_uiWingBuffetTimer = 24000;
-        m_uiFlameBuffetTimer = 5000;
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_FIREMAW, IN_PROGRESS);
-    }
-
-    void JustDied(Unit* pKiller)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_FIREMAW, DONE);
-    }
-
-    void JustReachedHome()
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_FIREMAW, FAIL);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Shadow Flame Timer
-        if (m_uiShadowFlameTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_SHADOW_FLAME) == CAST_OK)
-                m_uiShadowFlameTimer = urand(15000, 18000);
-        }
-        else
-            m_uiShadowFlameTimer -= uiDiff;
-
-        // Wing Buffet Timer
-        if (m_uiWingBuffetTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_WING_BUFFET) == CAST_OK)
-            {
-                if (m_creature->getThreatManager().getThreat(m_creature->getVictim()))
-                    m_creature->getThreatManager().modifyThreatPercent(m_creature->getVictim(), -75);
-
-                m_uiWingBuffetTimer = 25000;
-            }
-        }
-        else
-            m_uiWingBuffetTimer -= uiDiff;
-
-        // Flame Buffet Timer
-        if (m_uiFlameBuffetTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_FLAME_BUFFET) == CAST_OK)
-                m_uiFlameBuffetTimer = 5000;
-        }
-        else
-            m_uiFlameBuffetTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-CreatureAI* GetAI_boss_firemaw(Creature* pCreature)
-{
-    return new boss_firemawAI(pCreature);
-}
-
-void AddSC_boss_firemaw()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_firemaw";
-    pNewScript->GetAI = &GetAI_boss_firemaw;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackwing_lair/boss_flamegor.cpp b/scripts/eastern_kingdoms/blackwing_lair/boss_flamegor.cpp
deleted file mode 100644
index efc1f5c..0000000
--- a/scripts/eastern_kingdoms/blackwing_lair/boss_flamegor.cpp
+++ /dev/null
@@ -1,132 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Flamegor
-SD%Complete: 90
-SDComment: Thrash is missing
-SDCategory: Blackwing Lair
-EndScriptData */
-
-#include "precompiled.h"
-#include "blackwing_lair.h"
-
-enum
-{
-    EMOTE_GENERIC_FRENZY        = -1000002,
-
-    SPELL_SHADOW_FLAME          = 22539,
-    SPELL_WING_BUFFET           = 23339,
-    SPELL_FRENZY                = 23342,                    // This spell periodically triggers fire nova
-    SPELL_THRASH                = 3391,                     // TODO missing
-};
-
-struct MANGOS_DLL_DECL boss_flamegorAI : public ScriptedAI
-{
-    boss_flamegorAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    uint32 m_uiShadowFlameTimer;
-    uint32 m_uiWingBuffetTimer;
-    uint32 m_uiFrenzyTimer;
-
-    void Reset()
-    {
-        m_uiShadowFlameTimer = 21000;                       // These times are probably wrong
-        m_uiWingBuffetTimer = 35000;
-        m_uiFrenzyTimer = 10000;
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_FLAMEGOR, IN_PROGRESS);
-    }
-
-    void JustDied(Unit* pKiller)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_FLAMEGOR, DONE);
-    }
-
-    void JustReachedHome()
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_FLAMEGOR, FAIL);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Shadow Flame Timer
-        if (m_uiShadowFlameTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_SHADOW_FLAME) == CAST_OK)
-                m_uiShadowFlameTimer = urand(15000, 22000);
-        }
-        else
-            m_uiShadowFlameTimer -= uiDiff;
-
-        // Wing Buffet Timer
-        if (m_uiWingBuffetTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_WING_BUFFET) == CAST_OK)
-            {
-                if (m_creature->getThreatManager().getThreat(m_creature->getVictim()))
-                    m_creature->getThreatManager().modifyThreatPercent(m_creature->getVictim(), -75);
-
-                m_uiWingBuffetTimer = 25000;
-            }
-        }
-        else
-            m_uiWingBuffetTimer -= uiDiff;
-
-        // Frenzy Timer
-        if (m_uiFrenzyTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_FRENZY) == CAST_OK)
-            {
-                DoScriptText(EMOTE_GENERIC_FRENZY, m_creature);
-                m_uiFrenzyTimer = urand(8000, 10000);
-            }
-        }
-        else
-            m_uiFrenzyTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-CreatureAI* GetAI_boss_flamegor(Creature* pCreature)
-{
-    return new boss_flamegorAI(pCreature);
-}
-
-void AddSC_boss_flamegor()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_flamegor";
-    pNewScript->GetAI = &GetAI_boss_flamegor;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackwing_lair/boss_nefarian.cpp b/scripts/eastern_kingdoms/blackwing_lair/boss_nefarian.cpp
deleted file mode 100644
index 2b00d67..0000000
--- a/scripts/eastern_kingdoms/blackwing_lair/boss_nefarian.cpp
+++ /dev/null
@@ -1,281 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Nefarian
-SD%Complete: 80
-SDComment: Some issues with class calls effecting more than one class
-SDCategory: Blackwing Lair
-EndScriptData */
-
-#include "precompiled.h"
-#include "blackwing_lair.h"
-#include "TemporarySummon.h"
-
-enum
-{
-    SAY_XHEALTH                 = -1469008,             // at 5% hp
-    SAY_AGGRO                   = -1469009,
-    SAY_RAISE_SKELETONS         = -1469010,
-    SAY_SLAY                    = -1469011,
-    SAY_DEATH                   = -1469012,
-
-    SAY_MAGE                    = -1469013,
-    SAY_WARRIOR                 = -1469014,
-    SAY_DRUID                   = -1469015,
-    SAY_PRIEST                  = -1469016,
-    SAY_PALADIN                 = -1469017,
-    SAY_SHAMAN                  = -1469018,
-    SAY_WARLOCK                 = -1469019,
-    SAY_HUNTER                  = -1469020,
-    SAY_ROGUE                   = -1469021,
-    SAY_DEATH_KNIGHT            = -1469031,             // spell unk for the moment
-
-    SPELL_SHADOWFLAME_INITIAL   = 22992,                // old spell id 22972 -> wrong
-    SPELL_SHADOWFLAME           = 22539,
-    SPELL_BELLOWING_ROAR        = 22686,
-    SPELL_VEIL_OF_SHADOW        = 22687,                // old spell id 7068 -> wrong
-    SPELL_CLEAVE                = 20691,
-    SPELL_TAIL_LASH             = 23364,
-    //SPELL_BONE_CONTRUST       = 23363,                //23362, 23361   Missing from DBC!
-
-    SPELL_MAGE                  = 23410,                // wild magic
-    SPELL_WARRIOR               = 23397,                // beserk
-    SPELL_DRUID                 = 23398,                // cat form
-    SPELL_PRIEST                = 23401,                // corrupted healing
-    SPELL_PALADIN               = 23418,                // syphon blessing
-    SPELL_SHAMAN                = 23425,                // totems
-    SPELL_WARLOCK               = 23427,                // infernals    -> should trigger 23426
-    SPELL_HUNTER                = 23436,                // bow broke
-    SPELL_ROGUE                 = 23414,                // Paralise
-};
-
-struct MANGOS_DLL_DECL boss_nefarianAI : public ScriptedAI
-{
-    boss_nefarianAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    uint32 m_uiShadowFlameTimer;
-    uint32 m_uiBellowingRoarTimer;
-    uint32 m_uiVeilOfShadowTimer;
-    uint32 m_uiCleaveTimer;
-    uint32 m_uiTailLashTimer;
-    uint32 m_uiClassCallTimer;
-    bool m_bPhase3;
-    bool m_bHasEndYell;
-
-    void Reset()
-    {
-        m_uiShadowFlameTimer    = 12000;                            // These times are probably wrong
-        m_uiBellowingRoarTimer  = 30000;
-        m_uiVeilOfShadowTimer   = 15000;
-        m_uiCleaveTimer         = 7000;
-        m_uiTailLashTimer       = 10000;
-        m_uiClassCallTimer      = 35000;                            // 35-40 seconds
-        m_bPhase3               = false;
-        m_bHasEndYell           = false;
-    }
-
-    void KilledUnit(Unit* pVictim)
-    {
-        if (urand(0, 4))
-            return;
-
-        DoScriptText(SAY_SLAY, m_creature, pVictim);
-    }
-
-    void JustDied(Unit* pKiller)
-    {
-        DoScriptText(SAY_DEATH, m_creature);
-
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_NEFARIAN, DONE);
-    }
-
-    void JustReachedHome()
-    {
-        if (m_pInstance)
-        {
-            m_pInstance->SetData(TYPE_NEFARIAN, FAIL);
-
-            // Cleanup encounter
-            if (m_creature->IsTemporarySummon())
-            {
-                TemporarySummon* pTemporary = (TemporarySummon*)m_creature;
-
-                if (Creature* pNefarius = m_creature->GetMap()->GetCreature(pTemporary->GetSummonerGuid()))
-                    pNefarius->AI()->EnterEvadeMode();
-            }
-
-            m_creature->ForcedDespawn();
-        }
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        DoScriptText(SAY_AGGRO, m_creature);
-
-        // Remove flying in case Nefarian aggroes before his combat point was reached
-        if (m_creature->IsLevitating())
-        {
-            m_creature->SetByteValue(UNIT_FIELD_BYTES_1, 3, 0);
-            m_creature->SetLevitate(false);
-        }
-
-        DoCastSpellIfCan(m_creature, SPELL_SHADOWFLAME_INITIAL);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // ShadowFlame_Timer
-        if (m_uiShadowFlameTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_SHADOWFLAME) == CAST_OK)
-                m_uiShadowFlameTimer = 12000;
-        }
-        else
-            m_uiShadowFlameTimer -= uiDiff;
-
-        // BellowingRoar_Timer
-        if (m_uiBellowingRoarTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_BELLOWING_ROAR) == CAST_OK)
-                m_uiBellowingRoarTimer = 30000;
-        }
-        else
-            m_uiBellowingRoarTimer -= uiDiff;
-
-        // VeilOfShadow_Timer
-        if (m_uiVeilOfShadowTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_VEIL_OF_SHADOW) == CAST_OK)
-                m_uiVeilOfShadowTimer = 15000;
-        }
-        else
-            m_uiVeilOfShadowTimer -= uiDiff;
-
-        // Cleave_Timer
-        if (m_uiCleaveTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_CLEAVE) == CAST_OK)
-                m_uiCleaveTimer = 7000;
-        }
-        else
-            m_uiCleaveTimer -= uiDiff;
-
-        // TailLash_Timer
-        if (m_uiTailLashTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_TAIL_LASH) == CAST_OK)
-                m_uiTailLashTimer = 10000;
-        }
-        else
-            m_uiTailLashTimer -= uiDiff;
-
-        // ClassCall_Timer
-        if (m_uiClassCallTimer < uiDiff)
-        {
-            //Cast a random class call
-            //On official it is based on what classes are currently on the hostil list
-            //but we can't do that yet so just randomly call one
-
-            switch(urand(0, 8))
-            {
-                case 0:
-                    DoScriptText(SAY_MAGE, m_creature);
-                    DoCastSpellIfCan(m_creature, SPELL_MAGE);
-                    break;
-                case 1:
-                    DoScriptText(SAY_WARRIOR, m_creature);
-                    DoCastSpellIfCan(m_creature, SPELL_WARRIOR);
-                    break;
-                case 2:
-                    DoScriptText(SAY_DRUID, m_creature);
-                    DoCastSpellIfCan(m_creature, SPELL_DRUID);
-                    break;
-                case 3:
-                    DoScriptText(SAY_PRIEST, m_creature);
-                    DoCastSpellIfCan(m_creature, SPELL_PRIEST);
-                    break;
-                case 4:
-                    DoScriptText(SAY_PALADIN, m_creature);
-                    DoCastSpellIfCan(m_creature, SPELL_PALADIN);
-                    break;
-                case 5:
-                    DoScriptText(SAY_SHAMAN, m_creature);
-                    DoCastSpellIfCan(m_creature, SPELL_SHAMAN);
-                    break;
-                case 6:
-                    DoScriptText(SAY_WARLOCK, m_creature);
-                    DoCastSpellIfCan(m_creature, SPELL_WARLOCK);
-                    break;
-                case 7:
-                    DoScriptText(SAY_HUNTER, m_creature);
-                    DoCastSpellIfCan(m_creature, SPELL_HUNTER);
-                    break;
-                case 8:
-                    DoScriptText(SAY_ROGUE, m_creature);
-                    DoCastSpellIfCan(m_creature, SPELL_ROGUE);
-                    break;
-            }
-
-            m_uiClassCallTimer = urand(35000, 40000);
-        }
-        else
-            m_uiClassCallTimer -= uiDiff;
-
-        // Phase3 begins when we are below X health
-        if (!m_bPhase3 && m_creature->GetHealthPercent() < 20.0f)
-        {
-            if (m_pInstance)
-                m_pInstance->SetData(TYPE_NEFARIAN, SPECIAL);
-            m_bPhase3 = true;
-            DoScriptText(SAY_RAISE_SKELETONS, m_creature);
-        }
-
-        // 5% hp yell
-        if (!m_bHasEndYell && m_creature->GetHealthPercent() < 5.0f)
-        {
-            m_bHasEndYell = true;
-            DoScriptText(SAY_XHEALTH, m_creature);
-        }
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_nefarian(Creature* pCreature)
-{
-    return new boss_nefarianAI(pCreature);
-}
-
-void AddSC_boss_nefarian()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_nefarian";
-    pNewScript->GetAI = &GetAI_boss_nefarian;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackwing_lair/boss_razorgore.cpp b/scripts/eastern_kingdoms/blackwing_lair/boss_razorgore.cpp
deleted file mode 100644
index 58862b2..0000000
--- a/scripts/eastern_kingdoms/blackwing_lair/boss_razorgore.cpp
+++ /dev/null
@@ -1,178 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Razorgore
-SD%Complete: 50
-SDComment: Needs additional review. Phase 1 NYI (Grethok the Controller), Conflagration needs core support
-SDCategory: Blackwing Lair
-EndScriptData */
-
-#include "precompiled.h"
-#include "blackwing_lair.h"
-
-enum
-{
-    SAY_EGGS_BROKEN_1           = -1469022,
-    SAY_EGGS_BROKEN_2           = -1469023,
-    SAY_EGGS_BROKEN_3           = -1469024,
-    SAY_DEATH                   = -1469025,
-
-    EMOTE_TROOPS_FLEE           = -1469033,                 // emote by Nefarian's Troops npc
-
-    // phase I event spells
-    SPELL_POSSESS               = 23014,                    // visual effect and increase the damage taken
-    SPELL_EXPLODE_ORB           = 20037,                    // used if attacked without destroying the eggs - related to 20038
-
-    SPELL_CLEAVE                = 19632,
-    SPELL_WARSTOMP              = 24375,
-    SPELL_FIREBALL_VOLLEY       = 22425,
-    SPELL_CONFLAGRATION         = 23023,
-
-    // npcs used in phase I
-    NPC_BLACKWING_LEGIONNAIRE   = 12416,
-    NPC_BLACKWING_MAGE          = 12420,
-    NPC_DRAGONSPAWN             = 12422,
-};
-
-struct MANGOS_DLL_DECL boss_razorgoreAI : public ScriptedAI
-{
-    boss_razorgoreAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (instance_blackwing_lair*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    instance_blackwing_lair* m_pInstance;
-
-    uint32 m_uiIntroVisualTimer;
-    uint32 m_uiCleaveTimer;
-    uint32 m_uiWarStompTimer;
-    uint32 m_uiFireballVolleyTimer;
-    uint32 m_uiConflagrationTimer;
-
-    void Reset()
-    {
-        m_uiIntroVisualTimer    = 5000;
-
-        m_uiCleaveTimer         = 15000;                       // These times are probably wrong
-        m_uiWarStompTimer       = 35000;
-        m_uiConflagrationTimer  = 12000;
-        m_uiFireballVolleyTimer = 7000;
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        // TODO Temporarily add this InstData setting, must be started with Phase 1 which is not yet implemented
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_RAZORGORE, IN_PROGRESS);
-    }
-
-    void JustDied(Unit* pKiller)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_RAZORGORE, DONE);
-
-        DoScriptText(SAY_DEATH, m_creature);
-    }
-
-    void JustReachedHome()
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_RAZORGORE, FAIL);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        // Set visual on OOC timer
-        if (m_uiIntroVisualTimer)
-        {
-            if (m_uiIntroVisualTimer <= uiDiff)
-            {
-                if (Creature* pOrbTrigger = m_pInstance->GetSingleCreatureFromStorage(NPC_BLACKWING_ORB_TRIGGER))
-                    pOrbTrigger->CastSpell(m_creature, SPELL_POSSESS, false);
-                m_uiIntroVisualTimer = 0;
-            }
-            else
-                m_uiIntroVisualTimer -= uiDiff;
-        }
-
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Cleave
-        if (m_uiCleaveTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_CLEAVE) == CAST_OK)
-                m_uiCleaveTimer = urand(7000, 10000);
-        }
-        else
-            m_uiCleaveTimer -= uiDiff;
-
-        // War Stomp
-        if (m_uiWarStompTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_WARSTOMP) == CAST_OK)
-                m_uiWarStompTimer = urand(15000, 25000);
-        }
-        else
-            m_uiWarStompTimer -= uiDiff;
-
-        // Fireball Volley
-        if (m_uiFireballVolleyTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_FIREBALL_VOLLEY) == CAST_OK)
-                m_uiFireballVolleyTimer = urand(12000, 15000);
-        }
-        else
-            m_uiFireballVolleyTimer -= uiDiff;
-
-        // Conflagration
-        if (m_uiConflagrationTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_CONFLAGRATION) == CAST_OK)
-                m_uiConflagrationTimer = 12000;
-        }
-        else
-            m_uiConflagrationTimer -= uiDiff;
-
-        /* This is obsolete code, not working anymore, keep as reference, should be handled in core though
-        * // Aura Check. If the gamer is affected by confliguration we attack a random gamer.
-        * if (m_creature->getVictim()->HasAura(SPELL_CONFLAGRATION, EFFECT_INDEX_0))
-        * {
-        *     if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 1))
-        *         m_creature->TauntApply(pTarget);
-        * }
-        */
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_razorgore(Creature* pCreature)
-{
-    return new boss_razorgoreAI(pCreature);
-}
-
-void AddSC_boss_razorgore()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_razorgore";
-    pNewScript->GetAI = &GetAI_boss_razorgore;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackwing_lair/boss_vaelastrasz.cpp b/scripts/eastern_kingdoms/blackwing_lair/boss_vaelastrasz.cpp
deleted file mode 100644
index bb8581b..0000000
--- a/scripts/eastern_kingdoms/blackwing_lair/boss_vaelastrasz.cpp
+++ /dev/null
@@ -1,390 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Vaelastrasz
-SD%Complete: 75
-SDComment: Burning Adrenaline not correctly implemented in core
-SDCategory: Blackwing Lair
-EndScriptData */
-
-#include "precompiled.h"
-#include "blackwing_lair.h"
-
-enum
-{
-    SAY_LINE_1                  = -1469026,
-    SAY_LINE_2                  = -1469027,
-    SAY_LINE_3                  = -1469028,
-    SAY_HALFLIFE                = -1469029,
-    SAY_KILLTARGET              = -1469030,
-    SAY_NEFARIUS_CORRUPT_1      = -1469006,                 // When he corrupts Vaelastrasz
-    SAY_NEFARIUS_CORRUPT_2      = -1469032,
-    SAY_TECHNICIAN_RUN          = -1469034,
-
-    SPELL_ESSENCE_OF_THE_RED    = 23513,
-    SPELL_FLAME_BREATH          = 23461,
-    SPELL_FIRE_NOVA             = 23462,
-    SPELL_TAIL_SWEEP            = 15847,
-    SPELL_BURNING_ADRENALINE    = 23620,
-    SPELL_CLEAVE                = 20684,                    // Chain cleave is most likely named something different and contains a dummy effect
-
-    SPELL_NEFARIUS_CORRUPTION   = 23642,
-
-    GOSSIP_ITEM_VAEL_1          = -3469003,
-    GOSSIP_ITEM_VAEL_2          = -3469004,
-    // Vael Gossip texts might be 7156 and 7256; At the moment are missing from DB
-    // For the moment add the default values
-    GOSSIP_TEXT_VAEL_1          = 384,
-    GOSSIP_TEXT_VAEL_2          = 384,
-
-    FACTION_HOSTILE             = 14,
-
-    AREATRIGGER_VAEL_INTRO      = 3626,
-};
-
-struct MANGOS_DLL_DECL boss_vaelastraszAI : public ScriptedAI
-{
-    boss_vaelastraszAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-
-        // Set stand state to dead before the intro event
-        m_creature->SetStandState(UNIT_STAND_STATE_DEAD);
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    ObjectGuid m_nefariusGuid;
-    uint32 m_uiIntroTimer;
-    uint8 m_uiIntroPhase;
-
-    ObjectGuid m_playerGuid;
-    uint32 m_uiSpeechTimer;
-    uint8 m_uiSpeechNum;
-
-    uint32 m_uiCleaveTimer;
-    uint32 m_uiFlameBreathTimer;
-    uint32 m_uiFireNovaTimer;
-    uint32 m_uiBurningAdrenalineCasterTimer;
-    uint32 m_uiBurningAdrenalineTankTimer;
-    uint32 m_uiTailSweepTimer;
-    bool m_bHasYelled;
-
-    void Reset()
-    {
-        m_playerGuid.Clear();
-
-        m_uiIntroTimer                   = 0;
-        m_uiIntroPhase                   = 0;
-        m_uiSpeechTimer                  = 0;
-        m_uiSpeechNum                    = 0;
-        m_uiCleaveTimer                  = 8000;            // These times are probably wrong
-        m_uiFlameBreathTimer             = 11000;
-        m_uiBurningAdrenalineCasterTimer = 15000;
-        m_uiBurningAdrenalineTankTimer   = 45000;
-        m_uiFireNovaTimer                = 5000;
-        m_uiTailSweepTimer               = 20000;
-        m_bHasYelled = false;
-
-        // Creature should have only 1/3 of hp
-        m_creature->SetHealth(uint32(m_creature->GetMaxHealth()*.3));
-    }
-
-    void BeginIntro()
-    {
-        // Start Intro delayed
-        m_uiIntroTimer = 1000;
-
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_VAELASTRASZ, SPECIAL);
-    }
-
-    void BeginSpeech(Player* pTarget)
-    {
-        // Stand up and begin speach
-        m_playerGuid = pTarget->GetObjectGuid();
-
-        // 10 seconds
-        DoScriptText(SAY_LINE_1, m_creature);
-
-        // Make boss stand
-        m_creature->SetStandState(UNIT_STAND_STATE_STAND);
-
-        m_uiSpeechTimer = 10000;
-        m_uiSpeechNum = 0;
-    }
-
-    void KilledUnit(Unit* pVictim)
-    {
-        if (urand(0, 4))
-            return;
-
-        DoScriptText(SAY_KILLTARGET, m_creature, pVictim);
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_VAELASTRASZ, IN_PROGRESS);
-
-        // Buff players on aggro
-        DoCastSpellIfCan(m_creature, SPELL_ESSENCE_OF_THE_RED);
-    }
-
-    void JustDied(Unit* pKiller)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_VAELASTRASZ, DONE);
-    }
-
-    void JustReachedHome()
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_VAELASTRASZ, FAIL);
-    }
-
-    void JustSummoned(Creature* pSummoned)
-    {
-        if (pSummoned->GetEntry() == NPC_LORD_VICTOR_NEFARIUS)
-        {
-            // Set not selectable, so players won't interact with it
-            pSummoned->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
-            m_nefariusGuid = pSummoned->GetObjectGuid();
-        }
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (m_uiIntroTimer)
-        {
-            if (m_uiIntroTimer <= uiDiff)
-            {
-                switch (m_uiIntroPhase)
-                {
-                    case 0:
-                        m_creature->SummonCreature(NPC_LORD_VICTOR_NEFARIUS, aNefariusSpawnLoc[0], aNefariusSpawnLoc[1], aNefariusSpawnLoc[2], aNefariusSpawnLoc[3], TEMPSUMMON_TIMED_DESPAWN, 25000);
-                        m_uiIntroTimer = 1000;
-                        break;
-                    case 1:
-                        if (Creature* pNefarius = m_creature->GetMap()->GetCreature(m_nefariusGuid))
-                        {
-                            pNefarius->CastSpell(m_creature, SPELL_NEFARIUS_CORRUPTION, true);
-                            DoScriptText(SAY_NEFARIUS_CORRUPT_1, pNefarius);
-                        }
-                        m_uiIntroTimer = 16000;
-                        break;
-                    case 2:
-                        if (Creature* pNefarius = m_creature->GetMap()->GetCreature(m_nefariusGuid))
-                            DoScriptText(SAY_NEFARIUS_CORRUPT_2, pNefarius);
-
-                        // Set npc flags now
-                        m_creature->SetFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_GOSSIP);
-                        m_creature->SetFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_QUESTGIVER);
-                        m_uiIntroTimer = 0;
-                        break;
-                }
-                ++m_uiIntroPhase;
-            }
-            else
-                m_uiIntroTimer -= uiDiff;
-        }
-
-        // Speech
-        if (m_uiSpeechTimer)
-        {
-            if (m_uiSpeechTimer <= uiDiff)
-            {
-                switch (m_uiSpeechNum)
-                {
-                    case 0:
-                        // 16 seconds till next line
-                        DoScriptText(SAY_LINE_2, m_creature);
-                        m_uiSpeechTimer = 16000;
-                        ++m_uiSpeechNum;
-                        break;
-                    case 1:
-                        // This one is actually 16 seconds but we only go to 10 seconds because he starts attacking after he says "I must fight this!"
-                        DoScriptText(SAY_LINE_3, m_creature);
-                        m_uiSpeechTimer = 10000;
-                        ++m_uiSpeechNum;
-                        break;
-                    case 2:
-                        m_creature->setFaction(FACTION_HOSTILE);
-
-                        if (m_playerGuid)
-                        {
-                            if (Player* pPlayer = m_creature->GetMap()->GetPlayer(m_playerGuid))
-                                AttackStart(pPlayer);
-                        }
-                        m_uiSpeechTimer = 0;
-                        break;
-                }
-            }
-            else
-                m_uiSpeechTimer -= uiDiff;
-        }
-
-        // Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Yell if hp lower than 15%
-        if (m_creature->GetHealthPercent() < 15.0f && !m_bHasYelled)
-        {
-            DoScriptText(SAY_HALFLIFE, m_creature);
-            m_bHasYelled = true;
-        }
-
-        // Cleave Timer
-        if (m_uiCleaveTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_CLEAVE) == CAST_OK)
-                m_uiCleaveTimer = 15000;
-        }
-        else
-            m_uiCleaveTimer -= uiDiff;
-
-        // Flame Breath Timer
-        if (m_uiFlameBreathTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_FLAME_BREATH) == CAST_OK)
-                m_uiFlameBreathTimer = urand(4000, 8000);
-        }
-        else
-            m_uiFlameBreathTimer -= uiDiff;
-
-        // Burning Adrenaline Caster Timer
-        if (m_uiBurningAdrenalineCasterTimer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0, SPELL_BURNING_ADRENALINE, SELECT_FLAG_PLAYER | SELECT_FLAG_POWER_MANA))
-            {
-                pTarget->CastSpell(pTarget, SPELL_BURNING_ADRENALINE, true, NULL, NULL, m_creature->GetObjectGuid());
-                m_uiBurningAdrenalineCasterTimer = 15000;
-            }
-        }
-        else
-            m_uiBurningAdrenalineCasterTimer -= uiDiff;
-
-        // Burning Adrenaline Tank Timer
-        if (m_uiBurningAdrenalineTankTimer < uiDiff)
-        {
-            // have the victim cast the spell on himself otherwise the third effect aura will be applied
-            // to Vael instead of the player
-            m_creature->getVictim()->CastSpell(m_creature->getVictim(), SPELL_BURNING_ADRENALINE, true, NULL, NULL, m_creature->GetObjectGuid());
-
-            m_uiBurningAdrenalineTankTimer = 45000;
-        }
-        else
-            m_uiBurningAdrenalineTankTimer -= uiDiff;
-
-        // Fire Nova Timer
-        if (m_uiFireNovaTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_FIRE_NOVA) == CAST_OK)
-                m_uiFireNovaTimer = 5000;
-        }
-        else
-            m_uiFireNovaTimer -= uiDiff;
-
-        // Tail Sweep Timer
-        if (m_uiTailSweepTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_TAIL_SWEEP) == CAST_OK)
-                m_uiTailSweepTimer = 20000;
-        }
-        else
-            m_uiTailSweepTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-bool GossipSelect_boss_vaelastrasz(Player* pPlayer, Creature* pCreature, uint32 uiSender, uint32 uiAction)
-{
-    switch (uiAction)
-    {
-        case GOSSIP_ACTION_INFO_DEF + 1:
-            pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_VAEL_2, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 2);
-            pPlayer->SEND_GOSSIP_MENU(GOSSIP_TEXT_VAEL_2, pCreature->GetObjectGuid());
-            break;
-        case GOSSIP_ACTION_INFO_DEF + 2:
-            pPlayer->CLOSE_GOSSIP_MENU();
-            if (boss_vaelastraszAI* pVaelAI = dynamic_cast<boss_vaelastraszAI*>(pCreature->AI()))
-                pVaelAI->BeginSpeech(pPlayer);
-            break;
-    }
-
-    return true;
-}
-
-bool GossipHello_boss_vaelastrasz(Player* pPlayer, Creature* pCreature)
-{
-    if (pCreature->isQuestGiver())
-        pPlayer->PrepareQuestMenu(pCreature->GetObjectGuid());
-
-    pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_VAEL_1, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 1);
-    pPlayer->SEND_GOSSIP_MENU(GOSSIP_TEXT_VAEL_1, pCreature->GetObjectGuid());
-
-    return true;
-}
-
-CreatureAI* GetAI_boss_vaelastrasz(Creature* pCreature)
-{
-    return new boss_vaelastraszAI(pCreature);
-}
-
-bool AreaTrigger_at_vaelastrasz(Player* pPlayer, AreaTriggerEntry const* pAt)
-{
-    if (pAt->id == AREATRIGGER_VAEL_INTRO)
-    {
-        if (pPlayer->isGameMaster() || pPlayer->isDead())
-            return false;
-
-        if (instance_blackwing_lair* pInstance = (instance_blackwing_lair*)pPlayer->GetInstanceData())
-        {
-            // Handle intro event
-            if (pInstance->GetData(TYPE_VAELASTRASZ) == NOT_STARTED)
-            {
-                if (Creature* pVaelastrasz = pInstance->GetSingleCreatureFromStorage(NPC_VAELASTRASZ))
-                    if (boss_vaelastraszAI* pVaelAI = dynamic_cast<boss_vaelastraszAI*>(pVaelastrasz->AI()))
-                        pVaelAI->BeginIntro();
-            }
-
-            // ToDo: make goblins flee
-        }
-    }
-
-    return false;
-}
-
-void AddSC_boss_vaelastrasz()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_vaelastrasz";
-    pNewScript->GetAI = &GetAI_boss_vaelastrasz;
-    pNewScript->pGossipHello = &GossipHello_boss_vaelastrasz;
-    pNewScript->pGossipSelect = &GossipSelect_boss_vaelastrasz;
-    pNewScript->RegisterSelf();
-
-    pNewScript = new Script;
-    pNewScript->Name = "at_vaelastrasz";
-    pNewScript->pAreaTrigger = &AreaTrigger_at_vaelastrasz;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackwing_lair/boss_victor_nefarius.cpp b/scripts/eastern_kingdoms/blackwing_lair/boss_victor_nefarius.cpp
deleted file mode 100644
index f914803..0000000
--- a/scripts/eastern_kingdoms/blackwing_lair/boss_victor_nefarius.cpp
+++ /dev/null
@@ -1,418 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Victor_Nefarius
-SD%Complete: 90
-SDComment: Small adjustments needed; Timers
-SDCategory: Blackwing Lair
-EndScriptData */
-
-#include "precompiled.h"
-#include "blackwing_lair.h"
-
-enum
-{
-    SAY_GAMESBEGIN_1                = -1469004,
-    SAY_GAMESBEGIN_2                = -1469005,
-    SAY_NEFARIAN_INTRO              = -1469007,
-
-    GOSSIP_ITEM_NEFARIUS_1          = -3469000,
-    GOSSIP_ITEM_NEFARIUS_2          = -3469001,
-    GOSSIP_ITEM_NEFARIUS_3          = -3469002,
-    GOSSIP_TEXT_NEFARIUS_1          = 7134,
-    GOSSIP_TEXT_NEFARIUS_2          = 7198,
-    GOSSIP_TEXT_NEFARIUS_3          = 7199,
-
-    MAX_DRAKES                      = 5,
-    MAX_DRAKE_SUMMONS               = 42,
-    NPC_BRONZE_DRAKANOID            = 14263,
-    NPC_BLUE_DRAKANOID              = 14261,
-    NPC_RED_DRAKANOID               = 14264,
-    NPC_GREEN_DRAKANOID             = 14262,
-    NPC_BLACK_DRAKANOID             = 14265,
-    NPC_CHROMATIC_DRAKANOID         = 14302,
-
-    SPELL_NEFARIUS_BARRIER          = 22663,                // immunity in phase 1
-    SPELL_SHADOWBLINK_INTRO         = 22664,
-    SPELL_SHADOWBOLT_VOLLEY         = 22665,
-    SPELL_SILENCE                   = 22666,
-    SPELL_SHADOW_COMMAND            = 22667,
-    SPELL_SHADOWBOLT                = 22677,
-    SPELL_FEAR                      = 22678,
-    SPELL_SHADOWBLINK               = 22681,                // triggers a random from spells (22668 - 22676)
-
-    SPELL_SUMMON_DRAKONID_BONES     = 23363,
-
-    MAP_ID_BWL                      = 469,
-
-    FACTION_BLACK_DRAGON            = 103
-};
-
-static const DialogueEntry aIntroDialogue[] =
-{
-    {SAY_GAMESBEGIN_1,    NPC_LORD_VICTOR_NEFARIUS,     4000},
-    {SAY_GAMESBEGIN_2,    NPC_LORD_VICTOR_NEFARIUS,     5000},
-    {SPELL_SHADOWBLINK,   0,                            0},
-    {0, 0, 0},
-};
-
-struct SpawnLocation
-{
-    float m_fX, m_fY, m_fZ;
-};
-
-static const SpawnLocation aNefarianLocs[4] =
-{
-    {-7599.32f, -1191.72f, 475.545f},                       // opening where red/blue/black darknid spawner appear (ori 3.05433)
-    {-7526.27f, -1135.04f, 473.445f},                       // same as above, closest to door (ori 5.75959)
-    {-7498.177f, -1273.277f, 481.649f},                     // nefarian spawn location (ori 1.798)
-    {-7502.002f, -1256.503f, 476.758f},                     // nefarian fly to this position
-};
-
-static const uint32 aPossibleDrake[MAX_DRAKES] = {NPC_BRONZE_DRAKANOID, NPC_BLUE_DRAKANOID, NPC_RED_DRAKANOID, NPC_GREEN_DRAKANOID, NPC_BLACK_DRAKANOID};
-
-//This script is complicated
-//Instead of morphing Victor Nefarius we will have him control phase 1
-//And then have him spawn "Nefarian" for phase 2
-//When phase 2 starts Victor Nefarius will go invisible and stop attacking
-//If Nefarian reched home because nef killed the players then nef will trigger this guy to EnterEvadeMode
-//and allow players to start the event over
-//If nefarian dies then he will kill himself then he will be despawned in Nefarian script
-//To prevent players from doing the event twice
-
-// Dev note: Lord Victor Nefarius should despawn completely, then ~5 seconds later Nefarian should appear.
-
-struct MANGOS_DLL_DECL boss_victor_nefariusAI : public ScriptedAI, private DialogueHelper
-{
-    boss_victor_nefariusAI(Creature* pCreature) : ScriptedAI(pCreature),
-        DialogueHelper(aIntroDialogue)
-    {
-        // Select the 2 different drakes that we are going to use until despawned
-        // 5 possiblities for the first drake, 4 for the second, 20 total possiblites
-
-        // select two different numbers between 0..MAX_DRAKES-1
-        uint8 uiPos1 = urand(0, MAX_DRAKES - 1);
-        uint8 uiPos2 = (uiPos1 + urand(1, MAX_DRAKES - 1)) % MAX_DRAKES;
-
-        m_uiDrakeTypeOne = aPossibleDrake[uiPos1];
-        m_uiDrakeTypeTwo = aPossibleDrake[uiPos2];
-
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        InitializeDialogueHelper(m_pInstance);
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    uint32 m_uiSpawnedAdds;
-    uint32 m_uiAddSpawnTimer;
-    uint32 m_uiShadowBoltTimer;
-    uint32 m_uiFearTimer;
-    uint32 m_uiDrakeTypeOne;
-    uint32 m_uiDrakeTypeTwo;
-    uint32 m_uiShadowboltVolleyTimer;
-    uint32 m_uiSilenceTimer;
-    uint32 m_uiShadowCommandTimer;
-    uint32 m_uiShadowBlinkTimer;
-
-    void Reset()
-    {
-        // Check the map id because the same creature entry is involved in other scripted event in other instance
-        if (m_creature->GetMapId() != MAP_ID_BWL)
-            return;
-
-        m_uiSpawnedAdds             = 0;
-        m_uiAddSpawnTimer           = 10000;
-        m_uiShadowBoltTimer         = 3000;
-        m_uiFearTimer               = 8000;
-        m_uiShadowboltVolleyTimer   = 13000;
-        m_uiSilenceTimer            = 23000;
-        m_uiShadowCommandTimer      = 30000;
-        m_uiShadowBlinkTimer        = 40000;
-
-        // set gossip flag to begin the event
-        m_creature->SetFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_GOSSIP);
-
-        // Make visible if needed
-        if (m_creature->GetVisibility() != VISIBILITY_ON)
-            m_creature->SetVisibility(VISIBILITY_ON);
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_NEFARIAN, IN_PROGRESS);
-    }
-
-    void JustReachedHome()
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_NEFARIAN, FAIL);
-    }
-
-    void AttackStart(Unit* pWho)
-    {
-        if (m_creature->Attack(pWho, false))
-        {
-            m_creature->AddThreat(pWho);
-            m_creature->SetInCombatWith(pWho);
-            pWho->SetInCombatWith(m_creature);
-
-            // Only range attack - ToDo: research the distance
-            m_creature->GetMotionMaster()->MoveChase(pWho, 30.0f);
-        }
-    }
-
-    void JustSummoned(Creature* pSummoned)
-    {
-        if (m_creature->GetMapId() != MAP_ID_BWL)
-            return;
-
-        if (pSummoned->GetEntry() == NPC_NEFARIAN)
-        {
-            pSummoned->SetWalk(false);
-
-            // see boss_onyxia (also note the removal of this in boss_nefarian)
-            pSummoned->SetByteValue(UNIT_FIELD_BYTES_1, 3, UNIT_BYTE1_FLAG_ALWAYS_STAND | UNIT_BYTE1_FLAG_UNK_2);
-            pSummoned->SetLevitate(true);
-
-            // Let Nefarian fly towards combat area
-            pSummoned->GetMotionMaster()->MovePoint(1, aNefarianLocs[3].m_fX, aNefarianLocs[3].m_fY, aNefarianLocs[3].m_fZ);
-            DoScriptText(SAY_NEFARIAN_INTRO, pSummoned);
-        }
-        else
-        {
-            ++m_uiSpawnedAdds;
-
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-                pSummoned->AI()->AttackStart(pTarget);
-        }
-    }
-
-    void SummonedMovementInform(Creature* pSummoned, uint32 uiMotionType, uint32 uiPointId)
-    {
-        if (m_creature->GetMapId() != MAP_ID_BWL)
-            return;
-
-        // If Nefarian has reached combat area, let him attack
-        if (pSummoned->GetEntry() == NPC_NEFARIAN && uiMotionType == POINT_MOTION_TYPE && uiPointId == 1)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-                pSummoned->AI()->AttackStart(pTarget);
-        }
-    }
-
-    void SummonedCreatureJustDied(Creature* pSummoned)
-    {
-        if (m_creature->GetMapId() != MAP_ID_BWL)
-            return;
-
-        // Despawn self when Nefarian is killed
-        if (pSummoned->GetEntry() == NPC_NEFARIAN)
-            m_creature->ForcedDespawn();
-        else
-            pSummoned->CastSpell(pSummoned, SPELL_SUMMON_DRAKONID_BONES, true);
-    }
-
-    void JustDidDialogueStep(int32 iEntry)
-    {
-        // Start combat after the dialogue is finished
-        if (iEntry == SPELL_SHADOWBLINK)
-        {
-            m_creature->SetStandState(UNIT_STAND_STATE_STAND);
-            m_creature->SetFactionTemporary(FACTION_BLACK_DRAGON, TEMPFACTION_RESTORE_REACH_HOME);
-            DoCastSpellIfCan(m_creature, SPELL_NEFARIUS_BARRIER, CAST_TRIGGERED);
-            DoCastSpellIfCan(m_creature, SPELL_SHADOWBLINK_INTRO, CAST_TRIGGERED);
-            m_creature->SetInCombatWithZone();
-        }
-    }
-
-    void DoStartIntro()
-    {
-        StartNextDialogueText(SAY_GAMESBEGIN_1);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (m_creature->GetMapId() != MAP_ID_BWL)
-            return;
-
-        DialogueUpdate(uiDiff);
-
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Only do this if we haven't spawned nef yet
-        if (m_uiSpawnedAdds < MAX_DRAKE_SUMMONS)
-        {
-            // Shadowbolt Timer
-            if (m_uiShadowBoltTimer < uiDiff)
-            {
-                if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-                {
-                    if (DoCastSpellIfCan(pTarget, SPELL_SHADOWBOLT) == CAST_OK)
-                        m_uiShadowBoltTimer = urand(2000, 4000);
-                }
-            }
-            else
-                m_uiShadowBoltTimer -= uiDiff;
-
-            // Fear Timer
-            if (m_uiFearTimer < uiDiff)
-            {
-                if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 1))
-                {
-                    if (DoCastSpellIfCan(pTarget, SPELL_FEAR) == CAST_OK)
-                        m_uiFearTimer = urand(10000, 20000);
-                }
-            }
-            else
-                m_uiFearTimer -= uiDiff;
-
-            // Shadowbolt Volley
-            if (m_uiShadowboltVolleyTimer < uiDiff)
-            {
-                if (DoCastSpellIfCan(m_creature, SPELL_SHADOWBOLT_VOLLEY) == CAST_OK)
-                    m_uiShadowboltVolleyTimer = urand(19000, 28000);
-            }
-            else
-                m_uiShadowboltVolleyTimer -= uiDiff;
-
-            // Silence
-            if (m_uiSilenceTimer < uiDiff)
-            {
-                if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-                {
-                    if (DoCastSpellIfCan(pTarget, SPELL_SILENCE) == CAST_OK)
-                        m_uiSilenceTimer = urand(14000, 23000);
-                }
-            }
-            else
-                m_uiSilenceTimer -= uiDiff;
-
-            // Shadow Command
-            if (m_uiShadowCommandTimer < uiDiff)
-            {
-                if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 1))
-                {
-                    if (DoCastSpellIfCan(pTarget, SPELL_SHADOW_COMMAND) == CAST_OK)
-                        m_uiShadowCommandTimer = urand(24000, 30000);
-                }
-            }
-            else
-                m_uiShadowCommandTimer -= uiDiff;
-
-            // ShadowBlink
-            if (m_uiShadowBlinkTimer < uiDiff)
-            {
-                if (DoCastSpellIfCan(m_creature, SPELL_SHADOWBLINK) == CAST_OK)
-                    m_uiShadowBlinkTimer = urand(30000, 40000);
-            }
-            else
-                m_uiShadowBlinkTimer -= uiDiff;
-
-            // Add spawning mechanism
-            if (m_uiAddSpawnTimer < uiDiff)
-            {
-                //Spawn 2 random types of creatures at the 2 locations
-                uint32 uiCreatureId = 0;
-
-                // 1 in 3 chance it will be a chromatic
-                uiCreatureId = urand(0, 2) ? m_uiDrakeTypeOne : NPC_CHROMATIC_DRAKANOID;
-                m_creature->SummonCreature(uiCreatureId, aNefarianLocs[0].m_fX, aNefarianLocs[0].m_fY, aNefarianLocs[0].m_fZ, 5.000f, TEMPSUMMON_TIMED_OR_CORPSE_DESPAWN, 30000);
-
-                // 1 in 3 chance it will be a chromatic
-                uiCreatureId = urand(0, 2) ? m_uiDrakeTypeTwo : NPC_CHROMATIC_DRAKANOID;
-                m_creature->SummonCreature(uiCreatureId, aNefarianLocs[1].m_fX, aNefarianLocs[1].m_fY, aNefarianLocs[1].m_fZ, 5.000, TEMPSUMMON_TIMED_OR_CORPSE_DESPAWN, 30000);
-
-                //Begin phase 2 by spawning Nefarian
-                if (m_uiSpawnedAdds >= MAX_DRAKE_SUMMONS)
-                {
-                    //Inturrupt any spell casting
-                    m_creature->InterruptNonMeleeSpells(false);
-
-                    //Make super invis
-                    if (m_creature->GetVisibility() != VISIBILITY_OFF)
-                        m_creature->SetVisibility(VISIBILITY_OFF);
-
-                    // Spawn Nefarian
-                    // Summon as active, to be able to work proper!
-                    m_creature->SummonCreature(NPC_NEFARIAN, aNefarianLocs[2].m_fX, aNefarianLocs[2].m_fY, aNefarianLocs[2].m_fZ, 0, TEMPSUMMON_DEAD_DESPAWN, 0, true);
-                }
-
-                m_uiAddSpawnTimer = 4000;
-            }
-            else
-                m_uiAddSpawnTimer -= uiDiff;
-        }
-    }
-};
-
-CreatureAI* GetAI_boss_victor_nefarius(Creature* pCreature)
-{
-    return new boss_victor_nefariusAI(pCreature);
-}
-
-bool GossipHello_boss_victor_nefarius(Player* pPlayer, Creature* pCreature)
-{
-    if (pCreature->GetMapId() != MAP_ID_BWL)
-        return true;
-
-    pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_NEFARIUS_1 , GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+1);
-    pPlayer->SEND_GOSSIP_MENU(GOSSIP_TEXT_NEFARIUS_1, pCreature->GetObjectGuid());
-    return true;
-}
-
-bool GossipSelect_boss_victor_nefarius(Player* pPlayer, Creature* pCreature, uint32 uiSender, uint32 uiAction)
-{
-    if (pCreature->GetMapId() != MAP_ID_BWL)
-        return true;
-
-    switch(uiAction)
-    {
-        case GOSSIP_ACTION_INFO_DEF+1:
-            pCreature->HandleEmote(EMOTE_ONESHOT_TALK);
-            pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_NEFARIUS_2, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+2);
-            pPlayer->SEND_GOSSIP_MENU(GOSSIP_TEXT_NEFARIUS_2, pCreature->GetObjectGuid());
-            break;
-        case GOSSIP_ACTION_INFO_DEF+2:
-            pCreature->HandleEmote(EMOTE_ONESHOT_TALK);
-            pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_NEFARIUS_3, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+3);
-            pPlayer->SEND_GOSSIP_MENU(GOSSIP_TEXT_NEFARIUS_3, pCreature->GetObjectGuid());
-            break;
-        case GOSSIP_ACTION_INFO_DEF+3:
-            pCreature->RemoveFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_GOSSIP);
-            pPlayer->CLOSE_GOSSIP_MENU();
-            // Start the intro event
-            if (boss_victor_nefariusAI* pBossAI = dynamic_cast<boss_victor_nefariusAI*>(pCreature->AI()))
-                pBossAI->DoStartIntro();
-            break;
-    }
-    return true;
-}
-
-void AddSC_boss_victor_nefarius()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_victor_nefarius";
-    pNewScript->GetAI = &GetAI_boss_victor_nefarius;
-    pNewScript->pGossipHello = &GossipHello_boss_victor_nefarius;
-    pNewScript->pGossipSelect = &GossipSelect_boss_victor_nefarius;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/blackwing_lair/instance_blackwing_lair.cpp b/scripts/eastern_kingdoms/blackwing_lair/instance_blackwing_lair.cpp
deleted file mode 100644
index 008e7d9..0000000
--- a/scripts/eastern_kingdoms/blackwing_lair/instance_blackwing_lair.cpp
+++ /dev/null
@@ -1,251 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Instance_Blackwing_Lair
-SD%Complete: 0
-SDComment:
-SDCategory: Blackwing Lair
-EndScriptData */
-
-#include "precompiled.h"
-#include "blackwing_lair.h"
-
-instance_blackwing_lair::instance_blackwing_lair(Map* pMap) : ScriptedInstance(pMap)
-{
-    Initialize();
-}
-
-void instance_blackwing_lair::Initialize()
-{
-    memset(&m_auiEncounter, 0, sizeof(m_auiEncounter));
-}
-
-bool instance_blackwing_lair::IsEncounterInProgress() const
-{
-    for (uint8 i = 0; i < MAX_ENCOUNTER; ++i)
-    {
-        if (m_auiEncounter[i] == IN_PROGRESS)
-            return true;
-    }
-    return false;
-}
-
-void instance_blackwing_lair::OnCreatureCreate(Creature* pCreature)
-{
-    switch (pCreature->GetEntry())
-    {
-        case NPC_BLACKWING_TECHNICIAN:
-            // Sort creatures so we can get only the ones near Vaelastrasz
-            if (pCreature->IsWithinDist2d(aNefariusSpawnLoc[0], aNefariusSpawnLoc[1], 50.0f))
-                m_lTechnicianGuids.push_back(pCreature->GetObjectGuid());
-            break;
-        case NPC_MONSTER_GENERATOR:
-            m_lGeneratorGuids.push_back(pCreature->GetObjectGuid());
-            break;
-        case NPC_BLACKWING_ORB_TRIGGER:
-        case NPC_VAELASTRASZ:
-        case NPC_LORD_VICTOR_NEFARIUS:
-            m_mNpcEntryGuidStore[pCreature->GetEntry()] = pCreature->GetObjectGuid();
-            break;
-    }
-}
-
-void instance_blackwing_lair::OnObjectCreate(GameObject* pGo)
-{
-    switch(pGo->GetEntry())
-    {
-        case GO_DOOR_RAZORGORE_ENTER:
-        case GO_ORB_OF_DOMINATION:
-        case GO_DOOR_NEFARIAN:
-            break;
-        case GO_DOOR_RAZORGORE_EXIT:
-            if (m_auiEncounter[TYPE_RAZORGORE] == DONE)
-                pGo->SetGoState(GO_STATE_ACTIVE);
-            break;
-        case GO_DOOR_CHROMAGGUS_EXIT:
-            if (m_auiEncounter[TYPE_CHROMAGGUS] == DONE)
-                pGo->SetGoState(GO_STATE_ACTIVE);
-            break;
-        case GO_DOOR_VAELASTRASZ:
-            if (m_auiEncounter[TYPE_VAELASTRASZ] == DONE)
-                pGo->SetGoState(GO_STATE_ACTIVE);
-            break;
-        case GO_DOOR_LASHLAYER:
-            if (m_auiEncounter[TYPE_LASHLAYER] == DONE)
-                pGo->SetGoState(GO_STATE_ACTIVE);
-            break;
-        case GO_BLACK_DRAGON_EGG:
-            m_lDragonEggGuids.push_back(pGo->GetObjectGuid());
-            return;
-        case GO_DRAKONID_BONES:
-            m_lDrakonidBonesGuids.push_back(pGo->GetObjectGuid());
-            return;
-
-        default:
-            return;
-    }
-    m_mGoEntryGuidStore[pGo->GetEntry()] = pGo->GetObjectGuid();
-}
-
-void instance_blackwing_lair::SetData(uint32 uiType, uint32 uiData)
-{
-    switch(uiType)
-    {
-        case TYPE_RAZORGORE:
-            m_auiEncounter[uiType] = uiData;
-            DoUseDoorOrButton(GO_DOOR_RAZORGORE_ENTER);
-            if (uiData == DONE)
-                DoUseDoorOrButton(GO_DOOR_RAZORGORE_EXIT);
-            else if (uiData == FAIL)
-            {
-                // Reset the Orb of Domination and the eggs
-                DoToggleGameObjectFlags(GO_ORB_OF_DOMINATION, GO_FLAG_NO_INTERACT, true);
-
-                // ToDo: reset the Dragon Eggs
-            }
-            break;
-        case TYPE_VAELASTRASZ:
-            m_auiEncounter[uiType] = uiData;
-            // Prevent the players from running back to the first room; use if the encounter is not special
-            if (uiData != SPECIAL)
-                DoUseDoorOrButton(GO_DOOR_RAZORGORE_EXIT);
-            if (uiData == DONE)
-                DoUseDoorOrButton(GO_DOOR_VAELASTRASZ);
-            break;
-        case TYPE_LASHLAYER:
-            m_auiEncounter[uiType] = uiData;
-            if (uiData == DONE)
-                DoUseDoorOrButton(GO_DOOR_LASHLAYER);
-            break;
-        case TYPE_FIREMAW:
-        case TYPE_EBONROC:
-        case TYPE_FLAMEGOR:
-            m_auiEncounter[uiType] = uiData;
-            break;
-        case TYPE_CHROMAGGUS:
-            m_auiEncounter[uiType] = uiData;
-            if (uiData == DONE)
-                DoUseDoorOrButton(GO_DOOR_CHROMAGGUS_EXIT);
-            break;
-        case TYPE_NEFARIAN:
-            // Don't store the same thing twice
-            if (m_auiEncounter[uiType] == uiData)
-                break;
-            if (uiData == SPECIAL)
-            {
-                //handle missing spell 23362
-                Creature* pNefarius = GetSingleCreatureFromStorage(NPC_LORD_VICTOR_NEFARIUS);
-                if (!pNefarius)
-                    break;
-
-                for (GuidList::const_iterator itr = m_lDrakonidBonesGuids.begin(); itr != m_lDrakonidBonesGuids.end(); ++itr)
-                {
-                    // The Go script will handle the missing spell 23361
-                    if (GameObject* pGo = instance->GetGameObject(*itr))
-                        pGo->Use(pNefarius);
-                }
-                // Don't store special data
-                break;
-            }
-            m_auiEncounter[uiType] = uiData;
-            DoUseDoorOrButton(GO_DOOR_NEFARIAN);
-            // Cleanup the drakonid bones
-            if (uiData == FAIL)
-            {
-                for (GuidList::const_iterator itr = m_lDrakonidBonesGuids.begin(); itr != m_lDrakonidBonesGuids.end(); ++itr)
-                {
-                    if (GameObject* pGo = instance->GetGameObject(*itr))
-                        pGo->SetLootState(GO_JUST_DEACTIVATED);
-                }
-
-                m_lDrakonidBonesGuids.clear();
-            }
-            break;
-    }
-
-    if (uiData == DONE)
-    {
-        OUT_SAVE_INST_DATA;
-
-        std::ostringstream saveStream;
-        saveStream << m_auiEncounter[0] << " " << m_auiEncounter[1] << " " << m_auiEncounter[2] << " "
-            << m_auiEncounter[3] << " " << m_auiEncounter[4] << " " << m_auiEncounter[5] << " "
-            << m_auiEncounter[6] << " " << m_auiEncounter[7];
-
-        m_strInstData = saveStream.str();
-
-        SaveToDB();
-        OUT_SAVE_INST_DATA_COMPLETE;
-    }
-}
-
-void instance_blackwing_lair::Load(const char* chrIn)
-{
-    if (!chrIn)
-    {
-        OUT_LOAD_INST_DATA_FAIL;
-        return;
-    }
-
-    OUT_LOAD_INST_DATA(chrIn);
-
-    std::istringstream loadStream(chrIn);
-    loadStream >> m_auiEncounter[0] >> m_auiEncounter[1] >> m_auiEncounter[2] >> m_auiEncounter[3]
-        >> m_auiEncounter[4] >> m_auiEncounter[5] >> m_auiEncounter[6] >> m_auiEncounter[7];
-
-    for(uint8 i = 0; i < MAX_ENCOUNTER; ++i)
-    {
-        if (m_auiEncounter[i] == IN_PROGRESS)
-            m_auiEncounter[i] = NOT_STARTED;
-    }
-
-    OUT_LOAD_INST_DATA_COMPLETE;
-}
-
-uint32 instance_blackwing_lair::GetData(uint32 uiType)
-{
-    if (uiType < MAX_ENCOUNTER)
-        return m_auiEncounter[uiType];
-
-    return 0;
-}
-
-void instance_blackwing_lair::OnCreatureDeath(Creature* pCreature)
-{
-    if (pCreature->GetEntry() == NPC_GRETHOK_CONTROLLER)
-    {
-        DoToggleGameObjectFlags(GO_ORB_OF_DOMINATION, GO_FLAG_NO_INTERACT, false);
-
-        if (Creature* pOrbTrigger = GetSingleCreatureFromStorage(NPC_BLACKWING_ORB_TRIGGER))
-            pOrbTrigger->InterruptNonMeleeSpells(false);
-    }
-}
-
-InstanceData* GetInstanceData_instance_blackwing_lair(Map* pMap)
-{
-    return new instance_blackwing_lair(pMap);
-}
-
-void AddSC_instance_blackwing_lair()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "instance_blackwing_lair";
-    pNewScript->GetInstanceData = &GetInstanceData_instance_blackwing_lair;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/gilneas.cpp b/scripts/eastern_kingdoms/gilneas.cpp
new file mode 100644
index 0000000..8bd098e
--- /dev/null
+++ b/scripts/eastern_kingdoms/gilneas.cpp
@@ -0,0 +1,35 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Gilneas
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Gilneas
+EndScriptData */
+
+/* ContentData
+EndContentData */
+
+#include "precompiled.h"
+
+/*######
+#
+######*/
+
+void AddSC_gilneas()
+{
+}
diff --git a/scripts/eastern_kingdoms/gilneas_city.cpp b/scripts/eastern_kingdoms/gilneas_city.cpp
new file mode 100644
index 0000000..8834941
--- /dev/null
+++ b/scripts/eastern_kingdoms/gilneas_city.cpp
@@ -0,0 +1,35 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Gilneas City
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Gilneas City
+EndScriptData */
+
+/* ContentData
+EndContentData */
+
+#include "precompiled.h"
+
+/*######
+#
+######*/
+
+void AddSC_gilneas_city()
+{
+}
diff --git a/scripts/eastern_kingdoms/grim_batol/boss_drahga_shadowburner.cpp b/scripts/eastern_kingdoms/grim_batol/boss_drahga_shadowburner.cpp
new file mode 100644
index 0000000..1ff8d7b
--- /dev/null
+++ b/scripts/eastern_kingdoms/grim_batol/boss_drahga_shadowburner.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_drahga_shadowburner
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Grim Batol
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_drahga_shadowburner()
+{
+}
diff --git a/scripts/eastern_kingdoms/grim_batol/boss_erudax.cpp b/scripts/eastern_kingdoms/grim_batol/boss_erudax.cpp
new file mode 100644
index 0000000..82cf84c
--- /dev/null
+++ b/scripts/eastern_kingdoms/grim_batol/boss_erudax.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_erudax
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Grim Batol
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_erudax()
+{
+}
diff --git a/scripts/eastern_kingdoms/grim_batol/boss_forgemaster_throngus.cpp b/scripts/eastern_kingdoms/grim_batol/boss_forgemaster_throngus.cpp
new file mode 100644
index 0000000..029ca6b
--- /dev/null
+++ b/scripts/eastern_kingdoms/grim_batol/boss_forgemaster_throngus.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_forgemaster_throngus
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Grim Batol
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_forgemaster_throngus()
+{
+}
diff --git a/scripts/eastern_kingdoms/grim_batol/boss_general_umbriss.cpp b/scripts/eastern_kingdoms/grim_batol/boss_general_umbriss.cpp
new file mode 100644
index 0000000..a007474
--- /dev/null
+++ b/scripts/eastern_kingdoms/grim_batol/boss_general_umbriss.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_general_umbriss
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Grim Batol
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_general_umbriss()
+{
+}
diff --git a/scripts/eastern_kingdoms/grim_batol/grim_batol.h b/scripts/eastern_kingdoms/grim_batol/grim_batol.h
new file mode 100644
index 0000000..56a35aa
--- /dev/null
+++ b/scripts/eastern_kingdoms/grim_batol/grim_batol.h
@@ -0,0 +1,4 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software licensed under GPL version 2
+ * Please see the included DOCS/LICENSE.TXT for more information */
+ 
\ No newline at end of file
diff --git a/scripts/eastern_kingdoms/grim_batol/instance_grim_batol.cpp b/scripts/eastern_kingdoms/grim_batol/instance_grim_batol.cpp
new file mode 100644
index 0000000..b3d724f
--- /dev/null
+++ b/scripts/eastern_kingdoms/grim_batol/instance_grim_batol.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: instance_grim_batol
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Grim Batol
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_instance_grim_batol()
+{
+}
diff --git a/scripts/eastern_kingdoms/molten_core/boss_baron_geddon.cpp b/scripts/eastern_kingdoms/molten_core/boss_baron_geddon.cpp
deleted file mode 100644
index 5e476b1..0000000
--- a/scripts/eastern_kingdoms/molten_core/boss_baron_geddon.cpp
+++ /dev/null
@@ -1,144 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Baron_Geddon
-SD%Complete: 100
-SDComment: Armaggedon is not working properly (core issue)
-SDCategory: Molten Core
-EndScriptData */
-
-#include "precompiled.h"
-#include "molten_core.h"
-
-enum
-{
-    EMOTE_SERVICE               = -1409000,
-
-    SPELL_INFERNO               = 19695,
-    SPELL_IGNITE_MANA           = 19659,
-    SPELL_LIVING_BOMB           = 20475,
-    SPELL_ARMAGEDDON            = 20478
-};
-
-struct MANGOS_DLL_DECL boss_baron_geddonAI : public ScriptedAI
-{
-    boss_baron_geddonAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    bool m_bIsArmageddon;
-    uint32 m_uiInfernoTimer;
-    uint32 m_uiIgniteManaTimer;
-    uint32 m_uiLivingBombTimer;
-
-    void Reset()
-    {
-        m_bIsArmageddon = false;
-        m_uiInfernoTimer = 45000;
-        m_uiIgniteManaTimer = 30000;
-        m_uiLivingBombTimer = 35000;
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_GEDDON, IN_PROGRESS);
-    }
-
-    void JustDied(Unit* pKiller)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_GEDDON, DONE);
-    }
-
-    void JustReachedHome()
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_GEDDON, NOT_STARTED);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        if (m_bIsArmageddon)                                // Do nothing untill armageddon triggers
-            return;
-
-        // If we are <2% hp cast Armageddom
-        if (m_creature->GetHealthPercent() <= 2.0f && !m_bIsArmageddon)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_ARMAGEDDON, CAST_INTERRUPT_PREVIOUS) == CAST_OK)
-            {
-                DoScriptText(EMOTE_SERVICE, m_creature);
-                m_bIsArmageddon = true;
-                return;
-            }
-        }
-
-        // Inferno_Timer
-        if (m_uiInfernoTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_INFERNO) == CAST_OK)
-                m_uiInfernoTimer = 45000;
-        }
-        else
-            m_uiInfernoTimer -= uiDiff;
-
-        // Ignite Mana Timer
-        if (m_uiIgniteManaTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_IGNITE_MANA) == CAST_OK)
-                m_uiIgniteManaTimer = 30000;
-        }
-        else
-            m_uiIgniteManaTimer -= uiDiff;
-
-        // Living Bomb Timer
-        if (m_uiLivingBombTimer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-            {
-                if (DoCastSpellIfCan(pTarget, SPELL_LIVING_BOMB) == CAST_OK)
-                    m_uiLivingBombTimer = 35000;
-            }
-        }
-        else
-            m_uiLivingBombTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_baron_geddon(Creature* pCreature)
-{
-    return new boss_baron_geddonAI(pCreature);
-}
-
-void AddSC_boss_baron_geddon()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_baron_geddon";
-    pNewScript->GetAI = &GetAI_boss_baron_geddon;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/molten_core/boss_garr.cpp b/scripts/eastern_kingdoms/molten_core/boss_garr.cpp
deleted file mode 100644
index 3a23c61..0000000
--- a/scripts/eastern_kingdoms/molten_core/boss_garr.cpp
+++ /dev/null
@@ -1,187 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Garr
-SD%Complete: 50
-SDComment: Garr's enrage is missing
-SDCategory: Molten Core
-EndScriptData */
-
-#include "precompiled.h"
-#include "molten_core.h"
-
-enum
-{
-    // Garr spells
-    SPELL_ANTIMAGICPULSE        = 19492,
-    SPELL_MAGMASHACKLES         = 19496,
-    SPELL_ENRAGE                = 19516,                    // TODO Stacking enrage (stacks to 10 times)
-
-    // Add spells
-    SPELL_ERUPTION              = 19497,
-    SPELL_MASSIVE_ERUPTION      = 20483,                    // TODO possible on death
-    SPELL_IMMOLATE              = 20294,
-    SPELL_SEPARATION_ANXIETY    = 23492,                    // Used if separated too far from Garr, 21095 use unknown.
-};
-
-struct MANGOS_DLL_DECL boss_garrAI : public ScriptedAI
-{
-    boss_garrAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    uint32 m_uiAntiMagicPulseTimer;
-    uint32 m_uiMagmaShacklesTimer;
-
-    void Reset()
-    {
-        m_uiAntiMagicPulseTimer = 25000;
-        m_uiMagmaShacklesTimer = 15000;
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_GARR, IN_PROGRESS);
-    }
-
-    void JustDied(Unit* pKiller)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_GARR, DONE);
-    }
-
-    void JustReachedHome()
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_GARR, FAIL);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // AntiMagicPulse_Timer
-        if (m_uiAntiMagicPulseTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_ANTIMAGICPULSE) == CAST_OK)
-                m_uiAntiMagicPulseTimer = urand(10000, 15000);
-        }
-        else
-            m_uiAntiMagicPulseTimer -= uiDiff;
-
-        // MagmaShackles_Timer
-        if (m_uiMagmaShacklesTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_MAGMASHACKLES) == CAST_OK)
-                m_uiMagmaShacklesTimer = urand(8000, 12000);
-        }
-        else
-            m_uiMagmaShacklesTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-struct MANGOS_DLL_DECL mob_fireswornAI : public ScriptedAI
-{
-    mob_fireswornAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    uint32 m_uiImmolateTimer;
-    uint32 m_uiSeparationCheckTimer;
-
-    void Reset()
-    {
-        m_uiImmolateTimer = urand(4000, 8000);              // These times are probably wrong
-        m_uiSeparationCheckTimer = 5000;
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Immolate_Timer
-        if (m_uiImmolateTimer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-            {
-                if (DoCastSpellIfCan(pTarget, SPELL_IMMOLATE) == CAST_OK)
-                    m_uiImmolateTimer = urand(5000, 10000);
-            }
-        }
-        else m_uiImmolateTimer -= uiDiff;
-
-        if (m_uiSeparationCheckTimer < uiDiff)
-        {
-            // Distance guesswork, but should be ok
-            Creature* pGarr = m_pInstance->GetSingleCreatureFromStorage(NPC_GARR);
-            if (pGarr && pGarr->isAlive() && !m_creature->IsWithinDist2d(pGarr->GetPositionX(), pGarr->GetPositionY(), 50.0f))
-                DoCastSpellIfCan(m_creature, SPELL_SEPARATION_ANXIETY, CAST_TRIGGERED);
-
-            m_uiSeparationCheckTimer = 5000;
-        }
-        else
-            m_uiSeparationCheckTimer -= uiDiff;
-
-        // Cast Erruption and let them die
-        if (m_creature->GetHealthPercent() <= 10.0f)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(), SPELL_ERUPTION);
-            m_creature->SetDeathState(JUST_DIED);
-            m_creature->RemoveCorpse();
-        }
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_garr(Creature* pCreature)
-{
-    return new boss_garrAI(pCreature);
-}
-
-CreatureAI* GetAI_mob_firesworn(Creature* pCreature)
-{
-    return new mob_fireswornAI(pCreature);
-}
-
-void AddSC_boss_garr()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_garr";
-    pNewScript->GetAI = &GetAI_boss_garr;
-    pNewScript->RegisterSelf();
-
-    pNewScript = new Script;
-    pNewScript->Name = "mob_firesworn";
-    pNewScript->GetAI = &GetAI_mob_firesworn;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/molten_core/boss_gehennas.cpp b/scripts/eastern_kingdoms/molten_core/boss_gehennas.cpp
deleted file mode 100644
index 25aa81b..0000000
--- a/scripts/eastern_kingdoms/molten_core/boss_gehennas.cpp
+++ /dev/null
@@ -1,130 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Gehennas
-SD%Complete: 90
-SDComment:
-SDCategory: Molten Core
-EndScriptData */
-
-#include "precompiled.h"
-#include "molten_core.h"
-
-enum
-{
-    SPELL_SHADOW_BOLT           = 19728,                    // 19729 exists too, but can be reflected
-    SPELL_RAIN_OF_FIRE          = 19717,
-    SPELL_GEHENNAS_CURSE        = 19716
-};
-
-struct MANGOS_DLL_DECL boss_gehennasAI : public ScriptedAI
-{
-    boss_gehennasAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    uint32 m_uiShadowBoltTimer;
-    uint32 m_uiRainOfFireTimer;
-    uint32 m_uiGehennasCurseTimer;
-
-    void Reset()
-    {
-        m_uiShadowBoltTimer = 6000;
-        m_uiRainOfFireTimer = 10000;
-        m_uiGehennasCurseTimer = 12000;
-    }
-
-    void Aggro(Unit* pwho)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_GEHENNAS, IN_PROGRESS);
-    }
-
-    void JustDied(Unit* pKiller)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_GEHENNAS, DONE);
-    }
-
-    void JustReachedHome()
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_GEHENNAS, FAIL);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // ShadowBolt Timer
-        if (m_uiShadowBoltTimer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 1))
-            {
-                if (DoCastSpellIfCan(pTarget, SPELL_SHADOW_BOLT) == CAST_OK)
-                    m_uiShadowBoltTimer = 7000;
-            }
-            else                                            // In case someone attempts soloing, we don't need to scan for targets every tick
-                m_uiShadowBoltTimer = 7000;
-        }
-        else
-            m_uiShadowBoltTimer -= uiDiff;
-
-        // Rain of Fire Timer
-        if (m_uiRainOfFireTimer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-            {
-                if (DoCastSpellIfCan(pTarget, SPELL_RAIN_OF_FIRE) == CAST_OK)
-                    m_uiRainOfFireTimer = urand(4000, 12000);
-            }
-        }
-        else
-            m_uiRainOfFireTimer -= uiDiff;
-
-        // GehennasCurse Timer
-        if (m_uiGehennasCurseTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_GEHENNAS_CURSE) == CAST_OK)
-                m_uiGehennasCurseTimer = 30000;
-        }
-        else
-            m_uiGehennasCurseTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_gehennas(Creature* pCreature)
-{
-    return new boss_gehennasAI(pCreature);
-}
-
-void AddSC_boss_gehennas()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_gehennas";
-    pNewScript->GetAI = &GetAI_boss_gehennas;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/molten_core/boss_golemagg.cpp b/scripts/eastern_kingdoms/molten_core/boss_golemagg.cpp
deleted file mode 100644
index 8338571..0000000
--- a/scripts/eastern_kingdoms/molten_core/boss_golemagg.cpp
+++ /dev/null
@@ -1,202 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Golemagg
-SD%Complete: 80
-SDComment: Rager need to be tied to boss (Despawn on boss-death)
-SDCategory: Molten Core
-EndScriptData */
-
-#include "precompiled.h"
-#include "molten_core.h"
-
-enum
-{
-    SPELL_MAGMA_SPLASH      = 13879,
-    SPELL_PYROBLAST         = 20228,
-    SPELL_EARTHQUAKE        = 19798,
-    SPELL_ENRAGE            = 19953,
-    SPELL_GOLEMAGG_TRUST    = 20553,
-
-    // Core Rager
-    EMOTE_LOW_HP            = -1409002,
-    SPELL_MANGLE            = 19820
-};
-
-struct MANGOS_DLL_DECL boss_golemaggAI : public ScriptedAI
-{
-    boss_golemaggAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    uint32 m_uiPyroblastTimer;
-    uint32 m_uiEarthquakeTimer;
-    uint32 m_uiBuffTimer;
-    bool m_bEnraged;
-
-    void Reset()
-    {
-        m_uiPyroblastTimer  = 7 * IN_MILLISECONDS;
-        m_uiEarthquakeTimer = 3 * IN_MILLISECONDS;
-        m_uiBuffTimer       = 1.5 * IN_MILLISECONDS;
-        m_bEnraged = false;
-
-        m_creature->CastSpell(m_creature, SPELL_MAGMA_SPLASH, true);
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_GOLEMAGG, IN_PROGRESS);
-    }
-
-    void JustDied(Unit* pKiller)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_GOLEMAGG, DONE);
-    }
-
-    void JustReachedHome()
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_GOLEMAGG, FAIL);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Pyroblast
-        if (m_uiPyroblastTimer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-            {
-                if (DoCastSpellIfCan(pTarget, SPELL_PYROBLAST) == CAST_OK)
-                    m_uiPyroblastTimer = 7*IN_MILLISECONDS;
-            }
-        }
-        else
-            m_uiPyroblastTimer -= uiDiff;
-
-        // Enrage
-        if (!m_bEnraged && m_creature->GetHealthPercent() < 10.0f)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_ENRAGE) == CAST_OK)
-                m_bEnraged = true;
-        }
-
-        // Earthquake
-        if (m_bEnraged)
-        {
-            if (m_uiEarthquakeTimer < uiDiff)
-            {
-                if (DoCastSpellIfCan(m_creature, SPELL_EARTHQUAKE) == CAST_OK)
-                    m_uiEarthquakeTimer = 3*IN_MILLISECONDS;
-            }
-            else
-                m_uiEarthquakeTimer -= uiDiff;
-        }
-
-        // Golemagg's Trust
-        if (m_uiBuffTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_GOLEMAGG_TRUST);
-            m_uiBuffTimer = 1.5*IN_MILLISECONDS;
-        }
-        else
-            m_uiBuffTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-struct MANGOS_DLL_DECL mob_core_ragerAI : public ScriptedAI
-{
-    mob_core_ragerAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-    uint32 m_uiMangleTimer;
-
-    void Reset()
-    {
-        m_uiMangleTimer = 7*IN_MILLISECONDS;                 // These times are probably wrong
-    }
-
-    void DamageTaken(Unit* pDoneBy, uint32& uiDamage)
-    {
-        if (m_creature->GetHealthPercent() < 50.0f)
-        {
-            if (m_pInstance && m_pInstance->GetData(TYPE_GOLEMAGG) != DONE)
-            {
-                DoScriptText(EMOTE_LOW_HP, m_creature);
-                m_creature->SetHealth(m_creature->GetMaxHealth());
-                uiDamage = 0;
-            }
-        }
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Mangle
-        if (m_uiMangleTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_MANGLE) == CAST_OK)
-                m_uiMangleTimer = 10*IN_MILLISECONDS;
-        }
-        else
-            m_uiMangleTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_golemagg(Creature* pCreature)
-{
-    return new boss_golemaggAI(pCreature);
-}
-
-CreatureAI* GetAI_mob_core_rager(Creature* pCreature)
-{
-    return new mob_core_ragerAI(pCreature);
-}
-
-void AddSC_boss_golemagg()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_golemagg";
-    pNewScript->GetAI = &GetAI_boss_golemagg;
-    pNewScript->RegisterSelf();
-
-    pNewScript = new Script;
-    pNewScript->Name = "mob_core_rager";
-    pNewScript->GetAI = &GetAI_mob_core_rager;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/molten_core/boss_lucifron.cpp b/scripts/eastern_kingdoms/molten_core/boss_lucifron.cpp
deleted file mode 100644
index 2f9322b..0000000
--- a/scripts/eastern_kingdoms/molten_core/boss_lucifron.cpp
+++ /dev/null
@@ -1,125 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Lucifron
-SD%Complete: 100
-SDComment:
-SDCategory: Molten Core
-EndScriptData */
-
-#include "precompiled.h"
-#include "molten_core.h"
-
-enum
-{
-    SPELL_IMPENDINGDOOM     = 19702,
-    SPELL_LUCIFRONCURSE     = 19703,
-    SPELL_SHADOWSHOCK       = 19460
-};
-
-struct MANGOS_DLL_DECL boss_lucifronAI : public ScriptedAI
-{
-    boss_lucifronAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    uint32 m_uiImpendingDoomTimer;
-    uint32 m_uiLucifronCurseTimer;
-    uint32 m_uiShadowShockTimer;
-
-    void Reset()
-    {
-        m_uiImpendingDoomTimer = 10000;
-        m_uiLucifronCurseTimer = 20000;
-        m_uiShadowShockTimer   = 6000;
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_LUCIFRON, IN_PROGRESS);
-    }
-
-    void JustDied(Unit* pKiller)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_LUCIFRON, DONE);
-    }
-
-    void JustReachedHome()
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_LUCIFRON, FAIL);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Impending doom timer
-        if (m_uiImpendingDoomTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_IMPENDINGDOOM) == CAST_OK)
-                m_uiImpendingDoomTimer = 20000;
-        }
-        else
-            m_uiImpendingDoomTimer -= uiDiff;
-
-        // Lucifron's curse timer
-        if (m_uiLucifronCurseTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_LUCIFRONCURSE) == CAST_OK)
-                m_uiLucifronCurseTimer = 20000;
-        }
-        else
-            m_uiLucifronCurseTimer -= uiDiff;
-
-        // Shadowshock
-        if (m_uiShadowShockTimer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-            {
-                if (DoCastSpellIfCan(pTarget, SPELL_SHADOWSHOCK) == CAST_OK)
-                    m_uiShadowShockTimer = 6000;
-            }
-        }
-        else
-            m_uiShadowShockTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_lucifron(Creature* pCreature)
-{
-    return new boss_lucifronAI(pCreature);
-}
-
-void AddSC_boss_lucifron()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_lucifron";
-    pNewScript->GetAI = &GetAI_boss_lucifron;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/molten_core/boss_magmadar.cpp b/scripts/eastern_kingdoms/molten_core/boss_magmadar.cpp
deleted file mode 100644
index 629bd39..0000000
--- a/scripts/eastern_kingdoms/molten_core/boss_magmadar.cpp
+++ /dev/null
@@ -1,134 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Magmadar
-SD%Complete: 75
-SDComment: Lavabomb needs still core support
-SDCategory: Molten Core
-EndScriptData */
-
-#include "precompiled.h"
-#include "molten_core.h"
-
-enum
-{
-    EMOTE_GENERIC_FRENZY_KILL   = -1000001,
-
-    SPELL_FRENZY                = 19451,
-    SPELL_MAGMASPIT             = 19449,                    // This is actually a buff he gives himself
-    SPELL_PANIC                 = 19408,
-    SPELL_LAVABOMB              = 19411,                    // This calls a dummy server side effect that isn't implemented yet
-    SPELL_LAVABOMB_ALT          = 19428
-};
-
-struct MANGOS_DLL_DECL boss_magmadarAI : public ScriptedAI
-{
-    boss_magmadarAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    uint32 m_uiFrenzyTimer;
-    uint32 m_uiPanicTimer;
-    uint32 m_uiLavabombTimer;
-
-    void Reset()
-    {
-        m_uiFrenzyTimer = 30000;
-        m_uiPanicTimer = 7000;
-        m_uiLavabombTimer = 12000;
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        DoCastSpellIfCan(m_creature, SPELL_MAGMASPIT, true);
-
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_MAGMADAR, IN_PROGRESS);
-    }
-
-    void JustDied(Unit* pKiller)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_MAGMADAR, DONE);
-    }
-
-    void JustReachedHome()
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_MAGMADAR, NOT_STARTED);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Frenzy_Timer
-        if (m_uiFrenzyTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_FRENZY) == CAST_OK)
-            {
-                DoScriptText(EMOTE_GENERIC_FRENZY_KILL, m_creature);
-                m_uiFrenzyTimer = 15000;
-            }
-        }
-        else
-            m_uiFrenzyTimer -= uiDiff;
-
-        // Panic_Timer
-        if (m_uiPanicTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_PANIC) == CAST_OK)
-                m_uiPanicTimer = 30000;
-        }
-        else
-            m_uiPanicTimer -= uiDiff;
-
-        // Lavabomb_Timer
-        if (m_uiLavabombTimer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-            {
-                if (DoCastSpellIfCan(pTarget, SPELL_LAVABOMB) == CAST_OK)
-                    m_uiLavabombTimer = 12000;
-            }
-        }
-        else
-            m_uiLavabombTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_magmadar(Creature* pCreature)
-{
-    return new boss_magmadarAI(pCreature);
-}
-
-void AddSC_boss_magmadar()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_magmadar";
-    pNewScript->GetAI = &GetAI_boss_magmadar;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/molten_core/boss_majordomo_executus.cpp b/scripts/eastern_kingdoms/molten_core/boss_majordomo_executus.cpp
deleted file mode 100644
index 7c7f307..0000000
--- a/scripts/eastern_kingdoms/molten_core/boss_majordomo_executus.cpp
+++ /dev/null
@@ -1,478 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Majordomo_Executus
-SD%Complete: 95
-SDComment: Minor weaknesses
-SDCategory: Molten Core
-EndScriptData */
-
-#include "precompiled.h"
-#include "molten_core.h"
-#include "TemporarySummon.h"
-
-enum
-{
-    SAY_AGGRO               = -1409003,
-    SAY_SLAY                = -1409005,
-    SAY_SPECIAL             = -1409006,                     // Use unknown
-    SAY_LAST_ADD            = -1409019,                     // When only one add remaining
-    SAY_DEFEAT_1            = -1409007,
-    SAY_DEFEAT_2            = -1409020,
-    SAY_DEFEAT_3            = -1409021,
-
-    SAY_SUMMON_0            = -1409023,
-    SAY_SUMMON_1            = -1409024,
-    SAY_SUMMON_MAJ          = -1409008,
-    SAY_ARRIVAL1_RAG        = -1409009,
-    SAY_ARRIVAL2_MAJ        = -1409010,
-    SAY_ARRIVAL3_RAG        = -1409011,
-    SAY_ARRIVAL4_MAJ        = -1409022,
-
-    GOSSIP_ITEM_SUMMON_1    = -3409000,
-    GOSSIP_ITEM_SUMMON_2    = -3409001,
-    GOSSIP_ITEM_SUMMON_3    = -3409002,
-
-    TEXT_ID_SUMMON_1        = 4995,
-    TEXT_ID_SUMMON_2        = 5011,
-    TEXT_ID_SUMMON_3        = 5012,
-
-    SPELL_MAGIC_REFLECTION  = 20619,
-    SPELL_DAMAGE_REFLECTION = 21075,
-    SPELL_BLASTWAVE         = 20229,
-    SPELL_AEGIS             = 20620,
-    SPELL_TELEPORT          = 20618,
-
-    SPELL_TELEPORT_SELF     = 19484,
-    SPELL_SUMMON_RAGNAROS   = 19774,
-    SPELL_ELEMENTAL_FIRE    = 19773,
-    SPELL_RAGNA_EMERGE      = 20568,
-};
-
-struct MANGOS_DLL_DECL boss_majordomoAI : public ScriptedAI
-{
-    boss_majordomoAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (instance_molten_core*)pCreature->GetInstanceData();
-        m_bHasEncounterFinished = false;
-        Reset();
-    }
-
-    instance_molten_core* m_pInstance;
-
-    uint32 m_uiMagicReflectionTimer;
-    uint32 m_uiDamageReflectionTimer;
-    uint32 m_uiBlastwaveTimer;
-    uint32 m_uiTeleportTimer;
-    uint32 m_uiAegisTimer;
-    uint32 m_uiSpeechTimer;
-
-    ObjectGuid m_ragnarosGuid;
-    bool m_bHasEncounterFinished;
-    uint8 m_uiAddsKilled;
-    uint8 m_uiSpeech;
-    GuidList m_luiMajordomoAddsGUIDs;
-
-    void Reset()
-    {
-        m_uiMagicReflectionTimer  = 30000;                  // Damage reflection first so we alternate
-        m_uiDamageReflectionTimer = 15000;
-        m_uiBlastwaveTimer = 10000;
-        m_uiTeleportTimer = 20000;
-        m_uiAegisTimer = 5000;
-        m_uiSpeechTimer = 1000;
-
-        m_uiAddsKilled = 0;
-        m_uiSpeech = 0;
-    }
-
-    void KilledUnit(Unit* pVictim)
-    {
-        if (urand(0, 4))
-            return;
-
-        DoScriptText(SAY_SLAY, m_creature);
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        if (pWho->GetTypeId() == TYPEID_UNIT && pWho->GetEntry() == NPC_RAGNAROS)
-            return;
-
-        DoScriptText(SAY_AGGRO, m_creature);
-
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_MAJORDOMO, IN_PROGRESS);
-    }
-
-    void JustReachedHome()
-    {
-        if (!m_bHasEncounterFinished)                        // Normal reached home, FAIL
-        {
-            if (m_pInstance)
-                m_pInstance->SetData(TYPE_MAJORDOMO, FAIL);
-        }
-        else                                                 // Finished the encounter, DONE
-        {
-            // Exit combat
-            m_creature->RemoveAllAuras();
-            m_creature->DeleteThreatList();
-            m_creature->CombatStop(true);
-            m_creature->SetLootRecipient(NULL);
-
-            // Set friendly
-            m_creature->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_OOC_NOT_ATTACKABLE);
-            m_creature->setFaction(FACTION_MAJORDOMO_FRIENDLY);
-
-            // Reset orientation
-            m_creature->SetFacingTo(m_aMajordomoLocations[0].m_fO);
-
-            // Start his speech
-            m_uiSpeechTimer = 1;                        // At next tick
-            m_uiSpeech = 1;
-
-            m_pInstance->SetData(TYPE_MAJORDOMO, DONE);
-        }
-    }
-
-    void StartSummonEvent(Player* pPlayer)
-    {
-        m_creature->RemoveFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_GOSSIP);
-
-        // Prevent possible exploits with double summoning
-        if (Creature* pRagnaros = m_creature->GetMap()->GetCreature(m_ragnarosGuid))
-            return;
-
-        DoScriptText(SAY_SUMMON_0, m_creature, pPlayer);
-
-        m_uiSpeechTimer = 5000;
-        m_uiSpeech = 10;
-    }
-
-    void JustRespawned()
-    {
-        // Encounter finished, need special treatment
-        if (m_bHasEncounterFinished)
-        {
-            // This needs to be set to be able to resummon Ragnaros
-            m_creature->SetFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_GOSSIP);
-
-            // Relocate here
-            debug_log("SD2: boss_majordomo_executus: Relocate to Ragnaros' Lair on respawn");
-            m_creature->GetMap()->CreatureRelocation(m_creature, m_aMajordomoLocations[1].m_fX, m_aMajordomoLocations[1].m_fY, m_aMajordomoLocations[1].m_fZ, m_aMajordomoLocations[1].m_fO);
-            m_creature->SetActiveObjectState(false);
-        }
-    }
-
-    void JustSummoned(Creature* pSummoned)
-    {
-        if (pSummoned->GetEntry() == NPC_FLAMEWAKER_HEALER || pSummoned->GetEntry() == NPC_FLAMEWAKER_ELITE)
-        {
-            m_luiMajordomoAddsGUIDs.push_back(pSummoned->GetObjectGuid());
-            pSummoned->SetRespawnDelay(2*HOUR);
-        }
-        else if (pSummoned->GetEntry() == NPC_RAGNAROS)
-        {
-            m_ragnarosGuid = pSummoned->GetObjectGuid();
-            pSummoned->CastSpell(pSummoned, SPELL_RAGNA_EMERGE, false);
-        }
-    }
-
-    void JustDied(Unit* pKiller)
-    {
-        if (pKiller->GetTypeId() == TYPEID_UNIT && pKiller->GetEntry() == NPC_RAGNAROS)
-            DoScriptText(SAY_ARRIVAL4_MAJ, m_creature);
-    }
-
-    void CorpseRemoved(uint32 &uiRespawnDelay)
-    {
-        uiRespawnDelay = urand(2 * HOUR, 3 * HOUR);
-
-        if (m_bHasEncounterFinished)
-        {
-            // Needed for proper respawn handling
-            debug_log("SD2: boss_majordomo_executus: Set active");
-            m_creature->SetActiveObjectState(true);
-        }
-    }
-
-    void SummonedCreatureJustDied(Creature* pSummoned)
-    {
-        if (pSummoned->GetEntry() == NPC_FLAMEWAKER_HEALER || pSummoned->GetEntry() == NPC_FLAMEWAKER_ELITE)
-        {
-            m_uiAddsKilled += 1;
-
-            // Yell if only one Add alive
-            if (m_uiAddsKilled == m_luiMajordomoAddsGUIDs.size() - 1)
-                DoScriptText(SAY_LAST_ADD, m_creature);
-
-            // All adds are killed, retreat
-            else if (m_uiAddsKilled == m_luiMajordomoAddsGUIDs.size())
-            {
-                m_bHasEncounterFinished = true;
-                m_creature->GetMotionMaster()->MoveTargetedHome();
-            }
-        }
-    }
-
-    // Unsummon Majordomo adds
-    void UnsummonMajordomoAdds()
-    {
-        for (GuidList::const_iterator itr = m_luiMajordomoAddsGUIDs.begin(); itr != m_luiMajordomoAddsGUIDs.end(); ++itr)
-        {
-            if (Creature* pAdd = m_creature->GetMap()->GetCreature(*itr))
-                if (pAdd->IsTemporarySummon())
-                    ((TemporarySummon*)pAdd)->UnSummon();
-        }
-
-        m_luiMajordomoAddsGUIDs.clear();
-    }
-
-    void DamageTaken(Unit* pDealer, uint32& uiDamage)
-    {
-        if (uiDamage > m_creature->GetHealth())
-        {
-            uiDamage = 0;
-            DoCastSpellIfCan(m_creature, SPELL_AEGIS, CAST_TRIGGERED);
-        }
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        // Handling of his combat-end speech and Ragnaros summoning
-        if (m_uiSpeech)
-        {
-            if (m_uiSpeechTimer < uiDiff)
-            {
-                switch (m_uiSpeech)
-                {
-                    // Majordomo retreat event
-                    case 1:
-                        DoScriptText(SAY_DEFEAT_1, m_creature);
-                        m_uiSpeechTimer = 7500;
-                        ++m_uiSpeech;
-                        break;
-                    case 2:
-                        DoScriptText(SAY_DEFEAT_2, m_creature);
-                        m_uiSpeechTimer = 8000;
-                        ++m_uiSpeech;
-                        break;
-                    case 3:
-                        DoScriptText(SAY_DEFEAT_3, m_creature);
-                        m_uiSpeechTimer = 21500;
-                        ++m_uiSpeech;
-                        break;
-                    case 4:
-                        DoCastSpellIfCan(m_creature, SPELL_TELEPORT_SELF);
-                        // TODO - when should they be unsummoned?
-                        // TODO - also unclear how this should be handled, as of range issues
-                        m_uiSpeechTimer = 900;
-                        ++m_uiSpeech;
-                        break;
-                    case 5:
-                        // Majordomo is away now, remove his adds
-                        UnsummonMajordomoAdds();
-                        m_uiSpeech = 0;
-                        break;
-
-                    // Ragnaros Summon Event
-                    case 10:
-                        DoScriptText(SAY_SUMMON_1, m_creature);
-                        ++m_uiSpeech;
-                        m_uiSpeechTimer = 1000;
-                        break;
-                    case 11:
-                        DoCastSpellIfCan(m_creature, SPELL_SUMMON_RAGNAROS);
-                        // TODO - Move along, this expects to be handled with mmaps
-                        m_creature->GetMotionMaster()->MovePoint(1, 831.079590f, -816.023193f, -229.023270f);
-                        ++m_uiSpeech;
-                        m_uiSpeechTimer = 7000;
-                        break;
-                    case 12:
-                        // Reset orientation
-                        if (GameObject* pLavaSteam = m_pInstance->GetSingleGameObjectFromStorage(GO_LAVA_STEAM))
-                            m_creature->SetFacingToObject(pLavaSteam);
-                        m_uiSpeechTimer = 4500;
-                        ++m_uiSpeech;
-                        break;
-                    case 13:
-                        DoScriptText(SAY_SUMMON_MAJ, m_creature);
-                        ++m_uiSpeech;
-                        m_uiSpeechTimer = 8000;
-                        break;
-                    case 14:
-                        // Summon Ragnaros
-                        if (m_pInstance)
-                            if (GameObject* pGo = m_pInstance->GetSingleGameObjectFromStorage(GO_LAVA_STEAM))
-                                m_creature->SummonCreature(NPC_RAGNAROS, pGo->GetPositionX(), pGo->GetPositionY(), pGo->GetPositionZ(), fmod(m_creature->GetOrientation() + M_PI, 2*M_PI), TEMPSUMMON_TIMED_OR_DEAD_DESPAWN, 2*HOUR*IN_MILLISECONDS);
-                        ++m_uiSpeech;
-                        m_uiSpeechTimer = 8700;
-                        break;
-                    case 15:
-                        if (Creature* pRagnaros = m_creature->GetMap()->GetCreature(m_ragnarosGuid))
-                            DoScriptText(SAY_ARRIVAL1_RAG, pRagnaros);
-                        ++m_uiSpeech;
-                        m_uiSpeechTimer = 11700;
-                        break;
-                    case 16:
-                        DoScriptText(SAY_ARRIVAL2_MAJ, m_creature);
-                        ++m_uiSpeech;
-                        m_uiSpeechTimer = 8700;
-                        break;
-                    case 17:
-                        if (Creature* pRagnaros = m_creature->GetMap()->GetCreature(m_ragnarosGuid))
-                            DoScriptText(SAY_ARRIVAL3_RAG, pRagnaros);
-                        ++m_uiSpeech;
-                        m_uiSpeechTimer = 16500;
-                        break;
-                    case 18:
-                        if (Creature* pRagnaros = m_creature->GetMap()->GetCreature(m_ragnarosGuid))
-                            pRagnaros->CastSpell(m_creature, SPELL_ELEMENTAL_FIRE, false);
-                        // Rest of summoning speech is handled by Ragnaros, as Majordomo will be dead
-                        m_uiSpeech = 0;
-                        break;
-                }
-            }
-            else
-                m_uiSpeechTimer -= uiDiff;
-        }
-
-        // When encounter finished, no need to do anything anymore (important for moving home after victory)
-        if (m_bHasEncounterFinished)
-            return;
-
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Cast Ageis to heal self
-        if (m_uiAegisTimer <= uiDiff)
-            m_uiAegisTimer = 0;
-        else
-            m_uiAegisTimer -= uiDiff;
-
-        if (m_creature->GetHealthPercent() < 90.0f && !m_uiAegisTimer)
-        {
-            DoCastSpellIfCan(m_creature, SPELL_AEGIS);
-            m_uiAegisTimer = 10000;
-        }
-
-        // Magic Reflection Timer
-        if (m_uiMagicReflectionTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_MAGIC_REFLECTION) == CAST_OK)
-                m_uiMagicReflectionTimer = 30000;
-        }
-        else
-            m_uiMagicReflectionTimer -= uiDiff;
-
-        // Damage Reflection Timer
-        if (m_uiDamageReflectionTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_DAMAGE_REFLECTION) == CAST_OK)
-                m_uiDamageReflectionTimer = 30000;
-        }
-        else
-            m_uiDamageReflectionTimer -= uiDiff;
-
-        // Teleports the target to the heated rock in the center of the area
-        if (m_uiTeleportTimer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 1))
-            {
-                if (DoCastSpellIfCan(pTarget, SPELL_TELEPORT) == CAST_OK)
-                    m_uiTeleportTimer = 20000;
-            }
-        }
-        else
-            m_uiTeleportTimer -= uiDiff;
-
-        // Blastwave Timer
-        if (m_uiBlastwaveTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_BLASTWAVE) == CAST_OK)
-                m_uiBlastwaveTimer = 10000;
-        }
-        else
-            m_uiBlastwaveTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_majordomo(Creature* pCreature)
-{
-    return new boss_majordomoAI(pCreature);
-}
-
-bool GossipHello_boss_majordomo(Player* pPlayer, Creature* pCreature)
-{
-    if (instance_molten_core* pInstance = (instance_molten_core*)pCreature->GetInstanceData())
-    {
-        if (pInstance->GetData(TYPE_RAGNAROS) == NOT_STARTED || pInstance->GetData(TYPE_RAGNAROS) == FAIL)
-        {
-            pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_SUMMON_1, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF+1);
-            pPlayer->SEND_GOSSIP_MENU(TEXT_ID_SUMMON_1, pCreature->GetObjectGuid());
-        }
-    }
-    return true;
-}
-
-bool GossipSelect_boss_majordomo(Player* pPlayer, Creature* pCreature, uint32 sender, uint32 uiAction)
-{
-    switch (uiAction)
-    {
-        case GOSSIP_ACTION_INFO_DEF + 1:
-            pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_SUMMON_2, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 2);
-            pPlayer->SEND_GOSSIP_MENU(TEXT_ID_SUMMON_2, pCreature->GetObjectGuid());
-            break;
-        case GOSSIP_ACTION_INFO_DEF + 2:
-            pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_SUMMON_3, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 3);
-            pPlayer->SEND_GOSSIP_MENU(TEXT_ID_SUMMON_3, pCreature->GetObjectGuid());
-            break;
-        case GOSSIP_ACTION_INFO_DEF + 3:
-            pPlayer->CLOSE_GOSSIP_MENU();
-            if (boss_majordomoAI* pMajoAI = dynamic_cast<boss_majordomoAI*>(pCreature->AI()))
-                pMajoAI->StartSummonEvent(pPlayer);
-            break;
-    }
-
-    return true;
-}
-
-bool EffectDummyCreature_spell_boss_majordomo(Unit* pCaster, uint32 uiSpellId, SpellEffectIndex uiEffIndex, Creature* pCreatureTarget)
-{
-    if (uiSpellId != SPELL_TELEPORT_SELF || uiEffIndex != EFFECT_INDEX_0)
-        return false;
-
-    pCreatureTarget->SetFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_GOSSIP);
-    pCreatureTarget->NearTeleportTo(m_aMajordomoLocations[1].m_fX, m_aMajordomoLocations[1].m_fY, m_aMajordomoLocations[1].m_fZ, m_aMajordomoLocations[1].m_fO, true);
-    // TODO - some visibility update?
-    return true;
-}
-
-void AddSC_boss_majordomo()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_majordomo";
-    pNewScript->pEffectDummyNPC = &EffectDummyCreature_spell_boss_majordomo;
-    pNewScript->pGossipHello = &GossipHello_boss_majordomo;
-    pNewScript->pGossipSelect = &GossipSelect_boss_majordomo;
-    pNewScript->GetAI = &GetAI_boss_majordomo;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/molten_core/boss_ragnaros.cpp b/scripts/eastern_kingdoms/molten_core/boss_ragnaros.cpp
deleted file mode 100644
index d9cfd07..0000000
--- a/scripts/eastern_kingdoms/molten_core/boss_ragnaros.cpp
+++ /dev/null
@@ -1,343 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Ragnaros
-SD%Complete: 70
-SDComment: Melee/ Range Combat behavior is not correct(any enemy in melee range, not only getVictim), Some abilities are missing
-SDCategory: Molten Core
-EndScriptData */
-
-#include "precompiled.h"
-#include "molten_core.h"
-
-/* There have been quite some bugs about his spells, keep this as reference untill all finished
- * Missing features (based on wowwiki)
- *   Lava Burst - this spell is handled by Go 178088 which is summoned by spells 21886, 21900 - 21907
- */
-
-enum
-{
-    SAY_ARRIVAL5_RAG            = -1409012,
-    SAY_REINFORCEMENTS_1        = -1409013,
-    SAY_REINFORCEMENTS_2        = -1409014,
-    SAY_HAMMER                  = -1409015,
-    SAY_WRATH                   = -1409016,
-    SAY_KILL                    = -1409017,
-    SAY_MAGMABURST              = -1409018,
-
-    SPELL_WRATH_OF_RAGNAROS     = 20566,
-    SPELL_ELEMENTAL_FIRE        = 20564,
-    SPELL_MAGMA_BLAST           = 20565,                    // Ranged attack if nobody is in melee range
-    SPELL_MELT_WEAPON           = 21387,
-    SPELL_RAGNA_SUBMERGE        = 21107,                    // Stealth aura
-    SPELL_RAGNA_EMERGE          = 20568,                    // Emerge from lava
-    SPELL_ELEMENTAL_FIRE_KILL   = 19773,
-    SPELL_MIGHT_OF_RAGNAROS     = 21154,
-    SPELL_INTENSE_HEAT          = 21155,
-
-    MAX_ADDS_IN_SUBMERGE        = 8,
-    NPC_SON_OF_FLAME            = 12143,
-    NPC_FLAME_OF_RAGNAROS       = 13148,
-};
-
-struct MANGOS_DLL_DECL boss_ragnarosAI : public Scripted_NoMovementAI
-{
-    boss_ragnarosAI(Creature* pCreature) : Scripted_NoMovementAI(pCreature)
-    {
-        m_pInstance = (instance_molten_core*)pCreature->GetInstanceData();
-        m_uiEnterCombatTimer = 0;
-        m_bHasAggroYelled = false;
-        Reset();
-    }
-
-    instance_molten_core* m_pInstance;
-
-    uint32 m_uiEnterCombatTimer;
-    uint32 m_uiWrathOfRagnarosTimer;
-    uint32 m_uiHammerTimer;
-    uint32 m_uiMagmaBlastTimer;
-    uint32 m_uiElementalFireTimer;
-    uint32 m_uiSubmergeTimer;
-    uint32 m_uiAttackTimer;
-    uint32 m_uiAddCount;
-
-    bool m_bHasAggroYelled;
-    bool m_bHasYelledMagmaBurst;
-    bool m_bHasSubmergedOnce;
-    bool m_bIsSubmerged;
-
-    void Reset()
-    {
-        m_uiWrathOfRagnarosTimer = 30000;                   // TODO Research more, according to wowwiki 25s, but timers up to 34s confirmed
-        m_uiHammerTimer = 11000;                            // TODO wowwiki states 20-30s timer, but ~11s confirmed
-        m_uiMagmaBlastTimer = 2000;
-        m_uiElementalFireTimer = 3000;
-        m_uiSubmergeTimer = 3*MINUTE*IN_MILLISECONDS;
-        m_uiAttackTimer = 90*IN_MILLISECONDS;
-        m_uiAddCount = 0;
-
-        m_bHasYelledMagmaBurst = false;
-        m_bHasSubmergedOnce = false;
-        m_bIsSubmerged = false;
-    }
-
-    void KilledUnit(Unit* pVictim)
-    {
-        if (pVictim->GetTypeId() != TYPEID_PLAYER)
-            return;
-
-        if (urand(0, 3))
-            return;
-
-        DoScriptText(SAY_KILL, m_creature);
-    }
-
-    void JustDied(Unit* pKiller)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_RAGNAROS, DONE);
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        if (pWho->GetTypeId() == TYPEID_UNIT && pWho->GetEntry() == NPC_MAJORDOMO)
-            return;
-
-        DoCastSpellIfCan(m_creature, SPELL_MELT_WEAPON);
-
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_RAGNAROS, IN_PROGRESS);
-    }
-
-    void EnterEvadeMode()
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_RAGNAROS, FAIL);
-
-        // Reset flag if had been submerged
-        if (m_creature->HasFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE))
-            m_creature->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
-
-        ScriptedAI::EnterEvadeMode();
-    }
-
-    void SummonedCreatureJustDied(Creature* pSummmoned)
-    {
-        // If all Sons of Flame are dead, trigger emerge
-        if (pSummmoned->GetEntry() == NPC_SON_OF_FLAME)
-        {
-            m_uiAddCount--;
-
-            // If last add killed then emerge soonish
-            if (m_uiAddCount == 0)
-                m_uiAttackTimer = std::min(m_uiAttackTimer, (uint32)1000);
-        }
-    }
-
-    void JustSummoned(Creature* pSummoned)
-    {
-        if (pSummoned->GetEntry() == NPC_SON_OF_FLAME)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-                pSummoned->AI()->AttackStart(pTarget);
-
-            ++m_uiAddCount;
-        }
-        else if (pSummoned->GetEntry() == NPC_FLAME_OF_RAGNAROS)
-            pSummoned->CastSpell(pSummoned, SPELL_INTENSE_HEAT, true, NULL, NULL, m_creature->GetObjectGuid());
-    }
-
-    void SpellHitTarget(Unit* pTarget, const SpellEntry* pSpell)
-    {
-        // As Majordomo is now killed, the last timer (until attacking) must be handled with ragnaros script
-        if (pSpell->Id == SPELL_ELEMENTAL_FIRE_KILL && pTarget->GetTypeId() == TYPEID_UNIT && pTarget->GetEntry() == NPC_MAJORDOMO)
-            m_uiEnterCombatTimer = 10000;
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (m_uiEnterCombatTimer)
-        {
-            if (m_uiEnterCombatTimer <=  uiDiff)
-            {
-                if (!m_bHasAggroYelled)
-                {
-                    m_uiEnterCombatTimer = 3000;
-                    m_bHasAggroYelled = true;
-                    DoScriptText(SAY_ARRIVAL5_RAG, m_creature);
-                }
-                else
-                {
-                    m_uiEnterCombatTimer = 0;
-                    // If we don't remove this passive flag, he will be unattackable after evading, this way he will enter combat
-                    m_creature->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_PASSIVE);
-                    if (m_pInstance)
-                    {
-                        if (Player* pPlayer = m_pInstance->GetPlayerInMap(true, false))
-                        {
-                            m_creature->AI()->AttackStart(pPlayer);
-                            return;
-                        }
-                    }
-                }
-            }
-            else
-                m_uiEnterCombatTimer -= uiDiff;
-        }
-        // Return since we have no target
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        if (m_bIsSubmerged)
-        {
-            // Timer to check when Ragnaros should emerge (is set to soonish, when last add is killed)
-            if (m_uiAttackTimer < uiDiff)
-            {
-                // Become emerged again
-                DoCastSpellIfCan(m_creature, SPELL_RAGNA_EMERGE);
-                m_creature->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
-                m_uiSubmergeTimer = 3*MINUTE*IN_MILLISECONDS;
-                m_uiMagmaBlastTimer = 3000;                 // Delay the magma blast after emerge
-                m_bIsSubmerged = false;
-            }
-            else
-                m_uiAttackTimer -= uiDiff;
-
-            // Do nothing while submerged
-            return;
-        }
-
-        // Wrath Of Ragnaros Timer
-        if (m_uiWrathOfRagnarosTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_WRATH_OF_RAGNAROS) == CAST_OK)
-            {
-                DoScriptText(SAY_WRATH, m_creature);
-                m_uiWrathOfRagnarosTimer = 30000;
-            }
-        }
-        else
-            m_uiWrathOfRagnarosTimer -= uiDiff;
-
-        // Elemental Fire Timer
-        if (m_uiElementalFireTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_ELEMENTAL_FIRE) == CAST_OK)
-                m_uiElementalFireTimer = urand(10000, 14000);
-        }
-        else
-            m_uiElementalFireTimer -= uiDiff;
-
-        // Hammer of Ragnaros
-        if (m_uiHammerTimer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0, SPELL_MIGHT_OF_RAGNAROS, SELECT_FLAG_POWER_MANA))
-            {
-                if (DoCastSpellIfCan(pTarget, SPELL_MIGHT_OF_RAGNAROS) == CAST_OK)
-                {
-                    DoScriptText(SAY_HAMMER, m_creature);
-                    m_uiHammerTimer = 11000;
-                }
-            }
-            else
-                m_uiHammerTimer = 11000;
-        }
-        else
-            m_uiHammerTimer -= uiDiff;
-
-        // Submerge Timer
-        if (m_uiSubmergeTimer < uiDiff)
-        {
-            // Submerge and attack again after 90 secs
-            DoCastSpellIfCan(m_creature, SPELL_RAGNA_SUBMERGE, CAST_INTERRUPT_PREVIOUS);
-            m_creature->HandleEmote(EMOTE_ONESHOT_SUBMERGE);
-            m_bIsSubmerged = true;
-            m_uiAttackTimer = 90*IN_MILLISECONDS;
-
-            m_creature->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
-
-            // Say dependend if first time or not
-            DoScriptText(!m_bHasSubmergedOnce ? SAY_REINFORCEMENTS_1 : SAY_REINFORCEMENTS_2, m_creature);
-            m_bHasSubmergedOnce = true;
-
-            // Summon 8 elementals at random points around the boss
-            float fX, fY, fZ;
-            for(uint8 i = 0; i < MAX_ADDS_IN_SUBMERGE; ++i)
-            {
-                m_creature->GetRandomPoint(m_creature->GetPositionX(), m_creature->GetPositionY(), m_creature->GetPositionZ(), 30.0f, fX, fY, fZ);
-                m_creature->SummonCreature(NPC_SON_OF_FLAME, fX, fY, fZ, 0.0f, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 1000);
-            }
-
-            return;
-        }
-        else
-            m_uiSubmergeTimer -= uiDiff;
-
-        // TODO this actually should select _any_ enemy in melee range, not only the tank
-        // Range check for melee target, if nobody is found in range, then cast magma blast on random
-        // If we are within range melee the target
-        if (m_creature->IsNonMeleeSpellCasted(false) || !m_creature->getVictim())
-            return;
-
-        if (m_creature->CanReachWithMeleeAttack(m_creature->getVictim()))
-        {
-            // Make sure our attack is ready
-            if (m_creature->isAttackReady())
-            {
-                m_creature->AttackerStateUpdate(m_creature->getVictim());
-                m_creature->resetAttackTimer();
-                m_bHasYelledMagmaBurst = false;
-            }
-        }
-        else
-        {
-            // Magma Burst Timer
-            if (m_uiMagmaBlastTimer < uiDiff)
-            {
-                if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-                {
-                    if (DoCastSpellIfCan(pTarget, SPELL_MAGMA_BLAST) == CAST_OK)
-                    {
-                        if (!m_bHasYelledMagmaBurst)
-                        {
-                            DoScriptText(SAY_MAGMABURST, m_creature);
-                            m_bHasYelledMagmaBurst = true;
-                        }
-                        m_uiMagmaBlastTimer = 1000;          // Spamm this!
-                    }
-                }
-            }
-            else
-                m_uiMagmaBlastTimer -= uiDiff;
-        }
-    }
-};
-
-CreatureAI* GetAI_boss_ragnaros(Creature* pCreature)
-{
-    return new boss_ragnarosAI(pCreature);
-}
-
-void AddSC_boss_ragnaros()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_ragnaros";
-    pNewScript->GetAI = &GetAI_boss_ragnaros;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/molten_core/boss_shazzrah.cpp b/scripts/eastern_kingdoms/molten_core/boss_shazzrah.cpp
deleted file mode 100644
index 3429bbf..0000000
--- a/scripts/eastern_kingdoms/molten_core/boss_shazzrah.cpp
+++ /dev/null
@@ -1,156 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Shazzrah
-SD%Complete: 75
-SDComment: Teleport NYI (need core support, remove hack here when implemented)
-SDCategory: Molten Core
-EndScriptData */
-
-#include "precompiled.h"
-#include "molten_core.h"
-
-enum
-{
-    SPELL_ARCANE_EXPLOSION          = 19712,
-    SPELL_SHAZZRAH_CURSE            = 19713,
-    SPELL_MAGIC_GROUNDING           = 19714,
-    SPELL_COUNTERSPELL              = 19715,
-    SPELL_GATE_OF_SHAZZRAH          = 23138                 // effect spell: 23139
-};
-
-struct MANGOS_DLL_DECL boss_shazzrahAI : public ScriptedAI
-{
-    boss_shazzrahAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    uint32 m_uiArcaneExplosionTimer;
-    uint32 m_uiShazzrahCurseTimer;
-    uint32 m_uiMagicGroundingTimer;
-    uint32 m_uiCounterspellTimer;
-    uint32 m_uiBlinkTimer;
-
-    void Reset()
-    {
-        m_uiArcaneExplosionTimer = 6000;
-        m_uiShazzrahCurseTimer = 10000;
-        m_uiMagicGroundingTimer = 24000;
-        m_uiCounterspellTimer = 15000;
-        m_uiBlinkTimer = 30000;
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_SHAZZRAH, IN_PROGRESS);
-    }
-
-    void JustDied(Unit* pKiller)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_SHAZZRAH, DONE);
-    }
-
-    void JustReachedHome()
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_SHAZZRAH, NOT_STARTED);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Arcane Explosion Timer
-        if (m_uiArcaneExplosionTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_ARCANE_EXPLOSION) == CAST_OK)
-                m_uiArcaneExplosionTimer = urand(5000, 9000);
-        }
-        else
-            m_uiArcaneExplosionTimer -= uiDiff;
-
-        // Shazzrah Curse Timer
-        if (m_uiShazzrahCurseTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_SHAZZRAH_CURSE) == CAST_OK)
-                m_uiShazzrahCurseTimer = 20000;
-        }
-        else
-            m_uiShazzrahCurseTimer -= uiDiff;
-
-        // Magic Grounding Timer
-        if (m_uiMagicGroundingTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_MAGIC_GROUNDING) == CAST_OK)
-                m_uiMagicGroundingTimer = 35000;
-        }
-        else
-            m_uiMagicGroundingTimer -= uiDiff;
-
-        // Counterspell Timer
-        if (m_uiCounterspellTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_COUNTERSPELL) == CAST_OK)
-                m_uiCounterspellTimer = urand(16000, 20000);
-        }
-        else
-            m_uiCounterspellTimer -= uiDiff;
-
-        // Blink Timer
-        if (m_uiBlinkTimer < uiDiff)
-        {
-            // Teleporting him to a random gamer and casting Arcane Explosion after that.
-            if (DoCastSpellIfCan(m_creature, SPELL_GATE_OF_SHAZZRAH) == CAST_OK)
-            {
-                // manual, until added effect of dummy properly -- TODO REMOVE HACK
-                if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-                    m_creature->NearTeleportTo(pTarget->GetPositionX(), pTarget->GetPositionY(), pTarget->GetPositionZ(), m_creature->GetOrientation());
-                DoResetThreat();
-
-                DoCastSpellIfCan(m_creature, SPELL_ARCANE_EXPLOSION, CAST_TRIGGERED);
-
-                m_uiBlinkTimer = 45000;
-            }
-        }
-        else
-            m_uiBlinkTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_shazzrah(Creature* pCreature)
-{
-    return new boss_shazzrahAI(pCreature);
-}
-
-void AddSC_boss_shazzrah()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_shazzrah";
-    pNewScript->GetAI = &GetAI_boss_shazzrah;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/molten_core/boss_sulfuron_harbinger.cpp b/scripts/eastern_kingdoms/molten_core/boss_sulfuron_harbinger.cpp
deleted file mode 100644
index 107a811..0000000
--- a/scripts/eastern_kingdoms/molten_core/boss_sulfuron_harbinger.cpp
+++ /dev/null
@@ -1,242 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Sulfuron_Harbringer
-SD%Complete: 80
-SDComment: Spells Dark strike and Flamespear need confirmation
-SDCategory: Molten Core
-EndScriptData */
-
-#include "precompiled.h"
-#include "molten_core.h"
-
-enum
-{
-    SPELL_DARK_STRIKE           = 19777,                    // Wowhead Linked to add - need confirmation!
-    SPELL_DEMORALIZING_SHOUT    = 19778,
-    SPELL_INSPIRE               = 19779,
-    SPELL_HAND_OF_RAGNAROS      = 19780,
-    SPELL_FLAMESPEAR            = 19781,
-
-    // Adds Spells
-    SPELL_HEAL                  = 19775,
-    SPELL_SHADOWWORD_PAIN       = 19776,
-    SPELL_IMMOLATE              = 20294
-};
-
-struct MANGOS_DLL_DECL boss_sulfuronAI : public ScriptedAI
-{
-    boss_sulfuronAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    uint32 m_uiDarkstrikeTimer;
-    uint32 m_uiDemoralizingShoutTimer;
-    uint32 m_uiInspireTimer;
-    uint32 m_uiKnockdownTimer;
-    uint32 m_uiFlamespearTimer;
-
-    void Reset()
-    {
-        m_uiDarkstrikeTimer = 10000;
-        m_uiDemoralizingShoutTimer = 15000;
-        m_uiInspireTimer = 3000;
-        m_uiKnockdownTimer = 6000;
-        m_uiFlamespearTimer = 2000;
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_SULFURON, IN_PROGRESS);
-    }
-
-    void JustDied(Unit* pKiller)
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_SULFURON, DONE);
-    }
-
-    void JustReachedHome()
-    {
-        if (m_pInstance)
-            m_pInstance->SetData(TYPE_SULFURON, FAIL);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Demoralizing Shout Timer
-        if (m_uiDemoralizingShoutTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_DEMORALIZING_SHOUT) == CAST_OK)
-                m_uiDemoralizingShoutTimer = urand(15000, 20000);
-        }
-        else
-            m_uiDemoralizingShoutTimer -= uiDiff;
-
-        // Inspire Timer
-        if (m_uiInspireTimer < uiDiff)
-        {
-            Creature* pTarget = NULL;
-            std::list<Creature*> pList = DoFindFriendlyMissingBuff(45.0f, SPELL_INSPIRE);
-            if (!pList.empty())
-            {
-                std::list<Creature*>::iterator i = pList.begin();
-                advance(i, (rand()%pList.size()));
-                pTarget = (*i);
-            }
-
-            if (!pTarget)
-                pTarget = m_creature;
-
-            if (DoCastSpellIfCan(pTarget, SPELL_INSPIRE) == CAST_OK)
-                m_uiInspireTimer = 10000;
-        }
-        else
-            m_uiInspireTimer -= uiDiff;
-
-        // Hand of Ragnaros Timer
-        if (m_uiKnockdownTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_HAND_OF_RAGNAROS) == CAST_OK)
-                m_uiKnockdownTimer = urand(12000, 15000);
-        }
-        else
-            m_uiKnockdownTimer -= uiDiff;
-
-        // Flamespear Timer
-        if (m_uiFlamespearTimer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-            {
-                if (DoCastSpellIfCan(pTarget, SPELL_FLAMESPEAR) == CAST_OK)
-                    m_uiFlamespearTimer = urand(12000, 16000);
-            }
-        }
-        else
-            m_uiFlamespearTimer -= uiDiff;
-
-        // Dark Strike Timer
-        if (m_uiDarkstrikeTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_DARK_STRIKE) == CAST_OK)
-                m_uiDarkstrikeTimer = urand(15000, 18000);
-        }
-        else
-            m_uiDarkstrikeTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-struct MANGOS_DLL_DECL mob_flamewaker_priestAI : public ScriptedAI
-{
-    mob_flamewaker_priestAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    uint32 m_uiHealTimer;
-    uint32 m_uiShadowWordPainTimer;
-    uint32 m_uiImmolateTimer;
-
-    ScriptedInstance* m_pInstance;
-
-    void Reset()
-    {
-        m_uiHealTimer = urand(15000, 30000);
-        m_uiShadowWordPainTimer = 2000;
-        m_uiImmolateTimer = 8000;
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Casting Heal to Sulfuron or other Guards.
-        if (m_uiHealTimer < uiDiff)
-        {
-            if (Unit* pUnit = DoSelectLowestHpFriendly(60.0f, 1))
-            {
-                if (DoCastSpellIfCan(pUnit, SPELL_HEAL) == CAST_OK)
-                    m_uiHealTimer = urand(15000, 20000);
-            }
-        }
-        else
-            m_uiHealTimer -= uiDiff;
-
-        // ShadowWord Pain Timer
-        if (m_uiShadowWordPainTimer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-            {
-                if (DoCastSpellIfCan(pTarget, SPELL_SHADOWWORD_PAIN) == CAST_OK)
-                    m_uiShadowWordPainTimer = urand(18000, 26000);
-            }
-        }
-        else
-            m_uiShadowWordPainTimer -= uiDiff;
-
-        // Immolate Timer
-        if (m_uiImmolateTimer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-            {
-                if (DoCastSpellIfCan(pTarget, SPELL_IMMOLATE) == CAST_OK)
-                    m_uiImmolateTimer = urand(15000, 25000);
-            }
-        }
-        else
-            m_uiImmolateTimer -= uiDiff;
-
-        DoMeleeAttackIfReady();
-    }
-};
-
-CreatureAI* GetAI_boss_sulfuron(Creature* pCreature)
-{
-    return new boss_sulfuronAI(pCreature);
-}
-
-CreatureAI* GetAI_mob_flamewaker_priest(Creature* pCreature)
-{
-    return new mob_flamewaker_priestAI(pCreature);
-}
-
-void AddSC_boss_sulfuron()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_sulfuron";
-    pNewScript->GetAI = &GetAI_boss_sulfuron;
-    pNewScript->RegisterSelf();
-
-    pNewScript = new Script;
-    pNewScript->Name = "mob_flamewaker_priest";
-    pNewScript->GetAI = &GetAI_mob_flamewaker_priest;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/molten_core/instance_molten_core.cpp b/scripts/eastern_kingdoms/molten_core/instance_molten_core.cpp
deleted file mode 100644
index f6684ab..0000000
--- a/scripts/eastern_kingdoms/molten_core/instance_molten_core.cpp
+++ /dev/null
@@ -1,253 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Instance_Molten_Core
-SD%Complete: 25
-SDComment: Majordomos and Ragnaros Event missing
-SDCategory: Molten Core
-EndScriptData */
-
-#include "precompiled.h"
-#include "molten_core.h"
-
-instance_molten_core::instance_molten_core(Map* pMap) : ScriptedInstance(pMap)
-{
-    Initialize();
-}
-
-void instance_molten_core::Initialize()
-{
-    memset(&m_auiEncounter, 0, sizeof(m_auiEncounter));
-}
-
-bool instance_molten_core::IsEncounterInProgress() const
-{
-    for (uint8 i = 0; i < MAX_ENCOUNTER; ++i)
-    {
-        if (m_auiEncounter[i] == IN_PROGRESS)
-            return true;
-    }
-
-    return false;
-}
-
-void instance_molten_core::OnPlayerEnter(Player* pPlayer)
-{
-    // Summon Majordomo if can
-    DoSpawnMajordomoIfCan(true);
-}
-
-void instance_molten_core::OnCreatureCreate(Creature* pCreature)
-{
-    switch (pCreature->GetEntry())
-    {
-        // Bosses
-        case NPC_GARR:
-        case NPC_SULFURON:
-        case NPC_MAJORDOMO:
-            m_mNpcEntryGuidStore[pCreature->GetEntry()] = pCreature->GetObjectGuid();
-            break;
-    }
-}
-
-void instance_molten_core::OnObjectCreate(GameObject* pGo)
-{
-    switch(pGo->GetEntry())
-    {
-        // Runes
-        case GO_RUNE_KRESS:
-        case GO_RUNE_MOHN:
-        case GO_RUNE_BLAZ:
-        case GO_RUNE_MAZJ:
-        case GO_RUNE_ZETH:
-        case GO_RUNE_THERI:
-        case GO_RUNE_KORO:
-
-        // Majordomo event chest
-        case GO_CACHE_OF_THE_FIRE_LORD:
-        // Ragnaros GOs
-        case GO_LAVA_STEAM:
-        case GO_LAVA_SPLASH:
-            m_mGoEntryGuidStore[pGo->GetEntry()] = pGo->GetObjectGuid();
-            break;
-    }
-}
-
-void instance_molten_core::SetData(uint32 uiType, uint32 uiData)
-{
-    switch(uiType)
-    {
-        case TYPE_LUCIFRON:
-            m_auiEncounter[uiType] = uiData;
-            break;
-        case TYPE_MAGMADAR:
-            m_auiEncounter[uiType] = uiData;
-            if (uiData == DONE)
-                DoUseDoorOrButton(GO_RUNE_KRESS);
-            break;
-        case TYPE_GEHENNAS:
-            m_auiEncounter[uiType] = uiData;
-            if (uiData == DONE)
-                DoUseDoorOrButton(GO_RUNE_MOHN);
-            break;
-        case TYPE_GARR:
-            m_auiEncounter[uiType] = uiData;
-            if (uiData == DONE)
-                DoUseDoorOrButton(GO_RUNE_BLAZ);
-            break;
-        case TYPE_SHAZZRAH:
-            m_auiEncounter[uiType] = uiData;
-            if (uiData == DONE)
-                DoUseDoorOrButton(GO_RUNE_MAZJ);
-            break;
-        case TYPE_GEDDON:
-            m_auiEncounter[uiType] = uiData;
-            if (uiData == DONE)
-                DoUseDoorOrButton(GO_RUNE_ZETH);
-            break;
-        case TYPE_GOLEMAGG:
-            m_auiEncounter[uiType] = uiData;
-            if (uiData == DONE)
-                DoUseDoorOrButton(GO_RUNE_THERI);
-            break;
-        case TYPE_SULFURON:
-            m_auiEncounter[uiType] = uiData;
-            if (uiData == DONE)
-                DoUseDoorOrButton(GO_RUNE_KORO);
-            break;
-        case TYPE_MAJORDOMO:
-            m_auiEncounter[uiType] = uiData;
-            if (uiData == DONE)
-                DoRespawnGameObject(GO_CACHE_OF_THE_FIRE_LORD, HOUR);
-            break;
-        case TYPE_RAGNAROS:
-            m_auiEncounter[uiType] = uiData;
-            break;
-    }
-
-    // Check if Majordomo can be summoned
-    if (uiData == DONE)
-        DoSpawnMajordomoIfCan(false);
-
-    if (uiData == DONE)
-    {
-        OUT_SAVE_INST_DATA;
-
-        std::ostringstream saveStream;
-        saveStream << m_auiEncounter[0] << " " << m_auiEncounter[1] << " " << m_auiEncounter[2] << " "
-            << m_auiEncounter[3] << " " << m_auiEncounter[4] << " " << m_auiEncounter[5] << " "
-            << m_auiEncounter[6] << " " << m_auiEncounter[7] << " " << m_auiEncounter[8] << " "
-            << m_auiEncounter[9];
-
-        m_strInstData = saveStream.str();
-
-        SaveToDB();
-        OUT_SAVE_INST_DATA_COMPLETE;
-    }
-}
-
-uint32 instance_molten_core::GetData(uint32 uiType)
-{
-    if (uiType < MAX_ENCOUNTER)
-        return m_auiEncounter[uiType];
-
-    return 0;
-}
-
-// Handle Majordomo summon here
-void instance_molten_core::DoSpawnMajordomoIfCan(bool bByPlayerEnter)
-{
-    // If both Majordomo and Ragnaros events are finished, return
-    if (m_auiEncounter[TYPE_MAJORDOMO] == DONE && m_auiEncounter[TYPE_RAGNAROS] == DONE)
-        return;
-
-    // If already spawned return
-    if (GetSingleCreatureFromStorage(NPC_MAJORDOMO, true))
-        return;
-
-    // Check if all rune bosses are done
-    for(uint8 i = TYPE_MAGMADAR; i < TYPE_MAJORDOMO; ++i)
-    {
-        if (m_auiEncounter[i] != DONE)
-            return;
-    }
-
-    Player* pPlayer = GetPlayerInMap();
-    if (!pPlayer)
-        return;
-
-    // Summon Majordomo
-    // If Majordomo encounter isn't done, summon at encounter place, else near Ragnaros
-    uint8 uiSummonPos = m_auiEncounter[TYPE_MAJORDOMO] == DONE ? 1 : 0;
-    if (Creature* pMajordomo = pPlayer->SummonCreature(m_aMajordomoLocations[uiSummonPos].m_uiEntry, m_aMajordomoLocations[uiSummonPos].m_fX, m_aMajordomoLocations[uiSummonPos].m_fY, m_aMajordomoLocations[uiSummonPos].m_fZ, m_aMajordomoLocations[uiSummonPos].m_fO, TEMPSUMMON_MANUAL_DESPAWN, 2*HOUR*IN_MILLISECONDS))
-    {
-        if (uiSummonPos)                                    // Majordomo encounter already done, set faction
-        {
-            pMajordomo->setFaction(FACTION_MAJORDOMO_FRIENDLY);
-            pMajordomo->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_OOC_NOT_ATTACKABLE);
-            pMajordomo->SetFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_GOSSIP);
-        }
-        else                                                // Else yell and summon adds
-        {
-            if (!bByPlayerEnter)
-                DoScriptText(SAY_MAJORDOMO_SPAWN, pMajordomo);
-
-            for (uint8 i = 0; i < MAX_MAJORDOMO_ADDS; ++i)
-                pMajordomo->SummonCreature(m_aBosspawnLocs[i].m_uiEntry, m_aBosspawnLocs[i].m_fX, m_aBosspawnLocs[i].m_fY, m_aBosspawnLocs[i].m_fZ, m_aBosspawnLocs[i].m_fO, TEMPSUMMON_MANUAL_DESPAWN, DAY*IN_MILLISECONDS);
-        }
-    }
-}
-
-void instance_molten_core::Load(const char* chrIn)
-{
-    if (!chrIn)
-    {
-        OUT_LOAD_INST_DATA_FAIL;
-        return;
-    }
-
-    OUT_LOAD_INST_DATA(chrIn);
-
-    std::istringstream loadStream(chrIn);
-
-    loadStream >> m_auiEncounter[0] >> m_auiEncounter[1] >> m_auiEncounter[2] >> m_auiEncounter[3]
-    >> m_auiEncounter[4] >> m_auiEncounter[5] >> m_auiEncounter[6] >> m_auiEncounter[7]
-    >> m_auiEncounter[8] >> m_auiEncounter[9];
-
-    for(uint8 i = 0; i < MAX_ENCOUNTER; ++i)
-    {
-        if (m_auiEncounter[i] == IN_PROGRESS)
-            m_auiEncounter[i] = NOT_STARTED;
-    }
-
-    OUT_LOAD_INST_DATA_COMPLETE;
-}
-
-InstanceData* GetInstance_instance_molten_core(Map* pMap)
-{
-    return new instance_molten_core(pMap);
-}
-
-void AddSC_instance_molten_core()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "instance_molten_core";
-    pNewScript->GetInstanceData = &GetInstance_instance_molten_core;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/eastern_kingdoms/molten_core/molten_core.cpp b/scripts/eastern_kingdoms/molten_core/molten_core.cpp
deleted file mode 100644
index 7145b20..0000000
--- a/scripts/eastern_kingdoms/molten_core/molten_core.cpp
+++ /dev/null
@@ -1,31 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Molten_Core
-SD%Complete:
-SDComment:
-SDCategory: Molten Core
-EndScriptData */
-
-/* ContentData
-EndContentData */
-
-#include "precompiled.h"
-
-void AddSC_molten_core()
-{
-}
diff --git a/scripts/eastern_kingdoms/molten_core/molten_core.h b/scripts/eastern_kingdoms/molten_core/molten_core.h
deleted file mode 100644
index d3cd6e4..0000000
--- a/scripts/eastern_kingdoms/molten_core/molten_core.h
+++ /dev/null
@@ -1,110 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software licensed under GPL version 2
- * Please see the included DOCS/LICENSE.TXT for more information */
-
-#ifndef DEF_MOLTEN_CORE_H
-#define DEF_MOLTEN_CORE_H
-
-enum
-{
-    MAX_ENCOUNTER               = 10,
-
-    TYPE_LUCIFRON               = 0,
-    TYPE_MAGMADAR               = 1,
-    TYPE_GEHENNAS               = 2,
-    TYPE_GARR                   = 3,
-    TYPE_SHAZZRAH               = 4,
-    TYPE_GEDDON                 = 5,
-    TYPE_GOLEMAGG               = 6,
-    TYPE_SULFURON               = 7,
-    TYPE_MAJORDOMO              = 8,
-    TYPE_RAGNAROS               = 9,
-
-    NPC_LUCIFRON                = 12118,
-    NPC_MAGMADAR                = 11982,
-    NPC_GEHENNAS                = 12259,
-    NPC_GARR                    = 12057,
-    NPC_SHAZZRAH                = 12264,
-    NPC_GEDDON                  = 12056,
-    NPC_GOLEMAGG                = 11988,
-    NPC_SULFURON                = 12098,
-    NPC_MAJORDOMO               = 12018,
-    NPC_RAGNAROS                = 11502,
-
-    // Adds
-    // Used for respawn in case of wipe
-    NPC_FLAMEWAKER_PROTECTOR    = 12119,                    // Lucifron
-    NPC_FLAMEWAKER              = 11661,                    // Gehennas
-    NPC_FIRESWORN               = 12099,                    // Garr
-    NPC_CORE_RAGER              = 11672,                    // Golemagg
-    NPC_FLAMEWAKER_PRIEST       = 11662,                    // Sulfuron
-    NPC_FLAMEWAKER_HEALER       = 11663,                    // Majordomo
-    NPC_FLAMEWAKER_ELITE        = 11664,                    // Majordomo
-
-    GO_LAVA_STEAM               = 178107,
-    GO_LAVA_SPLASH              = 178108,
-    GO_CACHE_OF_THE_FIRE_LORD   = 179703,
-    GO_RUNE_KRESS               = 176956,                   // Magmadar
-    GO_RUNE_MOHN                = 176957,                   // Gehennas
-    GO_RUNE_BLAZ                = 176955,                   // Garr
-    GO_RUNE_MAZJ                = 176953,                   // Shazzah
-    GO_RUNE_ZETH                = 176952,                   // Geddon
-    GO_RUNE_THERI               = 176954,                   // Golemagg
-    GO_RUNE_KORO                = 176951,                   // Sulfuron
-
-    MAX_MAJORDOMO_ADDS          = 8,
-    FACTION_MAJORDOMO_FRIENDLY  = 1080,
-    SAY_MAJORDOMO_SPAWN         = -1409004,
-};
-
-struct sSpawnLocation
-{
-    uint32 m_uiEntry;
-    float m_fX, m_fY, m_fZ, m_fO;
-};
-
-static sSpawnLocation m_aBosspawnLocs[MAX_MAJORDOMO_ADDS] =
-{
-    {NPC_FLAMEWAKER_ELITE,  737.945f, -1156.48f, -118.945f, 4.46804f},
-    {NPC_FLAMEWAKER_ELITE,  752.520f, -1191.02f, -118.218f, 2.49582f},
-    {NPC_FLAMEWAKER_ELITE,  752.953f, -1163.94f, -118.869f, 3.70010f},
-    {NPC_FLAMEWAKER_ELITE,  738.814f, -1197.40f, -118.018f, 1.83260f},
-    {NPC_FLAMEWAKER_HEALER, 746.939f, -1194.87f, -118.016f, 2.21657f},
-    {NPC_FLAMEWAKER_HEALER, 747.132f, -1158.87f, -118.897f, 4.03171f},
-    {NPC_FLAMEWAKER_HEALER, 757.116f, -1170.12f, -118.793f, 3.40339f},
-    {NPC_FLAMEWAKER_HEALER, 755.910f, -1184.46f, -118.449f, 2.80998f}
-};
-
-static sSpawnLocation m_aMajordomoLocations[2] =
-{
-    {NPC_MAJORDOMO, 758.089f, -1176.71f, -118.640f, 3.12414f},  // Summon fight position
-    {NPC_MAJORDOMO, 847.103f, -816.153f, -229.775f, 4.344f}     // Summon and teleport location (near Ragnaros)
-};
-
-class MANGOS_DLL_DECL instance_molten_core : public ScriptedInstance
-{
-    public:
-        instance_molten_core(Map* pMap);
-        ~instance_molten_core() {}
-
-        void Initialize();
-        bool IsEncounterInProgress() const;
-
-        void OnCreatureCreate(Creature* pCreature);
-        void OnObjectCreate(GameObject* pGo);
-        void OnPlayerEnter(Player* pPlayer);
-
-        void SetData(uint32 uiType, uint32 uiData);
-        uint32 GetData(uint32 uiType);
-
-        const char* Save() { return m_strInstData.c_str(); }
-        void Load(const char* chrIn);
-
-    protected:
-        void DoSpawnMajordomoIfCan(bool bByPlayerEnter);
-
-        std::string m_strInstData;
-        uint32 m_auiEncounter[MAX_ENCOUNTER];
-};
-
-#endif
diff --git a/scripts/eastern_kingdoms/throne_of_the_tides/boss_commander_ulthok.cpp b/scripts/eastern_kingdoms/throne_of_the_tides/boss_commander_ulthok.cpp
new file mode 100644
index 0000000..7a633ca
--- /dev/null
+++ b/scripts/eastern_kingdoms/throne_of_the_tides/boss_commander_ulthok.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_commander_ulthok
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Throne of the Tides
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_commander_ulthok()
+{
+}
diff --git a/scripts/eastern_kingdoms/throne_of_the_tides/boss_erunak_and_ghursha.cpp b/scripts/eastern_kingdoms/throne_of_the_tides/boss_erunak_and_ghursha.cpp
new file mode 100644
index 0000000..4e06604
--- /dev/null
+++ b/scripts/eastern_kingdoms/throne_of_the_tides/boss_erunak_and_ghursha.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_erunak_and_ghursha
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Throne of the Tides
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_erunak_and_ghursha()
+{
+}
diff --git a/scripts/eastern_kingdoms/throne_of_the_tides/boss_lady_nazjar.cpp b/scripts/eastern_kingdoms/throne_of_the_tides/boss_lady_nazjar.cpp
new file mode 100644
index 0000000..5fbf5ff
--- /dev/null
+++ b/scripts/eastern_kingdoms/throne_of_the_tides/boss_lady_nazjar.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_lady_nazjar
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Throne of the Tides
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_lady_nazjar()
+{
+}
diff --git a/scripts/eastern_kingdoms/throne_of_the_tides/boss_ozumat.cpp b/scripts/eastern_kingdoms/throne_of_the_tides/boss_ozumat.cpp
new file mode 100644
index 0000000..0e9d238
--- /dev/null
+++ b/scripts/eastern_kingdoms/throne_of_the_tides/boss_ozumat.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_ozumat
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Throne of the Tides
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_ozumat()
+{
+}
diff --git a/scripts/eastern_kingdoms/throne_of_the_tides/instance_throne_of_the_tides.cpp b/scripts/eastern_kingdoms/throne_of_the_tides/instance_throne_of_the_tides.cpp
new file mode 100644
index 0000000..c8e546e
--- /dev/null
+++ b/scripts/eastern_kingdoms/throne_of_the_tides/instance_throne_of_the_tides.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: instance_throne_of_the_tides
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Throne of the Tides
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_instance_throne_of_the_tides()
+{
+}
diff --git a/scripts/eastern_kingdoms/throne_of_the_tides/throne_of_the_tides.h b/scripts/eastern_kingdoms/throne_of_the_tides/throne_of_the_tides.h
new file mode 100644
index 0000000..56a35aa
--- /dev/null
+++ b/scripts/eastern_kingdoms/throne_of_the_tides/throne_of_the_tides.h
@@ -0,0 +1,4 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software licensed under GPL version 2
+ * Please see the included DOCS/LICENSE.TXT for more information */
+ 
\ No newline at end of file
diff --git a/scripts/eastern_kingdoms/twilight_highlands.cpp b/scripts/eastern_kingdoms/twilight_highlands.cpp
new file mode 100644
index 0000000..39d0185
--- /dev/null
+++ b/scripts/eastern_kingdoms/twilight_highlands.cpp
@@ -0,0 +1,35 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Twilight Highlands
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Twilight Highlands
+EndScriptData */
+
+/* ContentData
+EndContentData */
+
+#include "precompiled.h"
+
+/*######
+#
+######*/
+
+void AddSC_twilight_highlands()
+{
+}
diff --git a/scripts/eastern_kingdoms/vashjir.cpp b/scripts/eastern_kingdoms/vashjir.cpp
new file mode 100644
index 0000000..589e4c8
--- /dev/null
+++ b/scripts/eastern_kingdoms/vashjir.cpp
@@ -0,0 +1,35 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Vashjir
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Vashjir
+EndScriptData */
+
+/* ContentData
+EndContentData */
+
+#include "precompiled.h"
+
+/*######
+#
+######*/
+
+void AddSC_vashjir()
+{
+}
diff --git a/scripts/kalimdor/caverns_of_time/dragon_soul/boss_deathwing.cpp b/scripts/kalimdor/caverns_of_time/dragon_soul/boss_deathwing.cpp
new file mode 100644
index 0000000..1e51d1d
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/dragon_soul/boss_deathwing.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_deathwing
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Dragon Soul
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_deathwing()
+{
+}
diff --git a/scripts/kalimdor/caverns_of_time/dragon_soul/boss_hagara.cpp b/scripts/kalimdor/caverns_of_time/dragon_soul/boss_hagara.cpp
new file mode 100644
index 0000000..614c8d2
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/dragon_soul/boss_hagara.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_hagara
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Dragon Soul
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_hagara()
+{
+}
diff --git a/scripts/kalimdor/caverns_of_time/dragon_soul/boss_morchok.cpp b/scripts/kalimdor/caverns_of_time/dragon_soul/boss_morchok.cpp
new file mode 100644
index 0000000..d895fb9
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/dragon_soul/boss_morchok.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_morchok
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Dragon Soul
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_morchok()
+{
+}
diff --git a/scripts/kalimdor/caverns_of_time/dragon_soul/boss_ultraxion.cpp b/scripts/kalimdor/caverns_of_time/dragon_soul/boss_ultraxion.cpp
new file mode 100644
index 0000000..4e45e07
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/dragon_soul/boss_ultraxion.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_ultraxion
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Dragon Soul
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_ultraxion()
+{
+}
diff --git a/scripts/kalimdor/caverns_of_time/dragon_soul/boss_warlord_zonozz.cpp b/scripts/kalimdor/caverns_of_time/dragon_soul/boss_warlord_zonozz.cpp
new file mode 100644
index 0000000..8a7c6bd
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/dragon_soul/boss_warlord_zonozz.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_warlord_zonozz
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Dragon Soul
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_warlord_zonozz()
+{
+}
diff --git a/scripts/kalimdor/caverns_of_time/dragon_soul/boss_warmaster_blackhorn.cpp b/scripts/kalimdor/caverns_of_time/dragon_soul/boss_warmaster_blackhorn.cpp
new file mode 100644
index 0000000..84c2c2e
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/dragon_soul/boss_warmaster_blackhorn.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_warmaster_blackhorn
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Dragon Soul
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_warmaster_blackhorn()
+{
+}
diff --git a/scripts/kalimdor/caverns_of_time/dragon_soul/boss_yorsahj.cpp b/scripts/kalimdor/caverns_of_time/dragon_soul/boss_yorsahj.cpp
new file mode 100644
index 0000000..f201eeb
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/dragon_soul/boss_yorsahj.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_yorsahj
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Dragon Soul
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_yorsahj()
+{
+}
diff --git a/scripts/kalimdor/caverns_of_time/dragon_soul/dragon_soul.cpp b/scripts/kalimdor/caverns_of_time/dragon_soul/dragon_soul.cpp
new file mode 100644
index 0000000..43dd594
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/dragon_soul/dragon_soul.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: dragon_soul
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Dragon Soul
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_dragon_soul()
+{
+}
diff --git a/scripts/kalimdor/caverns_of_time/dragon_soul/dragon_soul.h b/scripts/kalimdor/caverns_of_time/dragon_soul/dragon_soul.h
new file mode 100644
index 0000000..56a35aa
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/dragon_soul/dragon_soul.h
@@ -0,0 +1,4 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software licensed under GPL version 2
+ * Please see the included DOCS/LICENSE.TXT for more information */
+ 
\ No newline at end of file
diff --git a/scripts/kalimdor/caverns_of_time/dragon_soul/instance_dragon_soul.cpp b/scripts/kalimdor/caverns_of_time/dragon_soul/instance_dragon_soul.cpp
new file mode 100644
index 0000000..eba2a16
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/dragon_soul/instance_dragon_soul.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: instance_dragon_soul
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Dragon Soul
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_instance_dragon_soul()
+{
+}
diff --git a/scripts/kalimdor/caverns_of_time/end_of_time/end_of_time.cpp b/scripts/kalimdor/caverns_of_time/end_of_time/end_of_time.cpp
new file mode 100644
index 0000000..d75ca3c
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/end_of_time/end_of_time.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: end_of_time
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: End of Time
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_end_of_time()
+{
+}
diff --git a/scripts/kalimdor/caverns_of_time/end_of_time/end_of_time.h b/scripts/kalimdor/caverns_of_time/end_of_time/end_of_time.h
new file mode 100644
index 0000000..56a35aa
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/end_of_time/end_of_time.h
@@ -0,0 +1,4 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software licensed under GPL version 2
+ * Please see the included DOCS/LICENSE.TXT for more information */
+ 
\ No newline at end of file
diff --git a/scripts/kalimdor/caverns_of_time/end_of_time/instance_end_of_time.cpp b/scripts/kalimdor/caverns_of_time/end_of_time/instance_end_of_time.cpp
new file mode 100644
index 0000000..c740d62
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/end_of_time/instance_end_of_time.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: instance_end_of_time
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: End of Time
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_instance_end_of_time()
+{
+}
diff --git a/scripts/kalimdor/caverns_of_time/hour_of_twilight/boss_archbishop_benedictus.cpp b/scripts/kalimdor/caverns_of_time/hour_of_twilight/boss_archbishop_benedictus.cpp
new file mode 100644
index 0000000..ad3d700
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/hour_of_twilight/boss_archbishop_benedictus.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_archbishop_benedictus
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Hour of Twilight
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_archbishop_benedictus()
+{
+}
diff --git a/scripts/kalimdor/caverns_of_time/hour_of_twilight/boss_arcurion.cpp b/scripts/kalimdor/caverns_of_time/hour_of_twilight/boss_arcurion.cpp
new file mode 100644
index 0000000..0adbe2e
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/hour_of_twilight/boss_arcurion.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_arcurion
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Hour of Twilight
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_arcurion()
+{
+}
diff --git a/scripts/kalimdor/caverns_of_time/hour_of_twilight/boss_asira_dawnslayer.cpp b/scripts/kalimdor/caverns_of_time/hour_of_twilight/boss_asira_dawnslayer.cpp
new file mode 100644
index 0000000..750e85b
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/hour_of_twilight/boss_asira_dawnslayer.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_asira_dawnslayer
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Hour of Twilight
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_asira_dawnslayer()
+{
+}
diff --git a/scripts/kalimdor/caverns_of_time/hour_of_twilight/hour_of_twilight.h b/scripts/kalimdor/caverns_of_time/hour_of_twilight/hour_of_twilight.h
new file mode 100644
index 0000000..56a35aa
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/hour_of_twilight/hour_of_twilight.h
@@ -0,0 +1,4 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software licensed under GPL version 2
+ * Please see the included DOCS/LICENSE.TXT for more information */
+ 
\ No newline at end of file
diff --git a/scripts/kalimdor/caverns_of_time/hour_of_twilight/instance_hour_of_twilight.cpp b/scripts/kalimdor/caverns_of_time/hour_of_twilight/instance_hour_of_twilight.cpp
new file mode 100644
index 0000000..1121df7
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/hour_of_twilight/instance_hour_of_twilight.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: instance_hour_of_twilight
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Hour of Twilight
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_instance_hour_of_twilight()
+{
+}
diff --git a/scripts/kalimdor/caverns_of_time/hyjal/boss_archimonde.cpp b/scripts/kalimdor/caverns_of_time/hyjal/boss_archimonde.cpp
deleted file mode 100644
index 47df752..0000000
--- a/scripts/kalimdor/caverns_of_time/hyjal/boss_archimonde.cpp
+++ /dev/null
@@ -1,466 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Boss_Archimonde
-SD%Complete: 85
-SDComment: Timers; Some details may need adjustments.
-SDCategory: Caverns of Time, Mount Hyjal
-EndScriptData */
-
-#include "precompiled.h"
-#include "hyjal.h"
-
-enum
-{
-    SAY_INTRO                   = -1534018,
-    SAY_AGGRO                   = -1534019,
-    SAY_DOOMFIRE1               = -1534020,
-    SAY_DOOMFIRE2               = -1534021,
-    SAY_AIR_BURST1              = -1534022,
-    SAY_AIR_BURST2              = -1534023,
-    SAY_SLAY1                   = -1534024,
-    SAY_SLAY2                   = -1534025,
-    SAY_SLAY3                   = -1534026,
-    SAY_ENRAGE                  = -1534027,
-    SAY_EPILOGUE                = -1534028,
-    SAY_SOUL_CHARGE1            = -1534029,
-    SAY_SOUL_CHARGE2            = -1534030,
-
-    // spells
-    SPELL_DRAIN_TREE            = 39140,                    // intro cosmetic spell
-    //SPELL_DRAIN_TREE_DUMMY    = 39141,                    // purpose unk
-
-    SPELL_FINGER_DEATH          = 31984,
-    SPELL_FINGER_DEATH_SCRIPT   = 32111,                    // targets whisps
-    SPELL_FINGER_DEATH_DUMMY    = 39369,                    // epilogue spell
-    SPELL_HAND_OF_DEATH         = 35354,                    // hard enrage spell
-    SPELL_AIR_BURST             = 32014,
-    SPELL_GRIP_OF_THE_LEGION    = 31972,
-    SPELL_DOOMFIRE_STRIKE       = 31903,                    // summons 18095 and 18104
-    SPELL_SOUL_CHARGE_YELLOW    = 32045,                    // procs 32054
-    SPELL_SOUL_CHARGE_GREEN     = 32051,                    // procs 32057
-    SPELL_SOUL_CHARGE_RED       = 32052,                    // procs 32053
-    SPELL_FEAR                  = 31970,
-
-    SPELL_PROTECTION_OF_ELUNE   = 38528,                    // protect the players on epilogue
-
-    // summoned creatures
-    NPC_DOOMFIRE                = 18095,
-    //NPC_DOOMFIRE_SPIRIT       = 18104,
-    NPC_ANCIENT_WISP            = 17946,
-    NPC_CHANNEL_TARGET          = 22418,                    // if he gets in range of 75.0f, then he gets enraged
-
-    // doomfire spells
-    SPELL_DOOMFIRE_SPAWN        = 32074,
-    SPELL_DOOMFIRE              = 31945,                    // fire damage spell
-
-    // wisp spells
-    SPELL_DENOUEMENT_WISP       = 32124,
-    SPELL_ANCIENT_SPARK         = 39349,
-};
-
-/* Finally, Archimonde's script. His script isn't extremely complex, most are simply spells on timers.
-   The only complicated aspect of the battle is Finger of Death and Doomfire, with Doomfire being the
-   hardest bit to code. Finger of Death is simply a distance check - if no one is in melee range, then
-   select a random target and cast the spell on them. However, if someone IS in melee range, and this
-   is NOT the main tank (creature's victim), then we aggro that player and they become the new victim.
-   For Doomfire, we summon a mob (Doomfire Spirit) for the Doomfire mob to follow. It's spirit will
-   randomly select it's target to follow and then we create the random movement making it unpredictable.
-*/
-
-struct MANGOS_DLL_DECL boss_archimondeAI : public ScriptedAI
-{
-    boss_archimondeAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        m_bHasIntro = false;
-        Reset();
-    }
-
-    ScriptedInstance* m_pInstance;
-
-    uint32 m_uiDrainNordrassilTimer;
-    uint32 m_uiFearTimer;
-    uint32 m_uiAirBurstTimer;
-    uint32 m_uiGripOfTheLegionTimer;
-    uint32 m_uiDoomfireTimer;
-    uint32 m_uiFingerOfDeathTimer;
-    uint32 m_uiHandOfDeathTimer;
-    uint32 m_uiSummonWispTimer;
-    uint32 m_uiWispCount;
-    uint32 m_uiEnrageTimer;
-
-    bool m_bHasIntro;
-    bool m_bIsEnraged;
-    bool m_bIsEpilogue;
-    bool m_bStartEpilogue;
-
-    void Reset()
-    {
-        m_uiDrainNordrassilTimer = 10000;
-        m_uiFearTimer            = 40000;
-        m_uiAirBurstTimer        = 30000;
-        m_uiGripOfTheLegionTimer = urand(5000, 25000);
-        m_uiDoomfireTimer        = 15000;
-        m_uiFingerOfDeathTimer   = 15000;
-        m_uiHandOfDeathTimer     = 2000;
-        m_uiWispCount            = 0;
-        m_uiEnrageTimer          = 10*MINUTE*IN_MILLISECONDS;
-
-        m_bIsEnraged             = false;
-        m_bIsEpilogue            = false;
-        m_bStartEpilogue         = false;
-    }
-
-    void Aggro(Unit* pWho)
-    {
-        DoScriptText(SAY_AGGRO, m_creature);
-    }
-
-    void MoveInLineOfSight(Unit* pWho)
-    {
-        // If the boss reaches the tree during the fight, then he enrages - the distance is not very clear
-        if (!m_bIsEnraged && pWho->GetEntry() == NPC_CHANNEL_TARGET && pWho->IsWithinDistInMap(m_creature, 75.0f))
-        {
-            m_uiEnrageTimer = 1000;
-            m_bIsEnraged = true;
-        }
-
-        ScriptedAI::MoveInLineOfSight(pWho);
-    }
-
-    void KilledUnit(Unit* pVictim)
-    {
-        if (pVictim->GetTypeId() != TYPEID_PLAYER)
-            return;
-
-        switch(urand(0, 2))
-        {
-            case 0: DoScriptText(SAY_SLAY1, m_creature); break;
-            case 1: DoScriptText(SAY_SLAY2, m_creature); break;
-            case 2: DoScriptText(SAY_SLAY3, m_creature); break;
-        }
-
-        switch(pVictim->getClass())
-        {
-            case CLASS_PRIEST:
-            case CLASS_PALADIN:
-            case CLASS_WARLOCK:
-                pVictim->CastSpell(m_creature, SPELL_SOUL_CHARGE_RED, true);
-                break;
-            case CLASS_MAGE:
-            case CLASS_ROGUE:
-            case CLASS_WARRIOR:
-                pVictim->CastSpell(m_creature, SPELL_SOUL_CHARGE_YELLOW, true);
-                break;
-            case CLASS_DRUID:
-            case CLASS_SHAMAN:
-            case CLASS_HUNTER:
-                pVictim->CastSpell(m_creature, SPELL_SOUL_CHARGE_GREEN, true);
-                break;
-        }
-    }
-
-    void JustReachedHome()
-    {
-        // Start epilogue at 10% hp
-        if (m_bIsEpilogue)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_PROTECTION_OF_ELUNE) == CAST_OK)
-            {
-                m_uiFingerOfDeathTimer = 5000;
-                m_bStartEpilogue = true;
-            }
-        }
-        else if (m_pInstance)
-            m_pInstance->SetData(TYPE_ARCHIMONDE, FAIL);
-    }
-
-    void JustSummoned(Creature* pSummoned)
-    {
-        if (pSummoned->GetEntry() == NPC_ANCIENT_WISP)
-        {
-            pSummoned->AI()->AttackStart(m_creature);
-            ++m_uiWispCount;
-
-            // When enough wisps have gathered or boss is low hp, then kill him
-            if (m_uiWispCount >= 45 || m_creature->GetHealthPercent() <= 1.0f)
-                pSummoned->CastSpell(pSummoned, SPELL_DENOUEMENT_WISP, false);
-        }
-        else if (pSummoned->GetEntry() == NPC_DOOMFIRE)
-        {
-            pSummoned->CastSpell(pSummoned, SPELL_DOOMFIRE_SPAWN, true);
-            pSummoned->CastSpell(pSummoned, SPELL_DOOMFIRE, true, NULL, NULL, m_creature->GetObjectGuid());
-        }
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        // Intro timer
-        if (m_uiDrainNordrassilTimer)
-        {
-            if (m_uiDrainNordrassilTimer <= uiDiff)
-            {
-                if (DoCastSpellIfCan(m_creature, SPELL_DRAIN_TREE) == CAST_OK)
-                {
-                    if (!m_bHasIntro)
-                    {
-                        DoScriptText(SAY_INTRO, m_creature);
-                        m_bHasIntro = true;
-                    }
-                    m_uiDrainNordrassilTimer = 0;
-                }
-            }
-            else
-                m_uiDrainNordrassilTimer -= uiDiff;
-        }
-
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        // Start epilogue - fight was won!
-        if (m_creature->GetHealthPercent() < 10.0f)
-        {
-            if (!m_bIsEpilogue)
-            {
-                DoScriptText(SAY_EPILOGUE, m_creature);
-
-                // move at home position and start outro
-                m_creature->GetMotionMaster()->MoveTargetedHome();
-                SetCombatMovement(false);
-                m_bIsEpilogue = true;
-            }
-
-            if (m_bStartEpilogue)
-            {
-                // Spam Finger of Death on players and Wisps
-                if (m_uiFingerOfDeathTimer < uiDiff)
-                {
-                    if (DoCastSpellIfCan(m_creature, urand(0, 1) ? SPELL_FINGER_DEATH_DUMMY : SPELL_FINGER_DEATH_SCRIPT) == CAST_OK)
-                        m_uiFingerOfDeathTimer = 1000;
-                }
-                else
-                    m_uiFingerOfDeathTimer -= uiDiff;
-
-                if (m_uiSummonWispTimer < uiDiff)
-                {
-                    float fX, fY, fZ;
-                    m_creature->GetNearPoint(m_creature, fX, fY, fZ, 0, 75.0f, urand(0, 1) ? frand(0, 2.8f) : frand(4.3f, M_PI_F*2));
-                    m_creature->SummonCreature(NPC_ANCIENT_WISP, fX, fY, fZ, 0, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 15000);
-                    m_uiSummonWispTimer = urand(1000, 1500);
-                }
-                else
-                    m_uiSummonWispTimer -= uiDiff;
-            }
-
-            // Stop using the other spells
-            return;
-        }
-
-        if (m_uiEnrageTimer)
-        {
-            if (m_uiEnrageTimer <= uiDiff)
-            {
-                if (DoCastSpellIfCan(m_creature, SPELL_HAND_OF_DEATH) == CAST_OK)
-                {
-                    DoScriptText(SAY_ENRAGE, m_creature);
-                    m_uiEnrageTimer = 0;
-                }
-            }
-            else
-                m_uiEnrageTimer -= uiDiff;
-        }
-
-        if (m_uiGripOfTheLegionTimer < uiDiff)
-        {
-            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-            {
-                if (DoCastSpellIfCan(pTarget, SPELL_GRIP_OF_THE_LEGION) == CAST_OK)
-                    m_uiGripOfTheLegionTimer = urand(5000, 25000);
-            }
-        }
-        else
-            m_uiGripOfTheLegionTimer -= uiDiff;
-
-        if (m_uiAirBurstTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_AIR_BURST) == CAST_OK)
-            {
-                DoScriptText(urand(0, 1) ? SAY_AIR_BURST1 : SAY_AIR_BURST2, m_creature);
-                m_uiAirBurstTimer = urand(25000, 40000);
-            }
-        }
-        else
-            m_uiAirBurstTimer -= uiDiff;
-
-        if (m_uiFearTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_FEAR) == CAST_OK)
-                m_uiFearTimer = 42000;
-        }
-        else
-            m_uiFearTimer -= uiDiff;
-
-        if (m_uiDoomfireTimer < uiDiff)
-        {
-            if (DoCastSpellIfCan(m_creature, SPELL_DOOMFIRE_STRIKE) == CAST_OK)
-            {
-                DoScriptText(urand(0, 1) ? SAY_DOOMFIRE1 : SAY_DOOMFIRE2, m_creature);
-                m_uiDoomfireTimer = urand(10000, 15000);
-            }
-        }
-        else
-            m_uiDoomfireTimer -= uiDiff;
-
-        // If we are within range melee the target
-        if (m_creature->CanReachWithMeleeAttack(m_creature->getVictim()))
-        {
-            //Make sure our attack is ready and we arn't currently casting
-            if (m_creature->isAttackReady() && !m_creature->IsNonMeleeSpellCasted(false))
-            {
-                m_creature->AttackerStateUpdate(m_creature->getVictim());
-                m_creature->resetAttackTimer();
-            }
-        }
-        // Else spam Finger of Death
-        else
-        {
-            if (m_uiFingerOfDeathTimer < uiDiff)
-            {
-                if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
-                {
-                    if (DoCastSpellIfCan(pTarget, SPELL_FINGER_DEATH) == CAST_OK)
-                        m_uiFingerOfDeathTimer = 5000;
-                }
-            }
-            else
-                m_uiFingerOfDeathTimer -= uiDiff;
-        }
-    }
-};
-
-/* This is the script for the Doomfire Spirit Mob. This mob controls the doomfire npc and allows it to move randomly around the map. */
-struct MANGOS_DLL_DECL npc_doomfire_spiritAI : public ScriptedAI
-{
-    npc_doomfire_spiritAI(Creature* pCreature) : ScriptedAI(pCreature) { Reset(); }
-
-    ObjectGuid m_doomfireGuid;
-
-    uint32 m_uiDoomfireLoadTimer;
-    uint32 m_uiChangeTargetTimer;
-    float m_fAngle;
-
-    void Reset()
-    {
-        m_uiDoomfireLoadTimer = 1000;
-        m_uiChangeTargetTimer = 1500;
-        m_fAngle              = urand(0, M_PI_F*2);
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (m_uiDoomfireLoadTimer)
-        {
-            if (m_uiDoomfireLoadTimer <= uiDiff)
-            {
-                // Get the closest doomfire
-                if (Creature* pTemp = GetClosestCreatureWithEntry(m_creature, NPC_DOOMFIRE, 5.0f))
-                    m_doomfireGuid = pTemp->GetObjectGuid();
-
-                m_uiDoomfireLoadTimer = 0;
-            }
-            else
-                m_uiDoomfireLoadTimer -= uiDiff;
-        }
-
-        // It's not very clear how should this one move. For the moment just move to random points around on timer
-        if (m_uiChangeTargetTimer < uiDiff)
-        {
-            if (Creature* pDoomfire = m_creature->GetMap()->GetCreature(m_doomfireGuid))
-            {
-                float fX, fY, fZ;
-                pDoomfire->GetNearPoint(pDoomfire, fX, fY, fZ, 0, 30.0f, m_fAngle + frand(0, M_PI_F*.5));
-                pDoomfire->GetMotionMaster()->MovePoint(0, fX, fY, fZ);
-            }
-
-            m_uiChangeTargetTimer = 4000;
-        }
-        else
-            m_uiChangeTargetTimer -= uiDiff;
-    }
-};
-
-struct mob_ancient_wispAI : public ScriptedAI
-{
-    mob_ancient_wispAI(Creature* pCreature) : ScriptedAI(pCreature) { Reset(); }
-
-    uint32 m_uiCheckTimer;
-
-    void Reset()
-    {
-        m_uiCheckTimer = 1000;
-    }
-
-    void UpdateAI(const uint32 uiDiff)
-    {
-        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-            return;
-
-        if (m_uiCheckTimer < uiDiff)
-        {
-            DoCastSpellIfCan(m_creature->getVictim(), SPELL_ANCIENT_SPARK);
-            m_uiCheckTimer = urand(2000, 3000);
-        }
-        else
-            m_uiCheckTimer -= uiDiff;
-    }
-};
-
-CreatureAI* GetAI_boss_archimonde(Creature* pCreature)
-{
-    return new boss_archimondeAI(pCreature);
-}
-
-CreatureAI* GetAI_npc_doomfire_spirit(Creature* pCreature)
-{
-    return new npc_doomfire_spiritAI(pCreature);
-}
-
-CreatureAI* GetAI_mob_ancient_wisp(Creature* pCreature)
-{
-    return new mob_ancient_wispAI(pCreature);
-}
-
-void AddSC_boss_archimonde()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "boss_archimonde";
-    pNewScript->GetAI = &GetAI_boss_archimonde;
-    pNewScript->RegisterSelf();
-
-    pNewScript = new Script;
-    pNewScript->Name = "npc_doomfire_spirit";
-    pNewScript->GetAI = &GetAI_npc_doomfire_spirit;
-    pNewScript->RegisterSelf();
-
-    pNewScript = new Script;
-    pNewScript->Name = "mob_ancient_wisp";
-    pNewScript->GetAI = &GetAI_mob_ancient_wisp;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/kalimdor/caverns_of_time/hyjal/hyjal.cpp b/scripts/kalimdor/caverns_of_time/hyjal/hyjal.cpp
deleted file mode 100644
index 07f44db..0000000
--- a/scripts/kalimdor/caverns_of_time/hyjal/hyjal.cpp
+++ /dev/null
@@ -1,245 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Hyjal
-SD%Complete: 80
-SDComment: gossip text id's unknown
-SDCategory: Caverns of Time, Mount Hyjal
-EndScriptData */
-
-/* ContentData
-npc_jaina_proudmoore
-npc_thrall
-npc_tyrande_whisperwind
-EndContentData */
-
-#include "precompiled.h"
-#include "hyjalAI.h"
-
-enum
-{
-    GOSSIP_ITEM_JAINA_BEGIN         = -3534000,
-    GOSSIP_ITEM_JAINA_ANATHERON     = -3534001,
-    GOSSIP_ITEM_JAINA_SUCCCESS      = -3534002,
-
-    GOSSIP_ITEM_THRALL_BEGIN        = -3534003,
-    GOSSIP_ITEM_THRALL_AZGALOR      = -3534004,
-    GOSSIP_ITEM_THRALL_SUCCESS      = -3534005,
-
-    GOSSIP_ITEM_TYRANDE_AID         = -3534006,
-
-    // Note: additional menu items include 9230 and 9398.
-    GOSSIP_MENU_ID_DEFAULT          = 907,                  // this is wrong, but currently we don't know which are the right ids
-};
-
-CreatureAI* GetAI_npc_jaina_proudmoore(Creature* pCreature)
-{
-    hyjalAI* pTempAI = new hyjalAI(pCreature);
-
-    pTempAI->m_aSpells[0].m_uiSpellId = SPELL_BLIZZARD;
-    pTempAI->m_aSpells[0].m_uiCooldown = urand(15000, 35000);
-    pTempAI->m_aSpells[0].m_pType = TARGETTYPE_RANDOM;
-
-    pTempAI->m_aSpells[1].m_uiSpellId = SPELL_PYROBLAST;
-    pTempAI->m_aSpells[1].m_uiCooldown = urand(2000, 9000);
-    pTempAI->m_aSpells[1].m_pType = TARGETTYPE_RANDOM;
-
-    pTempAI->m_aSpells[2].m_uiSpellId = SPELL_SUMMON_ELEMENTALS;
-    pTempAI->m_aSpells[2].m_uiCooldown = urand(15000, 45000);
-    pTempAI->m_aSpells[2].m_pType = TARGETTYPE_SELF;
-
-    return pTempAI;
-}
-
-bool GossipHello_npc_jaina_proudmoore(Player* pPlayer, Creature* pCreature)
-{
-    if (ScriptedInstance* pInstance = (ScriptedInstance*)pCreature->GetInstanceData())
-    {
-        if (hyjalAI* pJainaAI = dynamic_cast<hyjalAI*>(pCreature->AI()))
-        {
-            if (!pJainaAI->m_bIsEventInProgress)
-            {
-                // Should not happen that jaina is here now, but for safe we check
-                if (pInstance->GetData(TYPE_KAZROGAL) != DONE)
-                {
-                    if (pInstance->GetData(TYPE_WINTERCHILL) == NOT_STARTED)
-                        pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_JAINA_BEGIN, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 1);
-                    else if (pInstance->GetData(TYPE_WINTERCHILL) == DONE && pInstance->GetData(TYPE_ANETHERON) == NOT_STARTED)
-                        pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_JAINA_ANATHERON, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 2);
-                    else if (pInstance->GetData(TYPE_ANETHERON) == DONE)
-                        pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_JAINA_SUCCCESS, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 3);
-
-                    if (pPlayer->isGameMaster())
-                        pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_DOT, "[GM] Toggle Debug Timers", GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF);
-                }
-            }
-        }
-    }
-
-    pPlayer->SEND_GOSSIP_MENU(GOSSIP_MENU_ID_DEFAULT, pCreature->GetObjectGuid());
-    return true;
-}
-
-bool GossipSelect_npc_jaina_proudmoore(Player* pPlayer, Creature* pCreature, uint32 uiSender, uint32 uiAction)
-{
-    if (hyjalAI* pJainaAI = dynamic_cast<hyjalAI*>(pCreature->AI()))
-    {
-        switch(uiAction)
-        {
-            case GOSSIP_ACTION_INFO_DEF + 1:
-                pJainaAI->StartEvent();
-                break;
-            case GOSSIP_ACTION_INFO_DEF + 2:
-                pJainaAI->m_bIsFirstBossDead = true;
-                pJainaAI->m_uiWaveCount = 9;
-                pJainaAI->StartEvent();
-                break;
-            case GOSSIP_ACTION_INFO_DEF + 3:
-                pJainaAI->Retreat();
-                break;
-            case GOSSIP_ACTION_INFO_DEF:
-                pJainaAI->m_bDebugMode = !pJainaAI->m_bDebugMode;
-                debug_log("SD2: HyjalAI - Debug mode has been toggled");
-                break;
-        }
-    }
-
-    pPlayer->CLOSE_GOSSIP_MENU();
-    return true;
-}
-
-CreatureAI* GetAI_npc_thrall(Creature* pCreature)
-{
-    hyjalAI* pTempAI = new hyjalAI(pCreature);
-
-    pTempAI->m_aSpells[0].m_uiSpellId = SPELL_CHAIN_LIGHTNING;
-    pTempAI->m_aSpells[0].m_uiCooldown = urand(2000, 7000);
-    pTempAI->m_aSpells[0].m_pType = TARGETTYPE_VICTIM;
-
-    pTempAI->m_aSpells[1].m_uiSpellId = SPELL_FERAL_SPIRIT;
-    pTempAI->m_aSpells[1].m_uiCooldown = urand(6000, 41000);
-    pTempAI->m_aSpells[1].m_pType = TARGETTYPE_RANDOM;
-
-    return pTempAI;
-}
-
-bool GossipHello_npc_thrall(Player* pPlayer, Creature* pCreature)
-{
-    if (ScriptedInstance* pInstance = (ScriptedInstance*)pCreature->GetInstanceData())
-    {
-        if (hyjalAI* pThrallAI = dynamic_cast<hyjalAI*>(pCreature->AI()))
-        {
-            if (!pThrallAI->m_bIsEventInProgress)
-            {
-                // Only let them start the Horde phases if Anetheron is dead.
-                if (pInstance->GetData(TYPE_ANETHERON) == DONE)
-                {
-                    if (pInstance->GetData(TYPE_KAZROGAL) == NOT_STARTED)
-                        pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_THRALL_BEGIN, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 1);
-                    else if (pInstance->GetData(TYPE_KAZROGAL) == DONE && pInstance->GetData(TYPE_AZGALOR) == NOT_STARTED)
-                        pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_THRALL_AZGALOR, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 2);
-                    else if (pInstance->GetData(TYPE_AZGALOR) == DONE)
-                        pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_THRALL_SUCCESS, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 3);
-
-                    if (pPlayer->isGameMaster())
-                        pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_DOT, "[GM] Toggle Debug Timers", GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF);
-                }
-            }
-        }
-    }
-
-    pPlayer->SEND_GOSSIP_MENU(GOSSIP_MENU_ID_DEFAULT, pCreature->GetObjectGuid());
-    return true;
-}
-
-bool GossipSelect_npc_thrall(Player* pPlayer, Creature* pCreature, uint32 uiSender, uint32 uiAction)
-{
-    if (hyjalAI* pThrallAI = dynamic_cast<hyjalAI*>(pCreature->AI()))
-    {
-        switch(uiAction)
-        {
-            case GOSSIP_ACTION_INFO_DEF + 1:
-                pThrallAI->StartEvent();
-                break;
-            case GOSSIP_ACTION_INFO_DEF + 2:
-                pThrallAI->m_bIsFirstBossDead = true;
-                pThrallAI->m_uiWaveCount = 9;
-                pThrallAI->StartEvent();
-                break;
-            case GOSSIP_ACTION_INFO_DEF + 3:
-                pThrallAI->Retreat();
-                break;
-            case GOSSIP_ACTION_INFO_DEF:
-                pThrallAI->m_bDebugMode = !pThrallAI->m_bDebugMode;
-                debug_log("SD2: HyjalAI - Debug mode has been toggled");
-                break;
-        }
-    }
-
-    pPlayer->CLOSE_GOSSIP_MENU();
-    return true;
-}
-
-bool GossipHello_npc_tyrande_whisperwind(Player* pPlayer, Creature* pCreature)
-{
-    if (ScriptedInstance* pInstance = (ScriptedInstance*)pCreature->GetInstanceData())
-    {
-        // Only let them get item if Azgalor is dead.
-        if (pInstance->GetData(TYPE_AZGALOR) == DONE && !pPlayer->HasItemCount(ITEM_TEAR_OF_GODDESS, 1))
-            pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_TYRANDE_AID, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF);
-    }
-
-    pPlayer->SEND_GOSSIP_MENU(GOSSIP_MENU_ID_DEFAULT, pCreature->GetObjectGuid());
-    return true;
-}
-
-bool GossipSelect_npc_tyrande_whisperwind(Player* pPlayer, Creature* pCreature, uint32 uiSender, uint32 uiAction)
-{
-    if (uiAction == GOSSIP_ACTION_INFO_DEF)
-    {
-        if (Item* pItem = pPlayer->StoreNewItemInInventorySlot(ITEM_TEAR_OF_GODDESS, 1))
-            pPlayer->SendNewItem(pItem, 1, true, false);
-    }
-
-    pPlayer->CLOSE_GOSSIP_MENU();
-    return true;
-}
-
-void AddSC_hyjal()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "npc_jaina_proudmoore";
-    pNewScript->GetAI = &GetAI_npc_jaina_proudmoore;
-    pNewScript->pGossipHello = &GossipHello_npc_jaina_proudmoore;
-    pNewScript->pGossipSelect = &GossipSelect_npc_jaina_proudmoore;
-    pNewScript->RegisterSelf();
-
-    pNewScript = new Script;
-    pNewScript->Name = "npc_thrall";
-    pNewScript->GetAI = &GetAI_npc_thrall;
-    pNewScript->pGossipHello = &GossipHello_npc_thrall;
-    pNewScript->pGossipSelect = &GossipSelect_npc_thrall;
-    pNewScript->RegisterSelf();
-
-    pNewScript = new Script;
-    pNewScript->Name = "npc_tyrande_whisperwind";
-    pNewScript->pGossipHello = &GossipHello_npc_tyrande_whisperwind;
-    pNewScript->pGossipSelect = &GossipSelect_npc_tyrande_whisperwind;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/kalimdor/caverns_of_time/hyjal/hyjal.h b/scripts/kalimdor/caverns_of_time/hyjal/hyjal.h
deleted file mode 100644
index 4d34f02..0000000
--- a/scripts/kalimdor/caverns_of_time/hyjal/hyjal.h
+++ /dev/null
@@ -1,89 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software licensed under GPL version 2
- * Please see the included DOCS/LICENSE.TXT for more information */
-
-#ifndef DEF_HYJAL_H
-#define DEF_HYJAL_H
-
-enum
-{
-    MAX_ENCOUNTER               = 5,
-
-    TYPE_WINTERCHILL            = 0,
-    TYPE_ANETHERON              = 1,
-    TYPE_KAZROGAL               = 2,
-    TYPE_AZGALOR                = 3,
-    TYPE_ARCHIMONDE             = 4,
-
-    TYPE_TRASH_COUNT            = 5,
-    TYPE_RETREAT                = 6,
-
-    WORLD_STATE_WAVES           = 2842,
-    WORLD_STATE_ENEMY           = 2453,
-    WORLD_STATE_ENEMYCOUNT      = 2454,
-
-    NPC_JAINA                   = 17772,
-    NPC_THRALL                  = 17852,
-    NPC_TYRANDE                 = 17948,
-
-    // Bosses summoned after every 8 waves
-    NPC_WINTERCHILL             = 17767,
-    NPC_ANETHERON               = 17808,
-    NPC_KAZROGAL                = 17888,
-    NPC_AZGALOR                 = 17842,
-    NPC_ARCHIMONDE              = 17968,
-
-    // Trash Mobs summoned in waves
-    NPC_NECRO                   = 17899,
-    NPC_ABOMI                   = 17898,
-    NPC_GHOUL                   = 17895,
-    NPC_BANSH                   = 17905,
-    NPC_CRYPT                   = 17897,
-    NPC_GARGO                   = 17906,
-    NPC_FROST                   = 17907,
-    NPC_GIANT                   = 17908,
-    NPC_STALK                   = 17916,
-
-    NPC_WATER_ELEMENTAL         = 18001,
-    NPC_DIRE_WOLF               = 17854,
-
-    GO_ANCIENT_GEM              = 185557,
-};
-
-static const float aArchimondeSpawnLoc[4] = {5581.49f, -3445.63f, 1575.1f, 3.905f};
-
-class MANGOS_DLL_DECL instance_mount_hyjal : public ScriptedInstance
-{
-    public:
-        instance_mount_hyjal(Map* pMap);
-
-        void Initialize();
-        bool IsEncounterInProgress() const;
-
-        void OnPlayerEnter(Player* pPlayer);
-
-        void OnCreatureCreate(Creature* pCreature);
-        void OnObjectCreate(GameObject* pGo);
-
-        void OnCreatureEnterCombat(Creature* pCreature);
-        void OnCreatureEvade(Creature* pCreature);
-        void OnCreatureDeath(Creature* pCreature);
-
-        void SetData(uint32 uiType, uint32 uiData);
-        uint32 GetData(uint32 uiType);
-
-        const char* Save() { return m_strSaveData.c_str(); }
-        void Load(const char* chrIn);
-
-    private:
-        void DoSpawnArchimonde();
-
-        uint32 m_auiEncounter[MAX_ENCOUNTER];
-        std::string m_strSaveData;
-
-        GuidList lAncientGemGUIDList;
-
-        uint32 m_uiTrashCount;
-};
-
-#endif
diff --git a/scripts/kalimdor/caverns_of_time/hyjal/hyjalAI.cpp b/scripts/kalimdor/caverns_of_time/hyjal/hyjalAI.cpp
deleted file mode 100644
index b705999..0000000
--- a/scripts/kalimdor/caverns_of_time/hyjal/hyjalAI.cpp
+++ /dev/null
@@ -1,553 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: HyjalAI
-SD%Complete: 90
-SDComment:
-SDCategory: Caverns of Time, Mount Hyjal
-EndScriptData */
-
-#include "precompiled.h"
-#include "hyjalAI.h"
-
-struct HyjalLocation
-{
-    eBaseArea m_pBaseArea;
-    float m_fX, m_fY, m_fZ;
-};
-
-// Locations for summoning waves
-// Must be even number
-static const HyjalLocation aHyjalSpawnLoc[]=
-{
-    {BASE_ALLY,  4979.010f, -1709.134f, 1339.674f},
-    {BASE_ALLY,  4969.123f, -1705.904f, 1341.363f},
-    {BASE_ALLY,  4970.260f, -1698.546f, 1341.200f},
-    {BASE_ALLY,  4975.262f, -1698.239f, 1341.427f},
-    {BASE_HORDE, 5557.582f, -2587.159f, 1481.644f},
-    {BASE_HORDE, 5545.901f, -2582.246f, 1479.256f},
-    {BASE_HORDE, 5565.642f, -2565.666f, 1481.635f},
-    {BASE_HORDE, 5547.218f, -2574.589f, 1479.194f}
-};
-
-// used to inform the wave where to move
-static const HyjalLocation aHyjalWaveMoveTo[]=
-{
-    {BASE_ALLY,  5018.654f, -1752.074f, 1322.203f},
-    {BASE_HORDE, 5504.569f, -2688.489f, 1479.991f}
-};
-
-struct HyjalYells
-{
-    uint32   uiCreatureEntry;
-    YellType m_pYellType;                                   // Used to determine the type of yell (attack, rally, etc)
-    int32    m_iTextId;                                     // The text id to be yelled
-};
-
-static const HyjalYells aHyjalYell[]=
-{
-    {NPC_JAINA,  ATTACKED, -1534000},
-    {NPC_JAINA,  ATTACKED, -1534001},
-    {NPC_JAINA,  INCOMING, -1534002},
-    {NPC_JAINA,  BEGIN,    -1534003},
-    {NPC_JAINA,  RALLY,    -1534004},
-    {NPC_JAINA,  RALLY,    -1534005},
-    {NPC_JAINA,  FAILURE,  -1534006},
-    {NPC_JAINA,  SUCCESS,  -1534007},
-    {NPC_JAINA,  DEATH,    -1534008},
-
-    {NPC_THRALL, ATTACKED, -1534009},
-    {NPC_THRALL, ATTACKED, -1534010},
-    {NPC_THRALL, INCOMING, -1534011},
-    {NPC_THRALL, BEGIN,    -1534012},
-    {NPC_THRALL, RALLY,    -1534013},
-    {NPC_THRALL, RALLY,    -1534014},
-    {NPC_THRALL, FAILURE,  -1534015},
-    {NPC_THRALL, SUCCESS,  -1534016},
-    {NPC_THRALL, DEATH,    -1534017}
-};
-
-struct HyjalWave
-{
-    uint32 m_auiMobEntry[MAX_WAVE_MOB];                     // Stores Creature Entries to be summoned in Waves
-    uint32 m_uiWaveTimer;                                   // The timer before the next wave is summoned
-    bool   m_bIsBoss;                                       // Simply used to inform the wave summoner that the next wave contains a boss to halt all waves after that
-};
-
-// Waves that will be summoned in the Alliance Base
-static const HyjalWave aHyjalWavesAlliance[]=
-{
-    // Rage Winterchill Wave 1-8
-    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, 0, 0, 0, 0, 0, 0, 0, 0}, 125000, false},
-    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_CRYPT, NPC_CRYPT, 0, 0, 0, 0, 0, 0}, 125000, false},
-    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, 0, 0, 0, 0, 0, 0}, 125000, false},
-    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0, 0, 0}, 125000, false},
-    {{NPC_GHOUL, NPC_GHOUL, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0, 0, 0}, 125000, false},
-    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, 0, 0, 0, 0, 0, 0}, 125000, false},
-    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, 0, 0, 0, 0, 0, 0}, 125000, false},
-    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_ABOMI, NPC_ABOMI, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0}, 140000, false},
-    // All 8 Waves are summoned, summon Rage Winterchill, next few waves are for Anetheron
-    {{NPC_WINTERCHILL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, true},
-    // Anetheron Wave 1-8
-    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, 0, 0, 0, 0, 0, 0, 0, 0}, 125000, false},
-    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, 0, 0, 0, 0, 0, 0}, 125000, false},
-    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0, 0, 0}, 125000, false},
-    {{NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_BANSH, NPC_BANSH, 0, 0, 0, 0, 0, 0}, 125000, false},
-    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_BANSH, NPC_BANSH, NPC_BANSH, NPC_BANSH, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0, 0, 0}, 125000, false},
-    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_ABOMI, NPC_ABOMI, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0, 0, 0}, 125000, false},
-    {{NPC_GHOUL, NPC_GHOUL, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_BANSH, NPC_BANSH, 0, 0, 0, 0, 0, 0}, 125000, false},
-    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_BANSH, NPC_BANSH, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0}, 140000, false},
-    // All 8 Waves are summoned, summon Anatheron
-    {{NPC_ANETHERON, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, true}
-};
-
-// Waves that are summoned in the Horde base
-static const HyjalWave aHyjalWavesHorde[]=
-{
-    // Kaz'Rogal Wave 1-8
-    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_BANSH, NPC_BANSH, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0, 0, 0}, 135000, false},
-    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, 0, 0, 0, 0}, 165000, false},
-    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0}, 160000, false},
-    {{NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0}, 165000, false},
-    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0}, 135000, false},
-    {{NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_FROST, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 135000, false},
-    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_FROST, 0, 0, 0, 0, 0, 0, 0}, 195000, false},
-    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_CRYPT, NPC_CRYPT, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_NECRO, NPC_NECRO, NPC_BANSH, NPC_BANSH, 0, 0}, 225000, false},
-    // All 8 Waves are summoned, summon Kaz'Rogal, next few waves are for Azgalor
-    {{NPC_KAZROGAL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, true},
-    // Azgalor Wave 1-8
-    {{NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0, 0, 0}, 135000, false},
-    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_FROST, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, 0, 0, 0, 0}, 165000, false},
-    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, 0, 0, 0, 0, 0, 0}, 160000, false},
-    {{NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_STALK, NPC_STALK, NPC_STALK, NPC_STALK, NPC_STALK, NPC_STALK, NPC_STALK, NPC_STALK, 0, 0, 0, 0}, 165000, false},
-    {{NPC_STALK, NPC_STALK, NPC_STALK, NPC_STALK, NPC_STALK, NPC_STALK, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0}, 135000, false},
-    {{NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_BANSH, NPC_BANSH, NPC_BANSH, NPC_BANSH, NPC_BANSH, NPC_BANSH, 0, 0, 0, 0, 0, 0}, 135000, false},
-    {{NPC_GHOUL, NPC_GHOUL, NPC_CRYPT, NPC_CRYPT, NPC_STALK, NPC_STALK, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, 0, 0, 0, 0}, 195000, false},
-    {{NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_STALK, NPC_STALK, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_BANSH, NPC_BANSH, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0}, 225000, false},
-    // All 8 Waves are summoned, summon Azgalor
-    {{NPC_AZGALOR, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, true}
-};
-
-void hyjalAI::Reset()
-{
-    // BossGuids
-    m_aBossGuid[0].Clear();
-    m_aBossGuid[1].Clear();
-
-    // Timers
-    m_uiNextWaveTimer = 10000;
-    m_uiWaveMoveTimer = 15000;
-    m_uiCheckTimer = 0;
-    m_uiRetreatTimer = 25000;
-
-    // Misc
-    m_uiWaveCount = 0;
-    m_uiEnemyCount = 0;
-
-    // Set base area based on creature entry
-    switch(m_creature->GetEntry())
-    {
-        case NPC_JAINA:
-            m_uiBase = BASE_ALLY;
-            DoCastSpellIfCan(m_creature, SPELL_BRILLIANCE_AURA, CAST_TRIGGERED);
-            break;
-        case NPC_THRALL:
-            m_uiBase = BASE_HORDE;
-            break;
-    }
-
-    // Bools
-    m_bIsEventInProgress = false;
-    m_bIsSummoningWaves = false;
-
-    m_bIsRetreating = false;
-    m_bDebugMode = false;
-
-    // Flags
-    m_creature->SetFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_GOSSIP);
-
-    // Reset World States
-    m_pInstance->DoUpdateWorldState(WORLD_STATE_WAVES, 0);
-    m_pInstance->DoUpdateWorldState(WORLD_STATE_ENEMY, 0);
-    m_pInstance->DoUpdateWorldState(WORLD_STATE_ENEMYCOUNT, 0);
-
-    if (!m_pInstance)
-        return;
-
-    m_bIsFirstBossDead = m_uiBase ? m_pInstance->GetData(TYPE_KAZROGAL) == DONE : m_pInstance->GetData(TYPE_WINTERCHILL) == DONE;
-    m_bIsSecondBossDead = m_uiBase ? m_pInstance->GetData(TYPE_AZGALOR) == DONE : m_pInstance->GetData(TYPE_ANETHERON) == DONE;
-
-    // Reset Instance Data for trash count
-    m_pInstance->SetData(TYPE_TRASH_COUNT, 0);
-}
-
-void hyjalAI::EnterEvadeMode()
-{
-    m_creature->RemoveAllAuras();
-    m_creature->DeleteThreatList();
-    m_creature->CombatStop(true);
-
-    if (m_creature->isAlive())
-        m_creature->GetMotionMaster()->MoveTargetedHome();
-
-    m_creature->SetLootRecipient(NULL);
-}
-
-void hyjalAI::JustReachedHome()
-{
-    if (m_uiBase == BASE_ALLY)
-        DoCastSpellIfCan(m_creature, SPELL_BRILLIANCE_AURA, CAST_TRIGGERED);
-
-    m_bIsFirstBossDead = m_uiBase ? m_pInstance->GetData(TYPE_KAZROGAL) == DONE : m_pInstance->GetData(TYPE_WINTERCHILL) == DONE;
-    m_bIsSecondBossDead = m_uiBase ? m_pInstance->GetData(TYPE_AZGALOR) == DONE : m_pInstance->GetData(TYPE_ANETHERON) == DONE;
-}
-
-void hyjalAI::Aggro(Unit *who)
-{
-    for(uint8 i = 0; i < MAX_SPELL; ++i)
-        if (m_aSpells[i].m_uiCooldown)
-            m_uiSpellTimer[i] = m_aSpells[i].m_uiCooldown;
-
-    DoTalk(ATTACKED);
-}
-
-void hyjalAI::SpawnCreatureForWave(uint32 uiMobEntry)
-{
-    HyjalLocation const* pSpawn = NULL;
-
-    uint32 uiMaxCount = countof(aHyjalSpawnLoc);
-    uint32 uiRandId = urand(1, uiMaxCount/2);               //unsafe, if array becomes uneven.
-
-    uint32 uiJ = 0;
-
-    for (uint32 i = 0; i < uiMaxCount; ++i)
-    {
-        if (aHyjalSpawnLoc[i].m_pBaseArea != (eBaseArea)m_uiBase)
-            continue;
-
-        ++uiJ;
-
-        if (uiJ == uiRandId)
-        {
-            pSpawn = &aHyjalSpawnLoc[i];
-            break;
-        }
-    }
-
-    if (pSpawn)
-        m_creature->SummonCreature(uiMobEntry, pSpawn->m_fX, pSpawn->m_fY, pSpawn->m_fZ, 0.0f, TEMPSUMMON_TIMED_OR_DEAD_DESPAWN, 120000);
-}
-
-void hyjalAI::JustSummoned(Creature* pSummoned)
-{
-    // not interesting for us
-    if (pSummoned->GetEntry() == NPC_WATER_ELEMENTAL || pSummoned->GetEntry() == NPC_DIRE_WOLF)
-        return;
-
-    // Increment Enemy Count to be used in World States and instance script
-    ++m_uiEnemyCount;
-
-    HyjalLocation const* pMove = NULL;
-
-    for (uint32 i = 0; i < countof(aHyjalWaveMoveTo); ++i)
-    {
-        if (aHyjalWaveMoveTo[i].m_pBaseArea != (eBaseArea)m_uiBase)
-            continue;
-
-        pMove = &aHyjalWaveMoveTo[i];
-        break;
-    }
-
-    if (pMove)
-    {
-        float fX, fY, fZ;
-        pSummoned->GetRandomPoint(pMove->m_fX, pMove->m_fY, pMove->m_fZ, 10.0f, fX, fY, fZ);
-
-        pSummoned->SetWalk(false);
-        pSummoned->GetMotionMaster()->MovePoint(0, fX, fY, fZ);
-    }
-
-    // Check if creature is a boss.
-    if (pSummoned->IsWorldBoss())
-    {
-        if (!m_bIsFirstBossDead)
-            m_aBossGuid[0] = pSummoned->GetObjectGuid();
-        else
-            m_aBossGuid[1] = pSummoned->GetObjectGuid();
-
-        m_uiCheckTimer = 5000;
-    }
-    else
-        lWaveMobGUIDList.push_back(pSummoned->GetObjectGuid());
-}
-
-void hyjalAI::SummonNextWave()
-{
-    // 1 in 4 chance we give a rally yell. Not sure if the chance is offilike.
-    if (!urand(0, 3))
-        DoTalk(RALLY);
-
-    if (!m_pInstance)
-        return;
-
-    HyjalWave const* pWaveData = m_uiBase ? &aHyjalWavesHorde[m_uiWaveCount] : &aHyjalWavesAlliance[m_uiWaveCount];
-
-    if (!pWaveData)
-    {
-        error_log("SD2: hyjalAI not able to obtain wavedata for SummonNextWave.");
-        return;
-    }
-
-    m_uiEnemyCount = m_pInstance->GetData(TYPE_TRASH_COUNT);
-
-    for(uint8 i = 0; i < MAX_WAVE_MOB; ++i)
-    {
-        if (pWaveData->m_auiMobEntry[i])
-            SpawnCreatureForWave(pWaveData->m_auiMobEntry[i]);
-    }
-
-    if (!pWaveData->m_bIsBoss)
-    {
-        uint32 stateValue = m_uiWaveCount+1;
-
-        if (m_bIsFirstBossDead)
-            stateValue -= MAX_WAVES;                        // Subtract 9 from it to give the proper wave number if we are greater than 8
-
-        // Set world state to our current wave number
-        m_pInstance->DoUpdateWorldState(WORLD_STATE_WAVES, stateValue);
-        // Enable world state
-        m_pInstance->DoUpdateWorldState(WORLD_STATE_ENEMY, 1);
-
-        m_pInstance->SetData(TYPE_TRASH_COUNT, m_uiEnemyCount);   // Send data for instance script to update count
-
-        if (!m_bDebugMode)
-            m_uiNextWaveTimer = pWaveData->m_uiWaveTimer;
-        else
-        {
-            m_uiNextWaveTimer = 15000;
-            debug_log("SD2: HyjalAI: debug mode is enabled. Next Wave in 15 seconds");
-        }
-    }
-    else
-    {
-        // Set world state for waves to 0 to disable it.
-        m_pInstance->DoUpdateWorldState(WORLD_STATE_WAVES, 0);
-        m_pInstance->DoUpdateWorldState(WORLD_STATE_ENEMY, 1);
-
-        // Set World State for enemies invading to 1.
-        m_pInstance->DoUpdateWorldState(WORLD_STATE_ENEMYCOUNT, 1);
-
-        m_bIsSummoningWaves = false;
-    }
-
-    m_uiWaveMoveTimer = 15000;
-    m_uiCheckTimer = 5000;
-    ++m_uiWaveCount;
-}
-
-void hyjalAI::StartEvent()
-{
-    if (!m_pInstance)
-        return;
-
-    DoTalk(BEGIN);
-
-    m_bIsEventInProgress = true;
-    m_bIsSummoningWaves = true;
-
-    m_uiNextWaveTimer = 10000;
-    m_uiCheckTimer = 5000;
-
-    m_creature->RemoveFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_GOSSIP);
-
-    m_pInstance->DoUpdateWorldState(WORLD_STATE_WAVES, 0);
-    m_pInstance->DoUpdateWorldState(WORLD_STATE_ENEMY, 0);
-    m_pInstance->DoUpdateWorldState(WORLD_STATE_ENEMYCOUNT, 0);
-
-    m_creature->SetActiveObjectState(true);
-}
-
-void hyjalAI::DoTalk(YellType pYellType)
-{
-    HyjalYells const* pYell = NULL;
-
-    bool bGetNext = false;
-
-    for (uint32 i = 0; i < countof(aHyjalYell); ++i)
-    {
-        if (aHyjalYell[i].uiCreatureEntry == m_creature->GetEntry() && aHyjalYell[i].m_pYellType == pYellType)
-        {
-            //this would not be safe unless we knew these had two entries in m_aYell
-            if (pYellType == ATTACKED || pYellType== RALLY)
-            {
-                if (!bGetNext && urand(0, 1))
-                {
-                    bGetNext = true;
-                    continue;
-                }
-            }
-
-            pYell = &aHyjalYell[i];
-            break;
-        }
-    }
-
-    if (pYell)
-        DoScriptText(pYell->m_iTextId, m_creature);
-}
-
-void hyjalAI::SpellHitTarget(Unit* pTarget, const SpellEntry* pSpell)
-{
-    //TODO: this spell should cause misc mobs to despawn
-    //if (pSpell->Id == SPELL_MASS_TELEPORT && pTarget->GetTypeId() != TYPEID_PLAYER)
-    //{
-        //despawn;
-    //}
-}
-
-void hyjalAI::Retreat()
-{
-    //this will trigger ancient gem respawn
-    if (m_pInstance)
-        m_pInstance->SetData(TYPE_RETREAT, SPECIAL);
-
-    DoCastSpellIfCan(m_creature, SPELL_MASS_TELEPORT);
-
-    m_bIsRetreating = true;
-}
-
-void hyjalAI::JustDied(Unit* pKiller)
-{
-    DoTalk(DEATH);
-    m_creature->SetActiveObjectState(false);
-
-    //TODO: in case they die during boss encounter, then what? despawn boss?
-}
-
-void hyjalAI::UpdateAI(const uint32 uiDiff)
-{
-    if (!m_bIsEventInProgress)
-        return;
-
-    if (m_bIsSummoningWaves && m_pInstance)
-    {
-        if (m_uiWaveMoveTimer < uiDiff)
-        {
-            // Skip the master timer, and start next wave in 5. Clear the list, it should not be any here now.
-            if (!m_pInstance->GetData(TYPE_TRASH_COUNT))
-            {
-                lWaveMobGUIDList.clear();
-                m_uiNextWaveTimer = std::min(m_uiNextWaveTimer, (uint32)5000);
-            }
-
-            for (GuidList::const_iterator itr = lWaveMobGUIDList.begin(); itr != lWaveMobGUIDList.end(); ++itr)
-            {
-                if (Creature* pTemp = m_pInstance->instance->GetCreature(*itr))
-                {
-                    if (!pTemp->isAlive() || pTemp->getVictim())
-                        continue;
-
-                    pTemp->SetWalk(false);
-                    pTemp->GetMotionMaster()->MovePoint(1, m_creature->GetPositionX(), m_creature->GetPositionY(), m_creature->GetPositionZ());
-                }
-            }
-            m_uiWaveMoveTimer = 10000;
-        }
-        else
-            m_uiWaveMoveTimer -= uiDiff;
-
-        if (m_uiNextWaveTimer < uiDiff)
-            SummonNextWave();
-        else
-            m_uiNextWaveTimer -= uiDiff;
-    }
-
-    if (m_uiCheckTimer < uiDiff)
-    {
-        for(uint8 i = 0; i < 2; ++i)
-        {
-            if (m_aBossGuid[i])
-            {
-                Creature* pBoss = m_creature->GetMap()->GetCreature(m_aBossGuid[i]);
-
-                if (pBoss && !pBoss->isAlive())
-                {
-                    if (m_aBossGuid[i] == m_aBossGuid[0])
-                    {
-                        DoTalk(INCOMING);
-                        m_bIsFirstBossDead = true;
-                    }
-                    else if (m_aBossGuid[i] == m_aBossGuid[1])
-                    {
-                        DoTalk(SUCCESS);
-                        m_bIsSecondBossDead = true;
-                    }
-
-                    m_bIsEventInProgress = false;
-                    m_uiCheckTimer = 0;
-
-                    m_creature->SetFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_GOSSIP);
-
-                    m_aBossGuid[i].Clear();
-
-                    // Reset world state for enemies to disable it
-                    m_pInstance->DoUpdateWorldState(WORLD_STATE_ENEMY, 0);
-
-                    m_creature->SetActiveObjectState(false);
-                }
-            }
-        }
-
-        m_uiCheckTimer = 5000;
-    }
-    else
-        m_uiCheckTimer -= uiDiff;
-
-    if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
-        return;
-
-    for(uint8 i = 0; i < MAX_SPELL; ++i)
-    {
-        if (m_aSpells[i].m_uiSpellId)
-        {
-            if (m_uiSpellTimer[i] < uiDiff)
-            {
-                if (m_creature->IsNonMeleeSpellCasted(false))
-                    m_creature->InterruptNonMeleeSpells(false);
-
-                Unit* pTarget = NULL;
-
-                switch(m_aSpells[i].m_pType)
-                {
-                    case TARGETTYPE_SELF:   pTarget = m_creature; break;
-                    case TARGETTYPE_RANDOM: pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0); break;
-                    case TARGETTYPE_VICTIM: pTarget = m_creature->getVictim(); break;
-                }
-
-                if (pTarget)
-                {
-                    DoCastSpellIfCan(pTarget, m_aSpells[i].m_uiSpellId);
-                    m_uiSpellTimer[i] = m_aSpells[i].m_uiCooldown;
-                }
-            }
-            else
-                m_uiSpellTimer[i] -= uiDiff;
-        }
-    }
-
-    DoMeleeAttackIfReady();
-}
diff --git a/scripts/kalimdor/caverns_of_time/hyjal/hyjalAI.h b/scripts/kalimdor/caverns_of_time/hyjal/hyjalAI.h
deleted file mode 100644
index a6a5154..0000000
--- a/scripts/kalimdor/caverns_of_time/hyjal/hyjalAI.h
+++ /dev/null
@@ -1,138 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software licensed under GPL version 2
- * Please see the included DOCS/LICENSE.TXT for more information */
-
-#ifndef SC_HYJALAI_H
-#define SC_HYJALAI_H
-
-#include "hyjal.h"
-
-enum eBaseArea
-{
-    BASE_ALLY       = 0,
-    BASE_HORDE      = 1
-};
-
-enum eMisc
-{
-    MAX_SPELL               = 3,
-    MAX_WAVES               = 9,
-    MAX_WAVE_MOB            = 18,
-
-    ITEM_TEAR_OF_GODDESS    = 24494
-};
-
-enum eSpell
-{
-    SPELL_MASS_TELEPORT     = 16807,
-
-    // Spells for Jaina
-    SPELL_BRILLIANCE_AURA   = 31260,
-    SPELL_BLIZZARD          = 31266,
-    SPELL_PYROBLAST         = 31263,
-    SPELL_SUMMON_ELEMENTALS = 31264,
-
-    // Thrall spells
-    SPELL_CHAIN_LIGHTNING   = 31330,
-    SPELL_FERAL_SPIRIT      = 31331
-};
-
-enum TargetType                                             // Used in the spell cast system for the AI
-{
-    TARGETTYPE_SELF     = 0,
-    TARGETTYPE_RANDOM   = 1,
-    TARGETTYPE_VICTIM   = 2,
-};
-
-enum YellType
-{
-    ATTACKED     = 0,                                       // Used when attacked and set in combat
-    BEGIN        = 1,                                       // Used when the event is begun
-    INCOMING     = 2,                                       // Used to warn the raid that another wave phase is coming
-    RALLY        = 3,                                       // Used to rally the raid and warn that the next wave has been summoned
-    FAILURE      = 4,                                       // Used when raid has failed (unsure where to place)
-    SUCCESS      = 5,                                       // Used when the raid has sucessfully defeated a wave phase
-    DEATH        = 6,                                       // Used on death
-};
-
-struct MANGOS_DLL_DECL hyjalAI : public ScriptedAI
-{
-    hyjalAI(Creature* pCreature) : ScriptedAI(pCreature)
-    {
-        memset(m_aSpells, 0, sizeof(m_aSpells));
-        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
-        Reset();
-    }
-
-    // Generically used to reset our variables. Do *not* call in EnterEvadeMode as this may make problems if the raid is still in combat
-    void Reset();
-
-    // Send creature back to spawn location and evade.
-    void EnterEvadeMode();
-
-    // Called when creature reached home location after evade.
-    void JustReachedHome();
-
-    // Used to reset cooldowns for our spells and to inform the raid that we're under attack
-    void Aggro(Unit* pWho);
-
-    // Called to summon waves, check for boss deaths and to cast our spells.
-    void UpdateAI(const uint32 uiDiff);
-
-    // Called on death, informs the raid that they have failed.
-    void JustDied(Unit* pKiller);
-
-    // "Teleport" all friendly creatures away from the base.
-    void Retreat();
-
-    // Summons a creature for that wave in that base
-    void SpawnCreatureForWave(uint32 uiMobEntry);
-
-    void JustSummoned(Creature*);
-
-    // Summons the next wave, calls SummonCreature
-    void SummonNextWave();
-
-    // Begins the event by gossip click
-    void StartEvent();
-
-    // Searches for the appropriate yell and sound and uses it to inform the raid of various things
-    void DoTalk(YellType pYellType);
-
-    // Used to filter who to despawn after mass teleport
-    void SpellHitTarget(Unit*, const SpellEntry*);
-
-    public:
-
-        ScriptedInstance* m_pInstance;
-
-        ObjectGuid m_aBossGuid[2];
-
-        uint32 m_uiNextWaveTimer;
-        uint32 m_uiWaveCount;
-        uint32 m_uiWaveMoveTimer;
-        uint32 m_uiCheckTimer;
-        uint32 m_uiEnemyCount;
-        uint32 m_uiRetreatTimer;
-        uint32 m_uiBase;
-
-        bool m_bIsEventInProgress;
-        bool m_bIsFirstBossDead;
-        bool m_bIsSecondBossDead;
-        bool m_bIsSummoningWaves;
-        bool m_bIsRetreating;
-        bool m_bDebugMode;
-
-        struct sSpells
-        {
-            uint32 m_uiSpellId;
-            uint32 m_uiCooldown;
-            TargetType m_pType;
-        } m_aSpells[MAX_SPELL];
-
-    private:
-        uint32 m_uiSpellTimer[MAX_SPELL];
-        GuidList lWaveMobGUIDList;
-};
-
-#endif
diff --git a/scripts/kalimdor/caverns_of_time/hyjal/instance_hyjal.cpp b/scripts/kalimdor/caverns_of_time/hyjal/instance_hyjal.cpp
deleted file mode 100644
index 4df40ee..0000000
--- a/scripts/kalimdor/caverns_of_time/hyjal/instance_hyjal.cpp
+++ /dev/null
@@ -1,245 +0,0 @@
-/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-/* ScriptData
-SDName: Instance_Mount_Hyjal
-SD%Complete: 100
-SDComment: Instance Data Scripts and functions to acquire mobs and set encounter status for use in various Hyjal Scripts
-SDCategory: Caverns of Time, Mount Hyjal
-EndScriptData */
-
-#include "precompiled.h"
-#include "hyjal.h"
-
-/* Battle of Mount Hyjal encounters:
-0 - Rage Winterchill event
-1 - Anetheron event
-2 - Kaz'rogal event
-3 - Azgalor event
-4 - Archimonde event
-*/
-
-instance_mount_hyjal::instance_mount_hyjal(Map* pMap) : ScriptedInstance(pMap),
-    m_uiTrashCount(0)
-{
-    Initialize();
-}
-
-void instance_mount_hyjal::Initialize()
-{
-    memset(&m_auiEncounter, 0, sizeof(m_auiEncounter));
-}
-
-bool instance_mount_hyjal::IsEncounterInProgress() const
-{
-    for(uint8 i = 0; i < MAX_ENCOUNTER; ++i)
-        if (m_auiEncounter[i] == IN_PROGRESS) return true;
-
-    return false;
-}
-
-void instance_mount_hyjal::OnPlayerEnter(Player* pPlayer)
-{
-    if (GetData(TYPE_AZGALOR) == DONE)
-        DoSpawnArchimonde();
-}
-
-void instance_mount_hyjal::OnCreatureCreate(Creature* pCreature)
-{
-    if (pCreature->GetEntry() == NPC_ARCHIMONDE)
-        m_mNpcEntryGuidStore[NPC_ARCHIMONDE] == pCreature->GetObjectGuid();
-}
-
-void instance_mount_hyjal::OnObjectCreate(GameObject* pGo)
-{
-    if (pGo->GetEntry() == GO_ANCIENT_GEM)
-        lAncientGemGUIDList.push_back(pGo->GetObjectGuid());
-}
-
-void instance_mount_hyjal::OnCreatureEnterCombat(Creature* pCreature)
-{
-    switch (pCreature->GetEntry())
-    {
-        case NPC_WINTERCHILL: SetData(TYPE_WINTERCHILL, IN_PROGRESS); break;
-        case NPC_ANETHERON:   SetData(TYPE_ANETHERON, IN_PROGRESS);   break;
-        case NPC_KAZROGAL:    SetData(TYPE_KAZROGAL, IN_PROGRESS);    break;
-        case NPC_AZGALOR:     SetData(TYPE_AZGALOR, IN_PROGRESS);     break;
-        case NPC_ARCHIMONDE:  SetData(TYPE_ARCHIMONDE, IN_PROGRESS);  break;
-    }
-}
-
-void instance_mount_hyjal::OnCreatureEvade(Creature* pCreature)
-{
-    switch (pCreature->GetEntry())
-    {
-        case NPC_WINTERCHILL: SetData(TYPE_WINTERCHILL, FAIL); break;
-        case NPC_ANETHERON:   SetData(TYPE_ANETHERON, FAIL);   break;
-        case NPC_KAZROGAL:    SetData(TYPE_KAZROGAL, FAIL);    break;
-        case NPC_AZGALOR:     SetData(TYPE_AZGALOR, FAIL);     break;
-    }
-}
-
-void instance_mount_hyjal::OnCreatureDeath(Creature* pCreature)
-{
-    switch (pCreature->GetEntry())
-    {
-        case NPC_WINTERCHILL: SetData(TYPE_WINTERCHILL, DONE); break;
-        case NPC_ANETHERON:   SetData(TYPE_ANETHERON, DONE);   break;
-        case NPC_KAZROGAL:    SetData(TYPE_KAZROGAL, DONE);    break;
-        case NPC_AZGALOR:     SetData(TYPE_AZGALOR, DONE);     break;
-        case NPC_ARCHIMONDE:  SetData(TYPE_ARCHIMONDE, DONE);  break;
-
-        // Trash Mobs summoned in waves
-        case NPC_NECRO:
-        case NPC_ABOMI:
-        case NPC_GHOUL:
-        case NPC_BANSH:
-        case NPC_CRYPT:
-        case NPC_GARGO:
-        case NPC_FROST:
-        case NPC_GIANT:
-        case NPC_STALK:
-            // Decrease counter, and update world-state
-            if (m_uiTrashCount)
-            {
-                --m_uiTrashCount;
-                DoUpdateWorldState(WORLD_STATE_ENEMYCOUNT, m_uiTrashCount);
-            }
-            break;
-    }
-}
-
-void instance_mount_hyjal::SetData(uint32 uiType, uint32 uiData)
-{
-    switch(uiType)
-    {
-        case TYPE_WINTERCHILL:
-        case TYPE_ANETHERON:
-        case TYPE_KAZROGAL:
-            m_auiEncounter[uiType] = uiData;
-            break;
-        case TYPE_AZGALOR:
-            m_auiEncounter[uiType] = uiData;
-            if (uiData == DONE)
-                DoSpawnArchimonde();
-            break;
-        case TYPE_ARCHIMONDE:
-            m_auiEncounter[uiType] = uiData;
-            break;
-
-        case TYPE_TRASH_COUNT:
-            m_uiTrashCount = uiData;
-            DoUpdateWorldState(WORLD_STATE_ENEMYCOUNT, m_uiTrashCount);
-            break;
-
-        case TYPE_RETREAT:
-            if (uiData == SPECIAL)
-            {
-                if (!lAncientGemGUIDList.empty())
-                {
-                    for(GuidList::const_iterator itr = lAncientGemGUIDList.begin(); itr != lAncientGemGUIDList.end(); ++itr)
-                    {
-                        //don't know how long it expected
-                        DoRespawnGameObject(*itr, DAY);
-                    }
-                }
-            }
-            break;
-    }
-
-    debug_log("SD2: Instance Hyjal: Instance data updated for event %u (Data=%u)", uiType, uiData);
-
-    if (uiData == DONE)
-    {
-        OUT_SAVE_INST_DATA;
-
-        std::ostringstream saveStream;
-        saveStream << m_auiEncounter[0] << " " << m_auiEncounter[1] << " " << m_auiEncounter[2] << " "
-            << m_auiEncounter[3] << " " << m_auiEncounter[4];
-
-        m_strSaveData = saveStream.str();
-
-        SaveToDB();
-        OUT_SAVE_INST_DATA_COMPLETE;
-    }
-}
-
-void instance_mount_hyjal::DoSpawnArchimonde()
-{
-    // Don't spawn if already killed
-    if (GetData(TYPE_ARCHIMONDE) == DONE)
-        return;
-
-    // Don't spawn him twice
-    if (GetSingleCreatureFromStorage(NPC_ARCHIMONDE, true))
-        return;
-
-    // Summon Archimonde
-    if (Player* pPlayer = GetPlayerInMap())
-        pPlayer->SummonCreature(NPC_ARCHIMONDE, aArchimondeSpawnLoc[0], aArchimondeSpawnLoc[1], aArchimondeSpawnLoc[2], aArchimondeSpawnLoc[3], TEMPSUMMON_DEAD_DESPAWN, 0);
-}
-
-uint32 instance_mount_hyjal::GetData(uint32 uiType)
-{
-    switch(uiType)
-    {
-        case TYPE_WINTERCHILL:
-        case TYPE_ANETHERON:
-        case TYPE_KAZROGAL:
-        case TYPE_AZGALOR:
-        case TYPE_ARCHIMONDE:
-            return m_auiEncounter[uiType];
-        case TYPE_TRASH_COUNT:
-            return m_uiTrashCount;
-        default:
-            return 0;
-    }
-}
-
-void instance_mount_hyjal::Load(const char* chrIn)
-{
-    if (!chrIn)
-    {
-        OUT_LOAD_INST_DATA_FAIL;
-        return;
-    }
-
-    OUT_LOAD_INST_DATA(chrIn);
-
-    std::istringstream loadStream(chrIn);
-    loadStream >> m_auiEncounter[0] >> m_auiEncounter[1] >> m_auiEncounter[2] >> m_auiEncounter[3] >> m_auiEncounter[4];
-
-    for(uint8 i = 0; i < MAX_ENCOUNTER; ++i)
-        if (m_auiEncounter[i] == IN_PROGRESS)                // Do not load an encounter as IN_PROGRESS - reset it instead.
-            m_auiEncounter[i] = NOT_STARTED;
-
-    OUT_LOAD_INST_DATA_COMPLETE;
-}
-
-InstanceData* GetInstanceData_instance_mount_hyjal(Map* pMap)
-{
-    return new instance_mount_hyjal(pMap);
-}
-
-void AddSC_instance_mount_hyjal()
-{
-    Script* pNewScript;
-
-    pNewScript = new Script;
-    pNewScript->Name = "instance_hyjal";
-    pNewScript->GetInstanceData = &GetInstanceData_instance_mount_hyjal;
-    pNewScript->RegisterSelf();
-}
diff --git a/scripts/kalimdor/caverns_of_time/hyjal_summit/boss_archimonde.cpp b/scripts/kalimdor/caverns_of_time/hyjal_summit/boss_archimonde.cpp
new file mode 100644
index 0000000..47df752
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/hyjal_summit/boss_archimonde.cpp
@@ -0,0 +1,466 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Boss_Archimonde
+SD%Complete: 85
+SDComment: Timers; Some details may need adjustments.
+SDCategory: Caverns of Time, Mount Hyjal
+EndScriptData */
+
+#include "precompiled.h"
+#include "hyjal.h"
+
+enum
+{
+    SAY_INTRO                   = -1534018,
+    SAY_AGGRO                   = -1534019,
+    SAY_DOOMFIRE1               = -1534020,
+    SAY_DOOMFIRE2               = -1534021,
+    SAY_AIR_BURST1              = -1534022,
+    SAY_AIR_BURST2              = -1534023,
+    SAY_SLAY1                   = -1534024,
+    SAY_SLAY2                   = -1534025,
+    SAY_SLAY3                   = -1534026,
+    SAY_ENRAGE                  = -1534027,
+    SAY_EPILOGUE                = -1534028,
+    SAY_SOUL_CHARGE1            = -1534029,
+    SAY_SOUL_CHARGE2            = -1534030,
+
+    // spells
+    SPELL_DRAIN_TREE            = 39140,                    // intro cosmetic spell
+    //SPELL_DRAIN_TREE_DUMMY    = 39141,                    // purpose unk
+
+    SPELL_FINGER_DEATH          = 31984,
+    SPELL_FINGER_DEATH_SCRIPT   = 32111,                    // targets whisps
+    SPELL_FINGER_DEATH_DUMMY    = 39369,                    // epilogue spell
+    SPELL_HAND_OF_DEATH         = 35354,                    // hard enrage spell
+    SPELL_AIR_BURST             = 32014,
+    SPELL_GRIP_OF_THE_LEGION    = 31972,
+    SPELL_DOOMFIRE_STRIKE       = 31903,                    // summons 18095 and 18104
+    SPELL_SOUL_CHARGE_YELLOW    = 32045,                    // procs 32054
+    SPELL_SOUL_CHARGE_GREEN     = 32051,                    // procs 32057
+    SPELL_SOUL_CHARGE_RED       = 32052,                    // procs 32053
+    SPELL_FEAR                  = 31970,
+
+    SPELL_PROTECTION_OF_ELUNE   = 38528,                    // protect the players on epilogue
+
+    // summoned creatures
+    NPC_DOOMFIRE                = 18095,
+    //NPC_DOOMFIRE_SPIRIT       = 18104,
+    NPC_ANCIENT_WISP            = 17946,
+    NPC_CHANNEL_TARGET          = 22418,                    // if he gets in range of 75.0f, then he gets enraged
+
+    // doomfire spells
+    SPELL_DOOMFIRE_SPAWN        = 32074,
+    SPELL_DOOMFIRE              = 31945,                    // fire damage spell
+
+    // wisp spells
+    SPELL_DENOUEMENT_WISP       = 32124,
+    SPELL_ANCIENT_SPARK         = 39349,
+};
+
+/* Finally, Archimonde's script. His script isn't extremely complex, most are simply spells on timers.
+   The only complicated aspect of the battle is Finger of Death and Doomfire, with Doomfire being the
+   hardest bit to code. Finger of Death is simply a distance check - if no one is in melee range, then
+   select a random target and cast the spell on them. However, if someone IS in melee range, and this
+   is NOT the main tank (creature's victim), then we aggro that player and they become the new victim.
+   For Doomfire, we summon a mob (Doomfire Spirit) for the Doomfire mob to follow. It's spirit will
+   randomly select it's target to follow and then we create the random movement making it unpredictable.
+*/
+
+struct MANGOS_DLL_DECL boss_archimondeAI : public ScriptedAI
+{
+    boss_archimondeAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        m_bHasIntro = false;
+        Reset();
+    }
+
+    ScriptedInstance* m_pInstance;
+
+    uint32 m_uiDrainNordrassilTimer;
+    uint32 m_uiFearTimer;
+    uint32 m_uiAirBurstTimer;
+    uint32 m_uiGripOfTheLegionTimer;
+    uint32 m_uiDoomfireTimer;
+    uint32 m_uiFingerOfDeathTimer;
+    uint32 m_uiHandOfDeathTimer;
+    uint32 m_uiSummonWispTimer;
+    uint32 m_uiWispCount;
+    uint32 m_uiEnrageTimer;
+
+    bool m_bHasIntro;
+    bool m_bIsEnraged;
+    bool m_bIsEpilogue;
+    bool m_bStartEpilogue;
+
+    void Reset()
+    {
+        m_uiDrainNordrassilTimer = 10000;
+        m_uiFearTimer            = 40000;
+        m_uiAirBurstTimer        = 30000;
+        m_uiGripOfTheLegionTimer = urand(5000, 25000);
+        m_uiDoomfireTimer        = 15000;
+        m_uiFingerOfDeathTimer   = 15000;
+        m_uiHandOfDeathTimer     = 2000;
+        m_uiWispCount            = 0;
+        m_uiEnrageTimer          = 10*MINUTE*IN_MILLISECONDS;
+
+        m_bIsEnraged             = false;
+        m_bIsEpilogue            = false;
+        m_bStartEpilogue         = false;
+    }
+
+    void Aggro(Unit* pWho)
+    {
+        DoScriptText(SAY_AGGRO, m_creature);
+    }
+
+    void MoveInLineOfSight(Unit* pWho)
+    {
+        // If the boss reaches the tree during the fight, then he enrages - the distance is not very clear
+        if (!m_bIsEnraged && pWho->GetEntry() == NPC_CHANNEL_TARGET && pWho->IsWithinDistInMap(m_creature, 75.0f))
+        {
+            m_uiEnrageTimer = 1000;
+            m_bIsEnraged = true;
+        }
+
+        ScriptedAI::MoveInLineOfSight(pWho);
+    }
+
+    void KilledUnit(Unit* pVictim)
+    {
+        if (pVictim->GetTypeId() != TYPEID_PLAYER)
+            return;
+
+        switch(urand(0, 2))
+        {
+            case 0: DoScriptText(SAY_SLAY1, m_creature); break;
+            case 1: DoScriptText(SAY_SLAY2, m_creature); break;
+            case 2: DoScriptText(SAY_SLAY3, m_creature); break;
+        }
+
+        switch(pVictim->getClass())
+        {
+            case CLASS_PRIEST:
+            case CLASS_PALADIN:
+            case CLASS_WARLOCK:
+                pVictim->CastSpell(m_creature, SPELL_SOUL_CHARGE_RED, true);
+                break;
+            case CLASS_MAGE:
+            case CLASS_ROGUE:
+            case CLASS_WARRIOR:
+                pVictim->CastSpell(m_creature, SPELL_SOUL_CHARGE_YELLOW, true);
+                break;
+            case CLASS_DRUID:
+            case CLASS_SHAMAN:
+            case CLASS_HUNTER:
+                pVictim->CastSpell(m_creature, SPELL_SOUL_CHARGE_GREEN, true);
+                break;
+        }
+    }
+
+    void JustReachedHome()
+    {
+        // Start epilogue at 10% hp
+        if (m_bIsEpilogue)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_PROTECTION_OF_ELUNE) == CAST_OK)
+            {
+                m_uiFingerOfDeathTimer = 5000;
+                m_bStartEpilogue = true;
+            }
+        }
+        else if (m_pInstance)
+            m_pInstance->SetData(TYPE_ARCHIMONDE, FAIL);
+    }
+
+    void JustSummoned(Creature* pSummoned)
+    {
+        if (pSummoned->GetEntry() == NPC_ANCIENT_WISP)
+        {
+            pSummoned->AI()->AttackStart(m_creature);
+            ++m_uiWispCount;
+
+            // When enough wisps have gathered or boss is low hp, then kill him
+            if (m_uiWispCount >= 45 || m_creature->GetHealthPercent() <= 1.0f)
+                pSummoned->CastSpell(pSummoned, SPELL_DENOUEMENT_WISP, false);
+        }
+        else if (pSummoned->GetEntry() == NPC_DOOMFIRE)
+        {
+            pSummoned->CastSpell(pSummoned, SPELL_DOOMFIRE_SPAWN, true);
+            pSummoned->CastSpell(pSummoned, SPELL_DOOMFIRE, true, NULL, NULL, m_creature->GetObjectGuid());
+        }
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        // Intro timer
+        if (m_uiDrainNordrassilTimer)
+        {
+            if (m_uiDrainNordrassilTimer <= uiDiff)
+            {
+                if (DoCastSpellIfCan(m_creature, SPELL_DRAIN_TREE) == CAST_OK)
+                {
+                    if (!m_bHasIntro)
+                    {
+                        DoScriptText(SAY_INTRO, m_creature);
+                        m_bHasIntro = true;
+                    }
+                    m_uiDrainNordrassilTimer = 0;
+                }
+            }
+            else
+                m_uiDrainNordrassilTimer -= uiDiff;
+        }
+
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        // Start epilogue - fight was won!
+        if (m_creature->GetHealthPercent() < 10.0f)
+        {
+            if (!m_bIsEpilogue)
+            {
+                DoScriptText(SAY_EPILOGUE, m_creature);
+
+                // move at home position and start outro
+                m_creature->GetMotionMaster()->MoveTargetedHome();
+                SetCombatMovement(false);
+                m_bIsEpilogue = true;
+            }
+
+            if (m_bStartEpilogue)
+            {
+                // Spam Finger of Death on players and Wisps
+                if (m_uiFingerOfDeathTimer < uiDiff)
+                {
+                    if (DoCastSpellIfCan(m_creature, urand(0, 1) ? SPELL_FINGER_DEATH_DUMMY : SPELL_FINGER_DEATH_SCRIPT) == CAST_OK)
+                        m_uiFingerOfDeathTimer = 1000;
+                }
+                else
+                    m_uiFingerOfDeathTimer -= uiDiff;
+
+                if (m_uiSummonWispTimer < uiDiff)
+                {
+                    float fX, fY, fZ;
+                    m_creature->GetNearPoint(m_creature, fX, fY, fZ, 0, 75.0f, urand(0, 1) ? frand(0, 2.8f) : frand(4.3f, M_PI_F*2));
+                    m_creature->SummonCreature(NPC_ANCIENT_WISP, fX, fY, fZ, 0, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 15000);
+                    m_uiSummonWispTimer = urand(1000, 1500);
+                }
+                else
+                    m_uiSummonWispTimer -= uiDiff;
+            }
+
+            // Stop using the other spells
+            return;
+        }
+
+        if (m_uiEnrageTimer)
+        {
+            if (m_uiEnrageTimer <= uiDiff)
+            {
+                if (DoCastSpellIfCan(m_creature, SPELL_HAND_OF_DEATH) == CAST_OK)
+                {
+                    DoScriptText(SAY_ENRAGE, m_creature);
+                    m_uiEnrageTimer = 0;
+                }
+            }
+            else
+                m_uiEnrageTimer -= uiDiff;
+        }
+
+        if (m_uiGripOfTheLegionTimer < uiDiff)
+        {
+            if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+            {
+                if (DoCastSpellIfCan(pTarget, SPELL_GRIP_OF_THE_LEGION) == CAST_OK)
+                    m_uiGripOfTheLegionTimer = urand(5000, 25000);
+            }
+        }
+        else
+            m_uiGripOfTheLegionTimer -= uiDiff;
+
+        if (m_uiAirBurstTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature->getVictim(), SPELL_AIR_BURST) == CAST_OK)
+            {
+                DoScriptText(urand(0, 1) ? SAY_AIR_BURST1 : SAY_AIR_BURST2, m_creature);
+                m_uiAirBurstTimer = urand(25000, 40000);
+            }
+        }
+        else
+            m_uiAirBurstTimer -= uiDiff;
+
+        if (m_uiFearTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_FEAR) == CAST_OK)
+                m_uiFearTimer = 42000;
+        }
+        else
+            m_uiFearTimer -= uiDiff;
+
+        if (m_uiDoomfireTimer < uiDiff)
+        {
+            if (DoCastSpellIfCan(m_creature, SPELL_DOOMFIRE_STRIKE) == CAST_OK)
+            {
+                DoScriptText(urand(0, 1) ? SAY_DOOMFIRE1 : SAY_DOOMFIRE2, m_creature);
+                m_uiDoomfireTimer = urand(10000, 15000);
+            }
+        }
+        else
+            m_uiDoomfireTimer -= uiDiff;
+
+        // If we are within range melee the target
+        if (m_creature->CanReachWithMeleeAttack(m_creature->getVictim()))
+        {
+            //Make sure our attack is ready and we arn't currently casting
+            if (m_creature->isAttackReady() && !m_creature->IsNonMeleeSpellCasted(false))
+            {
+                m_creature->AttackerStateUpdate(m_creature->getVictim());
+                m_creature->resetAttackTimer();
+            }
+        }
+        // Else spam Finger of Death
+        else
+        {
+            if (m_uiFingerOfDeathTimer < uiDiff)
+            {
+                if (Unit* pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0))
+                {
+                    if (DoCastSpellIfCan(pTarget, SPELL_FINGER_DEATH) == CAST_OK)
+                        m_uiFingerOfDeathTimer = 5000;
+                }
+            }
+            else
+                m_uiFingerOfDeathTimer -= uiDiff;
+        }
+    }
+};
+
+/* This is the script for the Doomfire Spirit Mob. This mob controls the doomfire npc and allows it to move randomly around the map. */
+struct MANGOS_DLL_DECL npc_doomfire_spiritAI : public ScriptedAI
+{
+    npc_doomfire_spiritAI(Creature* pCreature) : ScriptedAI(pCreature) { Reset(); }
+
+    ObjectGuid m_doomfireGuid;
+
+    uint32 m_uiDoomfireLoadTimer;
+    uint32 m_uiChangeTargetTimer;
+    float m_fAngle;
+
+    void Reset()
+    {
+        m_uiDoomfireLoadTimer = 1000;
+        m_uiChangeTargetTimer = 1500;
+        m_fAngle              = urand(0, M_PI_F*2);
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (m_uiDoomfireLoadTimer)
+        {
+            if (m_uiDoomfireLoadTimer <= uiDiff)
+            {
+                // Get the closest doomfire
+                if (Creature* pTemp = GetClosestCreatureWithEntry(m_creature, NPC_DOOMFIRE, 5.0f))
+                    m_doomfireGuid = pTemp->GetObjectGuid();
+
+                m_uiDoomfireLoadTimer = 0;
+            }
+            else
+                m_uiDoomfireLoadTimer -= uiDiff;
+        }
+
+        // It's not very clear how should this one move. For the moment just move to random points around on timer
+        if (m_uiChangeTargetTimer < uiDiff)
+        {
+            if (Creature* pDoomfire = m_creature->GetMap()->GetCreature(m_doomfireGuid))
+            {
+                float fX, fY, fZ;
+                pDoomfire->GetNearPoint(pDoomfire, fX, fY, fZ, 0, 30.0f, m_fAngle + frand(0, M_PI_F*.5));
+                pDoomfire->GetMotionMaster()->MovePoint(0, fX, fY, fZ);
+            }
+
+            m_uiChangeTargetTimer = 4000;
+        }
+        else
+            m_uiChangeTargetTimer -= uiDiff;
+    }
+};
+
+struct mob_ancient_wispAI : public ScriptedAI
+{
+    mob_ancient_wispAI(Creature* pCreature) : ScriptedAI(pCreature) { Reset(); }
+
+    uint32 m_uiCheckTimer;
+
+    void Reset()
+    {
+        m_uiCheckTimer = 1000;
+    }
+
+    void UpdateAI(const uint32 uiDiff)
+    {
+        if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+            return;
+
+        if (m_uiCheckTimer < uiDiff)
+        {
+            DoCastSpellIfCan(m_creature->getVictim(), SPELL_ANCIENT_SPARK);
+            m_uiCheckTimer = urand(2000, 3000);
+        }
+        else
+            m_uiCheckTimer -= uiDiff;
+    }
+};
+
+CreatureAI* GetAI_boss_archimonde(Creature* pCreature)
+{
+    return new boss_archimondeAI(pCreature);
+}
+
+CreatureAI* GetAI_npc_doomfire_spirit(Creature* pCreature)
+{
+    return new npc_doomfire_spiritAI(pCreature);
+}
+
+CreatureAI* GetAI_mob_ancient_wisp(Creature* pCreature)
+{
+    return new mob_ancient_wispAI(pCreature);
+}
+
+void AddSC_boss_archimonde()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "boss_archimonde";
+    pNewScript->GetAI = &GetAI_boss_archimonde;
+    pNewScript->RegisterSelf();
+
+    pNewScript = new Script;
+    pNewScript->Name = "npc_doomfire_spirit";
+    pNewScript->GetAI = &GetAI_npc_doomfire_spirit;
+    pNewScript->RegisterSelf();
+
+    pNewScript = new Script;
+    pNewScript->Name = "mob_ancient_wisp";
+    pNewScript->GetAI = &GetAI_mob_ancient_wisp;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/kalimdor/caverns_of_time/hyjal_summit/hyjal.cpp b/scripts/kalimdor/caverns_of_time/hyjal_summit/hyjal.cpp
new file mode 100644
index 0000000..07f44db
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/hyjal_summit/hyjal.cpp
@@ -0,0 +1,245 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Hyjal
+SD%Complete: 80
+SDComment: gossip text id's unknown
+SDCategory: Caverns of Time, Mount Hyjal
+EndScriptData */
+
+/* ContentData
+npc_jaina_proudmoore
+npc_thrall
+npc_tyrande_whisperwind
+EndContentData */
+
+#include "precompiled.h"
+#include "hyjalAI.h"
+
+enum
+{
+    GOSSIP_ITEM_JAINA_BEGIN         = -3534000,
+    GOSSIP_ITEM_JAINA_ANATHERON     = -3534001,
+    GOSSIP_ITEM_JAINA_SUCCCESS      = -3534002,
+
+    GOSSIP_ITEM_THRALL_BEGIN        = -3534003,
+    GOSSIP_ITEM_THRALL_AZGALOR      = -3534004,
+    GOSSIP_ITEM_THRALL_SUCCESS      = -3534005,
+
+    GOSSIP_ITEM_TYRANDE_AID         = -3534006,
+
+    // Note: additional menu items include 9230 and 9398.
+    GOSSIP_MENU_ID_DEFAULT          = 907,                  // this is wrong, but currently we don't know which are the right ids
+};
+
+CreatureAI* GetAI_npc_jaina_proudmoore(Creature* pCreature)
+{
+    hyjalAI* pTempAI = new hyjalAI(pCreature);
+
+    pTempAI->m_aSpells[0].m_uiSpellId = SPELL_BLIZZARD;
+    pTempAI->m_aSpells[0].m_uiCooldown = urand(15000, 35000);
+    pTempAI->m_aSpells[0].m_pType = TARGETTYPE_RANDOM;
+
+    pTempAI->m_aSpells[1].m_uiSpellId = SPELL_PYROBLAST;
+    pTempAI->m_aSpells[1].m_uiCooldown = urand(2000, 9000);
+    pTempAI->m_aSpells[1].m_pType = TARGETTYPE_RANDOM;
+
+    pTempAI->m_aSpells[2].m_uiSpellId = SPELL_SUMMON_ELEMENTALS;
+    pTempAI->m_aSpells[2].m_uiCooldown = urand(15000, 45000);
+    pTempAI->m_aSpells[2].m_pType = TARGETTYPE_SELF;
+
+    return pTempAI;
+}
+
+bool GossipHello_npc_jaina_proudmoore(Player* pPlayer, Creature* pCreature)
+{
+    if (ScriptedInstance* pInstance = (ScriptedInstance*)pCreature->GetInstanceData())
+    {
+        if (hyjalAI* pJainaAI = dynamic_cast<hyjalAI*>(pCreature->AI()))
+        {
+            if (!pJainaAI->m_bIsEventInProgress)
+            {
+                // Should not happen that jaina is here now, but for safe we check
+                if (pInstance->GetData(TYPE_KAZROGAL) != DONE)
+                {
+                    if (pInstance->GetData(TYPE_WINTERCHILL) == NOT_STARTED)
+                        pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_JAINA_BEGIN, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 1);
+                    else if (pInstance->GetData(TYPE_WINTERCHILL) == DONE && pInstance->GetData(TYPE_ANETHERON) == NOT_STARTED)
+                        pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_JAINA_ANATHERON, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 2);
+                    else if (pInstance->GetData(TYPE_ANETHERON) == DONE)
+                        pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_JAINA_SUCCCESS, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 3);
+
+                    if (pPlayer->isGameMaster())
+                        pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_DOT, "[GM] Toggle Debug Timers", GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF);
+                }
+            }
+        }
+    }
+
+    pPlayer->SEND_GOSSIP_MENU(GOSSIP_MENU_ID_DEFAULT, pCreature->GetObjectGuid());
+    return true;
+}
+
+bool GossipSelect_npc_jaina_proudmoore(Player* pPlayer, Creature* pCreature, uint32 uiSender, uint32 uiAction)
+{
+    if (hyjalAI* pJainaAI = dynamic_cast<hyjalAI*>(pCreature->AI()))
+    {
+        switch(uiAction)
+        {
+            case GOSSIP_ACTION_INFO_DEF + 1:
+                pJainaAI->StartEvent();
+                break;
+            case GOSSIP_ACTION_INFO_DEF + 2:
+                pJainaAI->m_bIsFirstBossDead = true;
+                pJainaAI->m_uiWaveCount = 9;
+                pJainaAI->StartEvent();
+                break;
+            case GOSSIP_ACTION_INFO_DEF + 3:
+                pJainaAI->Retreat();
+                break;
+            case GOSSIP_ACTION_INFO_DEF:
+                pJainaAI->m_bDebugMode = !pJainaAI->m_bDebugMode;
+                debug_log("SD2: HyjalAI - Debug mode has been toggled");
+                break;
+        }
+    }
+
+    pPlayer->CLOSE_GOSSIP_MENU();
+    return true;
+}
+
+CreatureAI* GetAI_npc_thrall(Creature* pCreature)
+{
+    hyjalAI* pTempAI = new hyjalAI(pCreature);
+
+    pTempAI->m_aSpells[0].m_uiSpellId = SPELL_CHAIN_LIGHTNING;
+    pTempAI->m_aSpells[0].m_uiCooldown = urand(2000, 7000);
+    pTempAI->m_aSpells[0].m_pType = TARGETTYPE_VICTIM;
+
+    pTempAI->m_aSpells[1].m_uiSpellId = SPELL_FERAL_SPIRIT;
+    pTempAI->m_aSpells[1].m_uiCooldown = urand(6000, 41000);
+    pTempAI->m_aSpells[1].m_pType = TARGETTYPE_RANDOM;
+
+    return pTempAI;
+}
+
+bool GossipHello_npc_thrall(Player* pPlayer, Creature* pCreature)
+{
+    if (ScriptedInstance* pInstance = (ScriptedInstance*)pCreature->GetInstanceData())
+    {
+        if (hyjalAI* pThrallAI = dynamic_cast<hyjalAI*>(pCreature->AI()))
+        {
+            if (!pThrallAI->m_bIsEventInProgress)
+            {
+                // Only let them start the Horde phases if Anetheron is dead.
+                if (pInstance->GetData(TYPE_ANETHERON) == DONE)
+                {
+                    if (pInstance->GetData(TYPE_KAZROGAL) == NOT_STARTED)
+                        pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_THRALL_BEGIN, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 1);
+                    else if (pInstance->GetData(TYPE_KAZROGAL) == DONE && pInstance->GetData(TYPE_AZGALOR) == NOT_STARTED)
+                        pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_THRALL_AZGALOR, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 2);
+                    else if (pInstance->GetData(TYPE_AZGALOR) == DONE)
+                        pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_THRALL_SUCCESS, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 3);
+
+                    if (pPlayer->isGameMaster())
+                        pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_DOT, "[GM] Toggle Debug Timers", GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF);
+                }
+            }
+        }
+    }
+
+    pPlayer->SEND_GOSSIP_MENU(GOSSIP_MENU_ID_DEFAULT, pCreature->GetObjectGuid());
+    return true;
+}
+
+bool GossipSelect_npc_thrall(Player* pPlayer, Creature* pCreature, uint32 uiSender, uint32 uiAction)
+{
+    if (hyjalAI* pThrallAI = dynamic_cast<hyjalAI*>(pCreature->AI()))
+    {
+        switch(uiAction)
+        {
+            case GOSSIP_ACTION_INFO_DEF + 1:
+                pThrallAI->StartEvent();
+                break;
+            case GOSSIP_ACTION_INFO_DEF + 2:
+                pThrallAI->m_bIsFirstBossDead = true;
+                pThrallAI->m_uiWaveCount = 9;
+                pThrallAI->StartEvent();
+                break;
+            case GOSSIP_ACTION_INFO_DEF + 3:
+                pThrallAI->Retreat();
+                break;
+            case GOSSIP_ACTION_INFO_DEF:
+                pThrallAI->m_bDebugMode = !pThrallAI->m_bDebugMode;
+                debug_log("SD2: HyjalAI - Debug mode has been toggled");
+                break;
+        }
+    }
+
+    pPlayer->CLOSE_GOSSIP_MENU();
+    return true;
+}
+
+bool GossipHello_npc_tyrande_whisperwind(Player* pPlayer, Creature* pCreature)
+{
+    if (ScriptedInstance* pInstance = (ScriptedInstance*)pCreature->GetInstanceData())
+    {
+        // Only let them get item if Azgalor is dead.
+        if (pInstance->GetData(TYPE_AZGALOR) == DONE && !pPlayer->HasItemCount(ITEM_TEAR_OF_GODDESS, 1))
+            pPlayer->ADD_GOSSIP_ITEM_ID(GOSSIP_ICON_CHAT, GOSSIP_ITEM_TYRANDE_AID, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF);
+    }
+
+    pPlayer->SEND_GOSSIP_MENU(GOSSIP_MENU_ID_DEFAULT, pCreature->GetObjectGuid());
+    return true;
+}
+
+bool GossipSelect_npc_tyrande_whisperwind(Player* pPlayer, Creature* pCreature, uint32 uiSender, uint32 uiAction)
+{
+    if (uiAction == GOSSIP_ACTION_INFO_DEF)
+    {
+        if (Item* pItem = pPlayer->StoreNewItemInInventorySlot(ITEM_TEAR_OF_GODDESS, 1))
+            pPlayer->SendNewItem(pItem, 1, true, false);
+    }
+
+    pPlayer->CLOSE_GOSSIP_MENU();
+    return true;
+}
+
+void AddSC_hyjal()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "npc_jaina_proudmoore";
+    pNewScript->GetAI = &GetAI_npc_jaina_proudmoore;
+    pNewScript->pGossipHello = &GossipHello_npc_jaina_proudmoore;
+    pNewScript->pGossipSelect = &GossipSelect_npc_jaina_proudmoore;
+    pNewScript->RegisterSelf();
+
+    pNewScript = new Script;
+    pNewScript->Name = "npc_thrall";
+    pNewScript->GetAI = &GetAI_npc_thrall;
+    pNewScript->pGossipHello = &GossipHello_npc_thrall;
+    pNewScript->pGossipSelect = &GossipSelect_npc_thrall;
+    pNewScript->RegisterSelf();
+
+    pNewScript = new Script;
+    pNewScript->Name = "npc_tyrande_whisperwind";
+    pNewScript->pGossipHello = &GossipHello_npc_tyrande_whisperwind;
+    pNewScript->pGossipSelect = &GossipSelect_npc_tyrande_whisperwind;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/kalimdor/caverns_of_time/hyjal_summit/hyjal.h b/scripts/kalimdor/caverns_of_time/hyjal_summit/hyjal.h
new file mode 100644
index 0000000..4d34f02
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/hyjal_summit/hyjal.h
@@ -0,0 +1,89 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software licensed under GPL version 2
+ * Please see the included DOCS/LICENSE.TXT for more information */
+
+#ifndef DEF_HYJAL_H
+#define DEF_HYJAL_H
+
+enum
+{
+    MAX_ENCOUNTER               = 5,
+
+    TYPE_WINTERCHILL            = 0,
+    TYPE_ANETHERON              = 1,
+    TYPE_KAZROGAL               = 2,
+    TYPE_AZGALOR                = 3,
+    TYPE_ARCHIMONDE             = 4,
+
+    TYPE_TRASH_COUNT            = 5,
+    TYPE_RETREAT                = 6,
+
+    WORLD_STATE_WAVES           = 2842,
+    WORLD_STATE_ENEMY           = 2453,
+    WORLD_STATE_ENEMYCOUNT      = 2454,
+
+    NPC_JAINA                   = 17772,
+    NPC_THRALL                  = 17852,
+    NPC_TYRANDE                 = 17948,
+
+    // Bosses summoned after every 8 waves
+    NPC_WINTERCHILL             = 17767,
+    NPC_ANETHERON               = 17808,
+    NPC_KAZROGAL                = 17888,
+    NPC_AZGALOR                 = 17842,
+    NPC_ARCHIMONDE              = 17968,
+
+    // Trash Mobs summoned in waves
+    NPC_NECRO                   = 17899,
+    NPC_ABOMI                   = 17898,
+    NPC_GHOUL                   = 17895,
+    NPC_BANSH                   = 17905,
+    NPC_CRYPT                   = 17897,
+    NPC_GARGO                   = 17906,
+    NPC_FROST                   = 17907,
+    NPC_GIANT                   = 17908,
+    NPC_STALK                   = 17916,
+
+    NPC_WATER_ELEMENTAL         = 18001,
+    NPC_DIRE_WOLF               = 17854,
+
+    GO_ANCIENT_GEM              = 185557,
+};
+
+static const float aArchimondeSpawnLoc[4] = {5581.49f, -3445.63f, 1575.1f, 3.905f};
+
+class MANGOS_DLL_DECL instance_mount_hyjal : public ScriptedInstance
+{
+    public:
+        instance_mount_hyjal(Map* pMap);
+
+        void Initialize();
+        bool IsEncounterInProgress() const;
+
+        void OnPlayerEnter(Player* pPlayer);
+
+        void OnCreatureCreate(Creature* pCreature);
+        void OnObjectCreate(GameObject* pGo);
+
+        void OnCreatureEnterCombat(Creature* pCreature);
+        void OnCreatureEvade(Creature* pCreature);
+        void OnCreatureDeath(Creature* pCreature);
+
+        void SetData(uint32 uiType, uint32 uiData);
+        uint32 GetData(uint32 uiType);
+
+        const char* Save() { return m_strSaveData.c_str(); }
+        void Load(const char* chrIn);
+
+    private:
+        void DoSpawnArchimonde();
+
+        uint32 m_auiEncounter[MAX_ENCOUNTER];
+        std::string m_strSaveData;
+
+        GuidList lAncientGemGUIDList;
+
+        uint32 m_uiTrashCount;
+};
+
+#endif
diff --git a/scripts/kalimdor/caverns_of_time/hyjal_summit/hyjalAI.cpp b/scripts/kalimdor/caverns_of_time/hyjal_summit/hyjalAI.cpp
new file mode 100644
index 0000000..b705999
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/hyjal_summit/hyjalAI.cpp
@@ -0,0 +1,553 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: HyjalAI
+SD%Complete: 90
+SDComment:
+SDCategory: Caverns of Time, Mount Hyjal
+EndScriptData */
+
+#include "precompiled.h"
+#include "hyjalAI.h"
+
+struct HyjalLocation
+{
+    eBaseArea m_pBaseArea;
+    float m_fX, m_fY, m_fZ;
+};
+
+// Locations for summoning waves
+// Must be even number
+static const HyjalLocation aHyjalSpawnLoc[]=
+{
+    {BASE_ALLY,  4979.010f, -1709.134f, 1339.674f},
+    {BASE_ALLY,  4969.123f, -1705.904f, 1341.363f},
+    {BASE_ALLY,  4970.260f, -1698.546f, 1341.200f},
+    {BASE_ALLY,  4975.262f, -1698.239f, 1341.427f},
+    {BASE_HORDE, 5557.582f, -2587.159f, 1481.644f},
+    {BASE_HORDE, 5545.901f, -2582.246f, 1479.256f},
+    {BASE_HORDE, 5565.642f, -2565.666f, 1481.635f},
+    {BASE_HORDE, 5547.218f, -2574.589f, 1479.194f}
+};
+
+// used to inform the wave where to move
+static const HyjalLocation aHyjalWaveMoveTo[]=
+{
+    {BASE_ALLY,  5018.654f, -1752.074f, 1322.203f},
+    {BASE_HORDE, 5504.569f, -2688.489f, 1479.991f}
+};
+
+struct HyjalYells
+{
+    uint32   uiCreatureEntry;
+    YellType m_pYellType;                                   // Used to determine the type of yell (attack, rally, etc)
+    int32    m_iTextId;                                     // The text id to be yelled
+};
+
+static const HyjalYells aHyjalYell[]=
+{
+    {NPC_JAINA,  ATTACKED, -1534000},
+    {NPC_JAINA,  ATTACKED, -1534001},
+    {NPC_JAINA,  INCOMING, -1534002},
+    {NPC_JAINA,  BEGIN,    -1534003},
+    {NPC_JAINA,  RALLY,    -1534004},
+    {NPC_JAINA,  RALLY,    -1534005},
+    {NPC_JAINA,  FAILURE,  -1534006},
+    {NPC_JAINA,  SUCCESS,  -1534007},
+    {NPC_JAINA,  DEATH,    -1534008},
+
+    {NPC_THRALL, ATTACKED, -1534009},
+    {NPC_THRALL, ATTACKED, -1534010},
+    {NPC_THRALL, INCOMING, -1534011},
+    {NPC_THRALL, BEGIN,    -1534012},
+    {NPC_THRALL, RALLY,    -1534013},
+    {NPC_THRALL, RALLY,    -1534014},
+    {NPC_THRALL, FAILURE,  -1534015},
+    {NPC_THRALL, SUCCESS,  -1534016},
+    {NPC_THRALL, DEATH,    -1534017}
+};
+
+struct HyjalWave
+{
+    uint32 m_auiMobEntry[MAX_WAVE_MOB];                     // Stores Creature Entries to be summoned in Waves
+    uint32 m_uiWaveTimer;                                   // The timer before the next wave is summoned
+    bool   m_bIsBoss;                                       // Simply used to inform the wave summoner that the next wave contains a boss to halt all waves after that
+};
+
+// Waves that will be summoned in the Alliance Base
+static const HyjalWave aHyjalWavesAlliance[]=
+{
+    // Rage Winterchill Wave 1-8
+    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, 0, 0, 0, 0, 0, 0, 0, 0}, 125000, false},
+    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_CRYPT, NPC_CRYPT, 0, 0, 0, 0, 0, 0}, 125000, false},
+    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, 0, 0, 0, 0, 0, 0}, 125000, false},
+    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0, 0, 0}, 125000, false},
+    {{NPC_GHOUL, NPC_GHOUL, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0, 0, 0}, 125000, false},
+    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, 0, 0, 0, 0, 0, 0}, 125000, false},
+    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, 0, 0, 0, 0, 0, 0}, 125000, false},
+    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_ABOMI, NPC_ABOMI, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0}, 140000, false},
+    // All 8 Waves are summoned, summon Rage Winterchill, next few waves are for Anetheron
+    {{NPC_WINTERCHILL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, true},
+    // Anetheron Wave 1-8
+    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, 0, 0, 0, 0, 0, 0, 0, 0}, 125000, false},
+    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, 0, 0, 0, 0, 0, 0}, 125000, false},
+    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0, 0, 0}, 125000, false},
+    {{NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_BANSH, NPC_BANSH, 0, 0, 0, 0, 0, 0}, 125000, false},
+    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_BANSH, NPC_BANSH, NPC_BANSH, NPC_BANSH, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0, 0, 0}, 125000, false},
+    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_ABOMI, NPC_ABOMI, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0, 0, 0}, 125000, false},
+    {{NPC_GHOUL, NPC_GHOUL, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_BANSH, NPC_BANSH, 0, 0, 0, 0, 0, 0}, 125000, false},
+    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_BANSH, NPC_BANSH, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0}, 140000, false},
+    // All 8 Waves are summoned, summon Anatheron
+    {{NPC_ANETHERON, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, true}
+};
+
+// Waves that are summoned in the Horde base
+static const HyjalWave aHyjalWavesHorde[]=
+{
+    // Kaz'Rogal Wave 1-8
+    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_BANSH, NPC_BANSH, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0, 0, 0}, 135000, false},
+    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, 0, 0, 0, 0}, 165000, false},
+    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0}, 160000, false},
+    {{NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0}, 165000, false},
+    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0}, 135000, false},
+    {{NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_FROST, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 135000, false},
+    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_FROST, 0, 0, 0, 0, 0, 0, 0}, 195000, false},
+    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_CRYPT, NPC_CRYPT, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_NECRO, NPC_NECRO, NPC_BANSH, NPC_BANSH, 0, 0}, 225000, false},
+    // All 8 Waves are summoned, summon Kaz'Rogal, next few waves are for Azgalor
+    {{NPC_KAZROGAL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, true},
+    // Azgalor Wave 1-8
+    {{NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0, 0, 0}, 135000, false},
+    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_FROST, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, NPC_GARGO, 0, 0, 0, 0}, 165000, false},
+    {{NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GHOUL, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, 0, 0, 0, 0, 0, 0}, 160000, false},
+    {{NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_STALK, NPC_STALK, NPC_STALK, NPC_STALK, NPC_STALK, NPC_STALK, NPC_STALK, NPC_STALK, 0, 0, 0, 0}, 165000, false},
+    {{NPC_STALK, NPC_STALK, NPC_STALK, NPC_STALK, NPC_STALK, NPC_STALK, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0}, 135000, false},
+    {{NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_NECRO, NPC_BANSH, NPC_BANSH, NPC_BANSH, NPC_BANSH, NPC_BANSH, NPC_BANSH, 0, 0, 0, 0, 0, 0}, 135000, false},
+    {{NPC_GHOUL, NPC_GHOUL, NPC_CRYPT, NPC_CRYPT, NPC_STALK, NPC_STALK, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, NPC_GIANT, 0, 0, 0, 0}, 195000, false},
+    {{NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_CRYPT, NPC_STALK, NPC_STALK, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_ABOMI, NPC_BANSH, NPC_BANSH, NPC_NECRO, NPC_NECRO, 0, 0, 0, 0}, 225000, false},
+    // All 8 Waves are summoned, summon Azgalor
+    {{NPC_AZGALOR, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, true}
+};
+
+void hyjalAI::Reset()
+{
+    // BossGuids
+    m_aBossGuid[0].Clear();
+    m_aBossGuid[1].Clear();
+
+    // Timers
+    m_uiNextWaveTimer = 10000;
+    m_uiWaveMoveTimer = 15000;
+    m_uiCheckTimer = 0;
+    m_uiRetreatTimer = 25000;
+
+    // Misc
+    m_uiWaveCount = 0;
+    m_uiEnemyCount = 0;
+
+    // Set base area based on creature entry
+    switch(m_creature->GetEntry())
+    {
+        case NPC_JAINA:
+            m_uiBase = BASE_ALLY;
+            DoCastSpellIfCan(m_creature, SPELL_BRILLIANCE_AURA, CAST_TRIGGERED);
+            break;
+        case NPC_THRALL:
+            m_uiBase = BASE_HORDE;
+            break;
+    }
+
+    // Bools
+    m_bIsEventInProgress = false;
+    m_bIsSummoningWaves = false;
+
+    m_bIsRetreating = false;
+    m_bDebugMode = false;
+
+    // Flags
+    m_creature->SetFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_GOSSIP);
+
+    // Reset World States
+    m_pInstance->DoUpdateWorldState(WORLD_STATE_WAVES, 0);
+    m_pInstance->DoUpdateWorldState(WORLD_STATE_ENEMY, 0);
+    m_pInstance->DoUpdateWorldState(WORLD_STATE_ENEMYCOUNT, 0);
+
+    if (!m_pInstance)
+        return;
+
+    m_bIsFirstBossDead = m_uiBase ? m_pInstance->GetData(TYPE_KAZROGAL) == DONE : m_pInstance->GetData(TYPE_WINTERCHILL) == DONE;
+    m_bIsSecondBossDead = m_uiBase ? m_pInstance->GetData(TYPE_AZGALOR) == DONE : m_pInstance->GetData(TYPE_ANETHERON) == DONE;
+
+    // Reset Instance Data for trash count
+    m_pInstance->SetData(TYPE_TRASH_COUNT, 0);
+}
+
+void hyjalAI::EnterEvadeMode()
+{
+    m_creature->RemoveAllAuras();
+    m_creature->DeleteThreatList();
+    m_creature->CombatStop(true);
+
+    if (m_creature->isAlive())
+        m_creature->GetMotionMaster()->MoveTargetedHome();
+
+    m_creature->SetLootRecipient(NULL);
+}
+
+void hyjalAI::JustReachedHome()
+{
+    if (m_uiBase == BASE_ALLY)
+        DoCastSpellIfCan(m_creature, SPELL_BRILLIANCE_AURA, CAST_TRIGGERED);
+
+    m_bIsFirstBossDead = m_uiBase ? m_pInstance->GetData(TYPE_KAZROGAL) == DONE : m_pInstance->GetData(TYPE_WINTERCHILL) == DONE;
+    m_bIsSecondBossDead = m_uiBase ? m_pInstance->GetData(TYPE_AZGALOR) == DONE : m_pInstance->GetData(TYPE_ANETHERON) == DONE;
+}
+
+void hyjalAI::Aggro(Unit *who)
+{
+    for(uint8 i = 0; i < MAX_SPELL; ++i)
+        if (m_aSpells[i].m_uiCooldown)
+            m_uiSpellTimer[i] = m_aSpells[i].m_uiCooldown;
+
+    DoTalk(ATTACKED);
+}
+
+void hyjalAI::SpawnCreatureForWave(uint32 uiMobEntry)
+{
+    HyjalLocation const* pSpawn = NULL;
+
+    uint32 uiMaxCount = countof(aHyjalSpawnLoc);
+    uint32 uiRandId = urand(1, uiMaxCount/2);               //unsafe, if array becomes uneven.
+
+    uint32 uiJ = 0;
+
+    for (uint32 i = 0; i < uiMaxCount; ++i)
+    {
+        if (aHyjalSpawnLoc[i].m_pBaseArea != (eBaseArea)m_uiBase)
+            continue;
+
+        ++uiJ;
+
+        if (uiJ == uiRandId)
+        {
+            pSpawn = &aHyjalSpawnLoc[i];
+            break;
+        }
+    }
+
+    if (pSpawn)
+        m_creature->SummonCreature(uiMobEntry, pSpawn->m_fX, pSpawn->m_fY, pSpawn->m_fZ, 0.0f, TEMPSUMMON_TIMED_OR_DEAD_DESPAWN, 120000);
+}
+
+void hyjalAI::JustSummoned(Creature* pSummoned)
+{
+    // not interesting for us
+    if (pSummoned->GetEntry() == NPC_WATER_ELEMENTAL || pSummoned->GetEntry() == NPC_DIRE_WOLF)
+        return;
+
+    // Increment Enemy Count to be used in World States and instance script
+    ++m_uiEnemyCount;
+
+    HyjalLocation const* pMove = NULL;
+
+    for (uint32 i = 0; i < countof(aHyjalWaveMoveTo); ++i)
+    {
+        if (aHyjalWaveMoveTo[i].m_pBaseArea != (eBaseArea)m_uiBase)
+            continue;
+
+        pMove = &aHyjalWaveMoveTo[i];
+        break;
+    }
+
+    if (pMove)
+    {
+        float fX, fY, fZ;
+        pSummoned->GetRandomPoint(pMove->m_fX, pMove->m_fY, pMove->m_fZ, 10.0f, fX, fY, fZ);
+
+        pSummoned->SetWalk(false);
+        pSummoned->GetMotionMaster()->MovePoint(0, fX, fY, fZ);
+    }
+
+    // Check if creature is a boss.
+    if (pSummoned->IsWorldBoss())
+    {
+        if (!m_bIsFirstBossDead)
+            m_aBossGuid[0] = pSummoned->GetObjectGuid();
+        else
+            m_aBossGuid[1] = pSummoned->GetObjectGuid();
+
+        m_uiCheckTimer = 5000;
+    }
+    else
+        lWaveMobGUIDList.push_back(pSummoned->GetObjectGuid());
+}
+
+void hyjalAI::SummonNextWave()
+{
+    // 1 in 4 chance we give a rally yell. Not sure if the chance is offilike.
+    if (!urand(0, 3))
+        DoTalk(RALLY);
+
+    if (!m_pInstance)
+        return;
+
+    HyjalWave const* pWaveData = m_uiBase ? &aHyjalWavesHorde[m_uiWaveCount] : &aHyjalWavesAlliance[m_uiWaveCount];
+
+    if (!pWaveData)
+    {
+        error_log("SD2: hyjalAI not able to obtain wavedata for SummonNextWave.");
+        return;
+    }
+
+    m_uiEnemyCount = m_pInstance->GetData(TYPE_TRASH_COUNT);
+
+    for(uint8 i = 0; i < MAX_WAVE_MOB; ++i)
+    {
+        if (pWaveData->m_auiMobEntry[i])
+            SpawnCreatureForWave(pWaveData->m_auiMobEntry[i]);
+    }
+
+    if (!pWaveData->m_bIsBoss)
+    {
+        uint32 stateValue = m_uiWaveCount+1;
+
+        if (m_bIsFirstBossDead)
+            stateValue -= MAX_WAVES;                        // Subtract 9 from it to give the proper wave number if we are greater than 8
+
+        // Set world state to our current wave number
+        m_pInstance->DoUpdateWorldState(WORLD_STATE_WAVES, stateValue);
+        // Enable world state
+        m_pInstance->DoUpdateWorldState(WORLD_STATE_ENEMY, 1);
+
+        m_pInstance->SetData(TYPE_TRASH_COUNT, m_uiEnemyCount);   // Send data for instance script to update count
+
+        if (!m_bDebugMode)
+            m_uiNextWaveTimer = pWaveData->m_uiWaveTimer;
+        else
+        {
+            m_uiNextWaveTimer = 15000;
+            debug_log("SD2: HyjalAI: debug mode is enabled. Next Wave in 15 seconds");
+        }
+    }
+    else
+    {
+        // Set world state for waves to 0 to disable it.
+        m_pInstance->DoUpdateWorldState(WORLD_STATE_WAVES, 0);
+        m_pInstance->DoUpdateWorldState(WORLD_STATE_ENEMY, 1);
+
+        // Set World State for enemies invading to 1.
+        m_pInstance->DoUpdateWorldState(WORLD_STATE_ENEMYCOUNT, 1);
+
+        m_bIsSummoningWaves = false;
+    }
+
+    m_uiWaveMoveTimer = 15000;
+    m_uiCheckTimer = 5000;
+    ++m_uiWaveCount;
+}
+
+void hyjalAI::StartEvent()
+{
+    if (!m_pInstance)
+        return;
+
+    DoTalk(BEGIN);
+
+    m_bIsEventInProgress = true;
+    m_bIsSummoningWaves = true;
+
+    m_uiNextWaveTimer = 10000;
+    m_uiCheckTimer = 5000;
+
+    m_creature->RemoveFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_GOSSIP);
+
+    m_pInstance->DoUpdateWorldState(WORLD_STATE_WAVES, 0);
+    m_pInstance->DoUpdateWorldState(WORLD_STATE_ENEMY, 0);
+    m_pInstance->DoUpdateWorldState(WORLD_STATE_ENEMYCOUNT, 0);
+
+    m_creature->SetActiveObjectState(true);
+}
+
+void hyjalAI::DoTalk(YellType pYellType)
+{
+    HyjalYells const* pYell = NULL;
+
+    bool bGetNext = false;
+
+    for (uint32 i = 0; i < countof(aHyjalYell); ++i)
+    {
+        if (aHyjalYell[i].uiCreatureEntry == m_creature->GetEntry() && aHyjalYell[i].m_pYellType == pYellType)
+        {
+            //this would not be safe unless we knew these had two entries in m_aYell
+            if (pYellType == ATTACKED || pYellType== RALLY)
+            {
+                if (!bGetNext && urand(0, 1))
+                {
+                    bGetNext = true;
+                    continue;
+                }
+            }
+
+            pYell = &aHyjalYell[i];
+            break;
+        }
+    }
+
+    if (pYell)
+        DoScriptText(pYell->m_iTextId, m_creature);
+}
+
+void hyjalAI::SpellHitTarget(Unit* pTarget, const SpellEntry* pSpell)
+{
+    //TODO: this spell should cause misc mobs to despawn
+    //if (pSpell->Id == SPELL_MASS_TELEPORT && pTarget->GetTypeId() != TYPEID_PLAYER)
+    //{
+        //despawn;
+    //}
+}
+
+void hyjalAI::Retreat()
+{
+    //this will trigger ancient gem respawn
+    if (m_pInstance)
+        m_pInstance->SetData(TYPE_RETREAT, SPECIAL);
+
+    DoCastSpellIfCan(m_creature, SPELL_MASS_TELEPORT);
+
+    m_bIsRetreating = true;
+}
+
+void hyjalAI::JustDied(Unit* pKiller)
+{
+    DoTalk(DEATH);
+    m_creature->SetActiveObjectState(false);
+
+    //TODO: in case they die during boss encounter, then what? despawn boss?
+}
+
+void hyjalAI::UpdateAI(const uint32 uiDiff)
+{
+    if (!m_bIsEventInProgress)
+        return;
+
+    if (m_bIsSummoningWaves && m_pInstance)
+    {
+        if (m_uiWaveMoveTimer < uiDiff)
+        {
+            // Skip the master timer, and start next wave in 5. Clear the list, it should not be any here now.
+            if (!m_pInstance->GetData(TYPE_TRASH_COUNT))
+            {
+                lWaveMobGUIDList.clear();
+                m_uiNextWaveTimer = std::min(m_uiNextWaveTimer, (uint32)5000);
+            }
+
+            for (GuidList::const_iterator itr = lWaveMobGUIDList.begin(); itr != lWaveMobGUIDList.end(); ++itr)
+            {
+                if (Creature* pTemp = m_pInstance->instance->GetCreature(*itr))
+                {
+                    if (!pTemp->isAlive() || pTemp->getVictim())
+                        continue;
+
+                    pTemp->SetWalk(false);
+                    pTemp->GetMotionMaster()->MovePoint(1, m_creature->GetPositionX(), m_creature->GetPositionY(), m_creature->GetPositionZ());
+                }
+            }
+            m_uiWaveMoveTimer = 10000;
+        }
+        else
+            m_uiWaveMoveTimer -= uiDiff;
+
+        if (m_uiNextWaveTimer < uiDiff)
+            SummonNextWave();
+        else
+            m_uiNextWaveTimer -= uiDiff;
+    }
+
+    if (m_uiCheckTimer < uiDiff)
+    {
+        for(uint8 i = 0; i < 2; ++i)
+        {
+            if (m_aBossGuid[i])
+            {
+                Creature* pBoss = m_creature->GetMap()->GetCreature(m_aBossGuid[i]);
+
+                if (pBoss && !pBoss->isAlive())
+                {
+                    if (m_aBossGuid[i] == m_aBossGuid[0])
+                    {
+                        DoTalk(INCOMING);
+                        m_bIsFirstBossDead = true;
+                    }
+                    else if (m_aBossGuid[i] == m_aBossGuid[1])
+                    {
+                        DoTalk(SUCCESS);
+                        m_bIsSecondBossDead = true;
+                    }
+
+                    m_bIsEventInProgress = false;
+                    m_uiCheckTimer = 0;
+
+                    m_creature->SetFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_GOSSIP);
+
+                    m_aBossGuid[i].Clear();
+
+                    // Reset world state for enemies to disable it
+                    m_pInstance->DoUpdateWorldState(WORLD_STATE_ENEMY, 0);
+
+                    m_creature->SetActiveObjectState(false);
+                }
+            }
+        }
+
+        m_uiCheckTimer = 5000;
+    }
+    else
+        m_uiCheckTimer -= uiDiff;
+
+    if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
+        return;
+
+    for(uint8 i = 0; i < MAX_SPELL; ++i)
+    {
+        if (m_aSpells[i].m_uiSpellId)
+        {
+            if (m_uiSpellTimer[i] < uiDiff)
+            {
+                if (m_creature->IsNonMeleeSpellCasted(false))
+                    m_creature->InterruptNonMeleeSpells(false);
+
+                Unit* pTarget = NULL;
+
+                switch(m_aSpells[i].m_pType)
+                {
+                    case TARGETTYPE_SELF:   pTarget = m_creature; break;
+                    case TARGETTYPE_RANDOM: pTarget = m_creature->SelectAttackingTarget(ATTACKING_TARGET_RANDOM, 0); break;
+                    case TARGETTYPE_VICTIM: pTarget = m_creature->getVictim(); break;
+                }
+
+                if (pTarget)
+                {
+                    DoCastSpellIfCan(pTarget, m_aSpells[i].m_uiSpellId);
+                    m_uiSpellTimer[i] = m_aSpells[i].m_uiCooldown;
+                }
+            }
+            else
+                m_uiSpellTimer[i] -= uiDiff;
+        }
+    }
+
+    DoMeleeAttackIfReady();
+}
diff --git a/scripts/kalimdor/caverns_of_time/hyjal_summit/hyjalAI.h b/scripts/kalimdor/caverns_of_time/hyjal_summit/hyjalAI.h
new file mode 100644
index 0000000..a6a5154
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/hyjal_summit/hyjalAI.h
@@ -0,0 +1,138 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software licensed under GPL version 2
+ * Please see the included DOCS/LICENSE.TXT for more information */
+
+#ifndef SC_HYJALAI_H
+#define SC_HYJALAI_H
+
+#include "hyjal.h"
+
+enum eBaseArea
+{
+    BASE_ALLY       = 0,
+    BASE_HORDE      = 1
+};
+
+enum eMisc
+{
+    MAX_SPELL               = 3,
+    MAX_WAVES               = 9,
+    MAX_WAVE_MOB            = 18,
+
+    ITEM_TEAR_OF_GODDESS    = 24494
+};
+
+enum eSpell
+{
+    SPELL_MASS_TELEPORT     = 16807,
+
+    // Spells for Jaina
+    SPELL_BRILLIANCE_AURA   = 31260,
+    SPELL_BLIZZARD          = 31266,
+    SPELL_PYROBLAST         = 31263,
+    SPELL_SUMMON_ELEMENTALS = 31264,
+
+    // Thrall spells
+    SPELL_CHAIN_LIGHTNING   = 31330,
+    SPELL_FERAL_SPIRIT      = 31331
+};
+
+enum TargetType                                             // Used in the spell cast system for the AI
+{
+    TARGETTYPE_SELF     = 0,
+    TARGETTYPE_RANDOM   = 1,
+    TARGETTYPE_VICTIM   = 2,
+};
+
+enum YellType
+{
+    ATTACKED     = 0,                                       // Used when attacked and set in combat
+    BEGIN        = 1,                                       // Used when the event is begun
+    INCOMING     = 2,                                       // Used to warn the raid that another wave phase is coming
+    RALLY        = 3,                                       // Used to rally the raid and warn that the next wave has been summoned
+    FAILURE      = 4,                                       // Used when raid has failed (unsure where to place)
+    SUCCESS      = 5,                                       // Used when the raid has sucessfully defeated a wave phase
+    DEATH        = 6,                                       // Used on death
+};
+
+struct MANGOS_DLL_DECL hyjalAI : public ScriptedAI
+{
+    hyjalAI(Creature* pCreature) : ScriptedAI(pCreature)
+    {
+        memset(m_aSpells, 0, sizeof(m_aSpells));
+        m_pInstance = (ScriptedInstance*)pCreature->GetInstanceData();
+        Reset();
+    }
+
+    // Generically used to reset our variables. Do *not* call in EnterEvadeMode as this may make problems if the raid is still in combat
+    void Reset();
+
+    // Send creature back to spawn location and evade.
+    void EnterEvadeMode();
+
+    // Called when creature reached home location after evade.
+    void JustReachedHome();
+
+    // Used to reset cooldowns for our spells and to inform the raid that we're under attack
+    void Aggro(Unit* pWho);
+
+    // Called to summon waves, check for boss deaths and to cast our spells.
+    void UpdateAI(const uint32 uiDiff);
+
+    // Called on death, informs the raid that they have failed.
+    void JustDied(Unit* pKiller);
+
+    // "Teleport" all friendly creatures away from the base.
+    void Retreat();
+
+    // Summons a creature for that wave in that base
+    void SpawnCreatureForWave(uint32 uiMobEntry);
+
+    void JustSummoned(Creature*);
+
+    // Summons the next wave, calls SummonCreature
+    void SummonNextWave();
+
+    // Begins the event by gossip click
+    void StartEvent();
+
+    // Searches for the appropriate yell and sound and uses it to inform the raid of various things
+    void DoTalk(YellType pYellType);
+
+    // Used to filter who to despawn after mass teleport
+    void SpellHitTarget(Unit*, const SpellEntry*);
+
+    public:
+
+        ScriptedInstance* m_pInstance;
+
+        ObjectGuid m_aBossGuid[2];
+
+        uint32 m_uiNextWaveTimer;
+        uint32 m_uiWaveCount;
+        uint32 m_uiWaveMoveTimer;
+        uint32 m_uiCheckTimer;
+        uint32 m_uiEnemyCount;
+        uint32 m_uiRetreatTimer;
+        uint32 m_uiBase;
+
+        bool m_bIsEventInProgress;
+        bool m_bIsFirstBossDead;
+        bool m_bIsSecondBossDead;
+        bool m_bIsSummoningWaves;
+        bool m_bIsRetreating;
+        bool m_bDebugMode;
+
+        struct sSpells
+        {
+            uint32 m_uiSpellId;
+            uint32 m_uiCooldown;
+            TargetType m_pType;
+        } m_aSpells[MAX_SPELL];
+
+    private:
+        uint32 m_uiSpellTimer[MAX_SPELL];
+        GuidList lWaveMobGUIDList;
+};
+
+#endif
diff --git a/scripts/kalimdor/caverns_of_time/hyjal_summit/instance_hyjal.cpp b/scripts/kalimdor/caverns_of_time/hyjal_summit/instance_hyjal.cpp
new file mode 100644
index 0000000..4df40ee
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/hyjal_summit/instance_hyjal.cpp
@@ -0,0 +1,245 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Instance_Mount_Hyjal
+SD%Complete: 100
+SDComment: Instance Data Scripts and functions to acquire mobs and set encounter status for use in various Hyjal Scripts
+SDCategory: Caverns of Time, Mount Hyjal
+EndScriptData */
+
+#include "precompiled.h"
+#include "hyjal.h"
+
+/* Battle of Mount Hyjal encounters:
+0 - Rage Winterchill event
+1 - Anetheron event
+2 - Kaz'rogal event
+3 - Azgalor event
+4 - Archimonde event
+*/
+
+instance_mount_hyjal::instance_mount_hyjal(Map* pMap) : ScriptedInstance(pMap),
+    m_uiTrashCount(0)
+{
+    Initialize();
+}
+
+void instance_mount_hyjal::Initialize()
+{
+    memset(&m_auiEncounter, 0, sizeof(m_auiEncounter));
+}
+
+bool instance_mount_hyjal::IsEncounterInProgress() const
+{
+    for(uint8 i = 0; i < MAX_ENCOUNTER; ++i)
+        if (m_auiEncounter[i] == IN_PROGRESS) return true;
+
+    return false;
+}
+
+void instance_mount_hyjal::OnPlayerEnter(Player* pPlayer)
+{
+    if (GetData(TYPE_AZGALOR) == DONE)
+        DoSpawnArchimonde();
+}
+
+void instance_mount_hyjal::OnCreatureCreate(Creature* pCreature)
+{
+    if (pCreature->GetEntry() == NPC_ARCHIMONDE)
+        m_mNpcEntryGuidStore[NPC_ARCHIMONDE] == pCreature->GetObjectGuid();
+}
+
+void instance_mount_hyjal::OnObjectCreate(GameObject* pGo)
+{
+    if (pGo->GetEntry() == GO_ANCIENT_GEM)
+        lAncientGemGUIDList.push_back(pGo->GetObjectGuid());
+}
+
+void instance_mount_hyjal::OnCreatureEnterCombat(Creature* pCreature)
+{
+    switch (pCreature->GetEntry())
+    {
+        case NPC_WINTERCHILL: SetData(TYPE_WINTERCHILL, IN_PROGRESS); break;
+        case NPC_ANETHERON:   SetData(TYPE_ANETHERON, IN_PROGRESS);   break;
+        case NPC_KAZROGAL:    SetData(TYPE_KAZROGAL, IN_PROGRESS);    break;
+        case NPC_AZGALOR:     SetData(TYPE_AZGALOR, IN_PROGRESS);     break;
+        case NPC_ARCHIMONDE:  SetData(TYPE_ARCHIMONDE, IN_PROGRESS);  break;
+    }
+}
+
+void instance_mount_hyjal::OnCreatureEvade(Creature* pCreature)
+{
+    switch (pCreature->GetEntry())
+    {
+        case NPC_WINTERCHILL: SetData(TYPE_WINTERCHILL, FAIL); break;
+        case NPC_ANETHERON:   SetData(TYPE_ANETHERON, FAIL);   break;
+        case NPC_KAZROGAL:    SetData(TYPE_KAZROGAL, FAIL);    break;
+        case NPC_AZGALOR:     SetData(TYPE_AZGALOR, FAIL);     break;
+    }
+}
+
+void instance_mount_hyjal::OnCreatureDeath(Creature* pCreature)
+{
+    switch (pCreature->GetEntry())
+    {
+        case NPC_WINTERCHILL: SetData(TYPE_WINTERCHILL, DONE); break;
+        case NPC_ANETHERON:   SetData(TYPE_ANETHERON, DONE);   break;
+        case NPC_KAZROGAL:    SetData(TYPE_KAZROGAL, DONE);    break;
+        case NPC_AZGALOR:     SetData(TYPE_AZGALOR, DONE);     break;
+        case NPC_ARCHIMONDE:  SetData(TYPE_ARCHIMONDE, DONE);  break;
+
+        // Trash Mobs summoned in waves
+        case NPC_NECRO:
+        case NPC_ABOMI:
+        case NPC_GHOUL:
+        case NPC_BANSH:
+        case NPC_CRYPT:
+        case NPC_GARGO:
+        case NPC_FROST:
+        case NPC_GIANT:
+        case NPC_STALK:
+            // Decrease counter, and update world-state
+            if (m_uiTrashCount)
+            {
+                --m_uiTrashCount;
+                DoUpdateWorldState(WORLD_STATE_ENEMYCOUNT, m_uiTrashCount);
+            }
+            break;
+    }
+}
+
+void instance_mount_hyjal::SetData(uint32 uiType, uint32 uiData)
+{
+    switch(uiType)
+    {
+        case TYPE_WINTERCHILL:
+        case TYPE_ANETHERON:
+        case TYPE_KAZROGAL:
+            m_auiEncounter[uiType] = uiData;
+            break;
+        case TYPE_AZGALOR:
+            m_auiEncounter[uiType] = uiData;
+            if (uiData == DONE)
+                DoSpawnArchimonde();
+            break;
+        case TYPE_ARCHIMONDE:
+            m_auiEncounter[uiType] = uiData;
+            break;
+
+        case TYPE_TRASH_COUNT:
+            m_uiTrashCount = uiData;
+            DoUpdateWorldState(WORLD_STATE_ENEMYCOUNT, m_uiTrashCount);
+            break;
+
+        case TYPE_RETREAT:
+            if (uiData == SPECIAL)
+            {
+                if (!lAncientGemGUIDList.empty())
+                {
+                    for(GuidList::const_iterator itr = lAncientGemGUIDList.begin(); itr != lAncientGemGUIDList.end(); ++itr)
+                    {
+                        //don't know how long it expected
+                        DoRespawnGameObject(*itr, DAY);
+                    }
+                }
+            }
+            break;
+    }
+
+    debug_log("SD2: Instance Hyjal: Instance data updated for event %u (Data=%u)", uiType, uiData);
+
+    if (uiData == DONE)
+    {
+        OUT_SAVE_INST_DATA;
+
+        std::ostringstream saveStream;
+        saveStream << m_auiEncounter[0] << " " << m_auiEncounter[1] << " " << m_auiEncounter[2] << " "
+            << m_auiEncounter[3] << " " << m_auiEncounter[4];
+
+        m_strSaveData = saveStream.str();
+
+        SaveToDB();
+        OUT_SAVE_INST_DATA_COMPLETE;
+    }
+}
+
+void instance_mount_hyjal::DoSpawnArchimonde()
+{
+    // Don't spawn if already killed
+    if (GetData(TYPE_ARCHIMONDE) == DONE)
+        return;
+
+    // Don't spawn him twice
+    if (GetSingleCreatureFromStorage(NPC_ARCHIMONDE, true))
+        return;
+
+    // Summon Archimonde
+    if (Player* pPlayer = GetPlayerInMap())
+        pPlayer->SummonCreature(NPC_ARCHIMONDE, aArchimondeSpawnLoc[0], aArchimondeSpawnLoc[1], aArchimondeSpawnLoc[2], aArchimondeSpawnLoc[3], TEMPSUMMON_DEAD_DESPAWN, 0);
+}
+
+uint32 instance_mount_hyjal::GetData(uint32 uiType)
+{
+    switch(uiType)
+    {
+        case TYPE_WINTERCHILL:
+        case TYPE_ANETHERON:
+        case TYPE_KAZROGAL:
+        case TYPE_AZGALOR:
+        case TYPE_ARCHIMONDE:
+            return m_auiEncounter[uiType];
+        case TYPE_TRASH_COUNT:
+            return m_uiTrashCount;
+        default:
+            return 0;
+    }
+}
+
+void instance_mount_hyjal::Load(const char* chrIn)
+{
+    if (!chrIn)
+    {
+        OUT_LOAD_INST_DATA_FAIL;
+        return;
+    }
+
+    OUT_LOAD_INST_DATA(chrIn);
+
+    std::istringstream loadStream(chrIn);
+    loadStream >> m_auiEncounter[0] >> m_auiEncounter[1] >> m_auiEncounter[2] >> m_auiEncounter[3] >> m_auiEncounter[4];
+
+    for(uint8 i = 0; i < MAX_ENCOUNTER; ++i)
+        if (m_auiEncounter[i] == IN_PROGRESS)                // Do not load an encounter as IN_PROGRESS - reset it instead.
+            m_auiEncounter[i] = NOT_STARTED;
+
+    OUT_LOAD_INST_DATA_COMPLETE;
+}
+
+InstanceData* GetInstanceData_instance_mount_hyjal(Map* pMap)
+{
+    return new instance_mount_hyjal(pMap);
+}
+
+void AddSC_instance_mount_hyjal()
+{
+    Script* pNewScript;
+
+    pNewScript = new Script;
+    pNewScript->Name = "instance_hyjal";
+    pNewScript->GetInstanceData = &GetInstanceData_instance_mount_hyjal;
+    pNewScript->RegisterSelf();
+}
diff --git a/scripts/kalimdor/caverns_of_time/well_of_eternity/boss_mannoroth_and_varothen.cpp b/scripts/kalimdor/caverns_of_time/well_of_eternity/boss_mannoroth_and_varothen.cpp
new file mode 100644
index 0000000..5d4630c
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/well_of_eternity/boss_mannoroth_and_varothen.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_mannoroth_and_varothen
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Well of Eternity
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_mannoroth_and_varothen()
+{
+}
diff --git a/scripts/kalimdor/caverns_of_time/well_of_eternity/boss_perotharn.cpp b/scripts/kalimdor/caverns_of_time/well_of_eternity/boss_perotharn.cpp
new file mode 100644
index 0000000..55899d8
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/well_of_eternity/boss_perotharn.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_perotharn
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Well of Eternity
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_perotharn()
+{
+}
diff --git a/scripts/kalimdor/caverns_of_time/well_of_eternity/boss_queen_azshara.cpp b/scripts/kalimdor/caverns_of_time/well_of_eternity/boss_queen_azshara.cpp
new file mode 100644
index 0000000..7b0f48b
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/well_of_eternity/boss_queen_azshara.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_queen_azshara
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Well of Eternity
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_queen_azshara()
+{
+}
diff --git a/scripts/kalimdor/caverns_of_time/well_of_eternity/instance_well_of_eternity.cpp b/scripts/kalimdor/caverns_of_time/well_of_eternity/instance_well_of_eternity.cpp
new file mode 100644
index 0000000..6e3081a
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/well_of_eternity/instance_well_of_eternity.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: instance_well_of_eternity
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Well of Eternity
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_instance_well_of_eternity()
+{
+}
diff --git a/scripts/kalimdor/caverns_of_time/well_of_eternity/well_of_eternity.h b/scripts/kalimdor/caverns_of_time/well_of_eternity/well_of_eternity.h
new file mode 100644
index 0000000..56a35aa
--- /dev/null
+++ b/scripts/kalimdor/caverns_of_time/well_of_eternity/well_of_eternity.h
@@ -0,0 +1,4 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software licensed under GPL version 2
+ * Please see the included DOCS/LICENSE.TXT for more information */
+ 
\ No newline at end of file
diff --git a/scripts/kalimdor/firelands/boss_alysrazor.cpp b/scripts/kalimdor/firelands/boss_alysrazor.cpp
new file mode 100644
index 0000000..90000d8
--- /dev/null
+++ b/scripts/kalimdor/firelands/boss_alysrazor.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_alysrazor
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Firelands
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_alysrazor()
+{
+}
diff --git a/scripts/kalimdor/firelands/boss_baleroc.cpp b/scripts/kalimdor/firelands/boss_baleroc.cpp
new file mode 100644
index 0000000..c9559af
--- /dev/null
+++ b/scripts/kalimdor/firelands/boss_baleroc.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_baleroc
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Firelands
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_baleroc()
+{
+}
diff --git a/scripts/kalimdor/firelands/boss_bethtilac.cpp b/scripts/kalimdor/firelands/boss_bethtilac.cpp
new file mode 100644
index 0000000..ceb06b2
--- /dev/null
+++ b/scripts/kalimdor/firelands/boss_bethtilac.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_bethtilac
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Firelands
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_bethtilac()
+{
+}
diff --git a/scripts/kalimdor/firelands/boss_lord_rhyolith.cpp b/scripts/kalimdor/firelands/boss_lord_rhyolith.cpp
new file mode 100644
index 0000000..e83fde3
--- /dev/null
+++ b/scripts/kalimdor/firelands/boss_lord_rhyolith.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_lord_rhyolith
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Firelands
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_lord_rhyolith()
+{
+}
diff --git a/scripts/kalimdor/firelands/boss_majordomo_staghelm.cpp b/scripts/kalimdor/firelands/boss_majordomo_staghelm.cpp
new file mode 100644
index 0000000..87cfb82
--- /dev/null
+++ b/scripts/kalimdor/firelands/boss_majordomo_staghelm.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_majordomo_staghelm
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Firelands
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_majordomo_staghelm()
+{
+}
diff --git a/scripts/kalimdor/firelands/boss_ragnaros_firelands.cpp b/scripts/kalimdor/firelands/boss_ragnaros_firelands.cpp
new file mode 100644
index 0000000..2fcabfe
--- /dev/null
+++ b/scripts/kalimdor/firelands/boss_ragnaros_firelands.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_ragnaros_firelands
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Firelands
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_ragnaros_firelands()
+{
+}
diff --git a/scripts/kalimdor/firelands/boss_shannox.cpp b/scripts/kalimdor/firelands/boss_shannox.cpp
new file mode 100644
index 0000000..49b026f
--- /dev/null
+++ b/scripts/kalimdor/firelands/boss_shannox.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_shannox
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Firelands
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_shannox()
+{
+}
diff --git a/scripts/kalimdor/firelands/firelands.h b/scripts/kalimdor/firelands/firelands.h
new file mode 100644
index 0000000..56a35aa
--- /dev/null
+++ b/scripts/kalimdor/firelands/firelands.h
@@ -0,0 +1,4 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software licensed under GPL version 2
+ * Please see the included DOCS/LICENSE.TXT for more information */
+ 
\ No newline at end of file
diff --git a/scripts/kalimdor/firelands/instance_firelands.cpp b/scripts/kalimdor/firelands/instance_firelands.cpp
new file mode 100644
index 0000000..079b5db
--- /dev/null
+++ b/scripts/kalimdor/firelands/instance_firelands.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: instance_firelands
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Firelands
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_instance_firelands()
+{
+}
diff --git a/scripts/kalimdor/lost_city_of_tolvir/boss_general_husam.cpp b/scripts/kalimdor/lost_city_of_tolvir/boss_general_husam.cpp
new file mode 100644
index 0000000..82515c4
--- /dev/null
+++ b/scripts/kalimdor/lost_city_of_tolvir/boss_general_husam.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_general_husam
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Lost City of Tolvir
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_general_husam()
+{
+}
diff --git a/scripts/kalimdor/lost_city_of_tolvir/boss_lockmaw.cpp b/scripts/kalimdor/lost_city_of_tolvir/boss_lockmaw.cpp
new file mode 100644
index 0000000..058007c
--- /dev/null
+++ b/scripts/kalimdor/lost_city_of_tolvir/boss_lockmaw.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_lockmaw
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Lost City of Tolvir
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_lockmaw()
+{
+}
diff --git a/scripts/kalimdor/lost_city_of_tolvir/boss_prophet_barim.cpp b/scripts/kalimdor/lost_city_of_tolvir/boss_prophet_barim.cpp
new file mode 100644
index 0000000..c4f3682
--- /dev/null
+++ b/scripts/kalimdor/lost_city_of_tolvir/boss_prophet_barim.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_prophet_barim
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Lost City of Tolvir
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_prophet_barim()
+{
+}
diff --git a/scripts/kalimdor/lost_city_of_tolvir/boss_siamat.cpp b/scripts/kalimdor/lost_city_of_tolvir/boss_siamat.cpp
new file mode 100644
index 0000000..7cd7c6d
--- /dev/null
+++ b/scripts/kalimdor/lost_city_of_tolvir/boss_siamat.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_siamat
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Lost City of Tolvir
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_siamat()
+{
+}
diff --git a/scripts/kalimdor/lost_city_of_tolvir/instance_lost_city_of_tolvir.cpp b/scripts/kalimdor/lost_city_of_tolvir/instance_lost_city_of_tolvir.cpp
new file mode 100644
index 0000000..e512687
--- /dev/null
+++ b/scripts/kalimdor/lost_city_of_tolvir/instance_lost_city_of_tolvir.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: instance_lost_city_of_tolvir
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Lost City of Tolvir
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_instance_lost_city_of_tolvir()
+{
+}
diff --git a/scripts/kalimdor/lost_city_of_tolvir/lost_city_of_tolvir.h b/scripts/kalimdor/lost_city_of_tolvir/lost_city_of_tolvir.h
new file mode 100644
index 0000000..56a35aa
--- /dev/null
+++ b/scripts/kalimdor/lost_city_of_tolvir/lost_city_of_tolvir.h
@@ -0,0 +1,4 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software licensed under GPL version 2
+ * Please see the included DOCS/LICENSE.TXT for more information */
+ 
\ No newline at end of file
diff --git a/scripts/kalimdor/molten_front.cpp b/scripts/kalimdor/molten_front.cpp
new file mode 100644
index 0000000..bf78413
--- /dev/null
+++ b/scripts/kalimdor/molten_front.cpp
@@ -0,0 +1,35 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Molten Front
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Molten Front
+EndScriptData */
+
+/* ContentData
+EndContentData */
+
+#include "precompiled.h"
+
+/*######
+#
+######*/
+
+void AddSC_molten_front()
+{
+}
diff --git a/scripts/kalimdor/mount_hyjal.cpp b/scripts/kalimdor/mount_hyjal.cpp
new file mode 100644
index 0000000..974ddf1
--- /dev/null
+++ b/scripts/kalimdor/mount_hyjal.cpp
@@ -0,0 +1,35 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Mount Hyjal
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Mount Hyjal
+EndScriptData */
+
+/* ContentData
+EndContentData */
+
+#include "precompiled.h"
+
+/*######
+#
+######*/
+
+void AddSC_mount_hyjal()
+{
+}
diff --git a/scripts/kalimdor/throne_of_the_four_winds/boss_alakir.cpp b/scripts/kalimdor/throne_of_the_four_winds/boss_alakir.cpp
new file mode 100644
index 0000000..0961d97
--- /dev/null
+++ b/scripts/kalimdor/throne_of_the_four_winds/boss_alakir.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_alakir
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Throne of the Four Winds
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_alakir()
+{
+}
diff --git a/scripts/kalimdor/throne_of_the_four_winds/conclave_of_the_wind.cpp b/scripts/kalimdor/throne_of_the_four_winds/conclave_of_the_wind.cpp
new file mode 100644
index 0000000..5f83ab5
--- /dev/null
+++ b/scripts/kalimdor/throne_of_the_four_winds/conclave_of_the_wind.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: conclave_of_the_wind
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Throne of the Four Winds
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_conclave_of_the_wind()
+{
+}
diff --git a/scripts/kalimdor/throne_of_the_four_winds/instance_throne_of_the_four_winds.cpp b/scripts/kalimdor/throne_of_the_four_winds/instance_throne_of_the_four_winds.cpp
new file mode 100644
index 0000000..f07d784
--- /dev/null
+++ b/scripts/kalimdor/throne_of_the_four_winds/instance_throne_of_the_four_winds.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: instance_throne_of_the_four_winds
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Throne of the Four Winds
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_instance_throne_of_the_four_winds()
+{
+}
diff --git a/scripts/kalimdor/throne_of_the_four_winds/throne_of_the_four_winds.h b/scripts/kalimdor/throne_of_the_four_winds/throne_of_the_four_winds.h
new file mode 100644
index 0000000..56a35aa
--- /dev/null
+++ b/scripts/kalimdor/throne_of_the_four_winds/throne_of_the_four_winds.h
@@ -0,0 +1,4 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software licensed under GPL version 2
+ * Please see the included DOCS/LICENSE.TXT for more information */
+ 
\ No newline at end of file
diff --git a/scripts/kalimdor/uldum.cpp b/scripts/kalimdor/uldum.cpp
new file mode 100644
index 0000000..bb8fc74
--- /dev/null
+++ b/scripts/kalimdor/uldum.cpp
@@ -0,0 +1,35 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Uldum
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Uldum
+EndScriptData */
+
+/* ContentData
+EndContentData */
+
+#include "precompiled.h"
+
+/*######
+#
+######*/
+
+void AddSC_uldum()
+{
+}
diff --git a/scripts/kalimdor/vortex_pinnacle/boss_altairus.cpp b/scripts/kalimdor/vortex_pinnacle/boss_altairus.cpp
new file mode 100644
index 0000000..d622046
--- /dev/null
+++ b/scripts/kalimdor/vortex_pinnacle/boss_altairus.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_altairus
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Vortex Pinnacle
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_altairus()
+{
+}
diff --git a/scripts/kalimdor/vortex_pinnacle/boss_asaad.cpp b/scripts/kalimdor/vortex_pinnacle/boss_asaad.cpp
new file mode 100644
index 0000000..ab47032
--- /dev/null
+++ b/scripts/kalimdor/vortex_pinnacle/boss_asaad.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_asaad
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Vortex Pinnacle
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_asaad()
+{
+}
diff --git a/scripts/kalimdor/vortex_pinnacle/boss_grand_vizier_ertan.cpp b/scripts/kalimdor/vortex_pinnacle/boss_grand_vizier_ertan.cpp
new file mode 100644
index 0000000..80bd0a3
--- /dev/null
+++ b/scripts/kalimdor/vortex_pinnacle/boss_grand_vizier_ertan.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_grand_vizier_etan
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Vortex Pinnacle
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_grand_vizier_etan()
+{
+}
diff --git a/scripts/kalimdor/vortex_pinnacle/instance_vortex_pinnacle.cpp b/scripts/kalimdor/vortex_pinnacle/instance_vortex_pinnacle.cpp
new file mode 100644
index 0000000..d8d878e
--- /dev/null
+++ b/scripts/kalimdor/vortex_pinnacle/instance_vortex_pinnacle.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: instance_vortex_pinnacle
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Vortex Pinnacle
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_instance_vortex_pinnacle()
+{
+}
diff --git a/scripts/kalimdor/vortex_pinnacle/vortex_pinnacle.h b/scripts/kalimdor/vortex_pinnacle/vortex_pinnacle.h
new file mode 100644
index 0000000..56a35aa
--- /dev/null
+++ b/scripts/kalimdor/vortex_pinnacle/vortex_pinnacle.h
@@ -0,0 +1,4 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software licensed under GPL version 2
+ * Please see the included DOCS/LICENSE.TXT for more information */
+ 
\ No newline at end of file
diff --git a/scripts/maelstrom/deepholm.cpp b/scripts/maelstrom/deepholm.cpp
new file mode 100644
index 0000000..fbe889e
--- /dev/null
+++ b/scripts/maelstrom/deepholm.cpp
@@ -0,0 +1,35 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Deepholm
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Deepholm
+EndScriptData */
+
+/* ContentData
+EndContentData */
+
+#include "precompiled.h"
+
+/*######
+#
+######*/
+
+void AddSC_deepholm()
+{
+}
diff --git a/scripts/maelstrom/kezan.cpp b/scripts/maelstrom/kezan.cpp
new file mode 100644
index 0000000..2c1ebcb
--- /dev/null
+++ b/scripts/maelstrom/kezan.cpp
@@ -0,0 +1,35 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Kezan
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Kezan
+EndScriptData */
+
+/* ContentData
+EndContentData */
+
+#include "precompiled.h"
+
+/*######
+#
+######*/
+
+void AddSC_kezan()
+{
+}
diff --git a/scripts/maelstrom/lost_isles.cpp b/scripts/maelstrom/lost_isles.cpp
new file mode 100644
index 0000000..822d3ed
--- /dev/null
+++ b/scripts/maelstrom/lost_isles.cpp
@@ -0,0 +1,35 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: Lost Isles
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Lost Isles
+EndScriptData */
+
+/* ContentData
+EndContentData */
+
+#include "precompiled.h"
+
+/*######
+#
+######*/
+
+void AddSC_lost_isles()
+{
+}
diff --git a/scripts/maelstrom/stonecore/boss_corborus.cpp b/scripts/maelstrom/stonecore/boss_corborus.cpp
new file mode 100644
index 0000000..8623b62
--- /dev/null
+++ b/scripts/maelstrom/stonecore/boss_corborus.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_corborus
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Stonecore
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_corborus()
+{
+}
diff --git a/scripts/maelstrom/stonecore/boss_ozruk.cpp b/scripts/maelstrom/stonecore/boss_ozruk.cpp
new file mode 100644
index 0000000..ca6aeda
--- /dev/null
+++ b/scripts/maelstrom/stonecore/boss_ozruk.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_ozruk
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Stonecore
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_ozruk()
+{
+}
diff --git a/scripts/maelstrom/stonecore/boss_priestess_azil.cpp b/scripts/maelstrom/stonecore/boss_priestess_azil.cpp
new file mode 100644
index 0000000..932dd69
--- /dev/null
+++ b/scripts/maelstrom/stonecore/boss_priestess_azil.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_priestess_azil
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Stonecore
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_priestess_azil()
+{
+}
diff --git a/scripts/maelstrom/stonecore/boss_slabhide.cpp b/scripts/maelstrom/stonecore/boss_slabhide.cpp
new file mode 100644
index 0000000..846b32f
--- /dev/null
+++ b/scripts/maelstrom/stonecore/boss_slabhide.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: boss_slabhide
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Stonecore
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_boss_slabhide()
+{
+}
diff --git a/scripts/maelstrom/stonecore/instance_stonecore.cpp b/scripts/maelstrom/stonecore/instance_stonecore.cpp
new file mode 100644
index 0000000..0394e34
--- /dev/null
+++ b/scripts/maelstrom/stonecore/instance_stonecore.cpp
@@ -0,0 +1,28 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/* ScriptData
+SDName: instance_stonecore
+SD%Complete: 0
+SDComment: Placeholder
+SDCategory: Stonecore
+EndScriptData */
+
+#include "precompiled.h"
+
+void AddSC_instance_stonecore()
+{
+}
diff --git a/scripts/maelstrom/stonecore/stonecore.h b/scripts/maelstrom/stonecore/stonecore.h
new file mode 100644
index 0000000..56a35aa
--- /dev/null
+++ b/scripts/maelstrom/stonecore/stonecore.h
@@ -0,0 +1,4 @@
+/* Copyright (C) 2006 - 2012 ScriptDev2 <http://www.scriptdev2.com/>
+ * This program is free software licensed under GPL version 2
+ * Please see the included DOCS/LICENSE.TXT for more information */
+ 
\ No newline at end of file
diff --git a/sd2_revision_nr.h b/sd2_revision_nr.h
index f0b9570..2da2a96 100644
--- a/sd2_revision_nr.h
+++ b/sd2_revision_nr.h
@@ -1,4 +1,4 @@
 #ifndef __SD2_REVISION_NR_H__
 #define __SD2_REVISION_NR_H__
- #define SD2_REVISION_NR "2652"
+ #define SD2_REVISION_NR "0001"
 #endif // __SD2_REVISION_NR_H__
diff --git a/system/ScriptLoader.cpp b/system/ScriptLoader.cpp
index aa9e37a..8b1d3c6 100644
--- a/system/ScriptLoader.cpp
+++ b/system/ScriptLoader.cpp
@@ -28,7 +28,19 @@ extern void AddSC_spell_scripts();
 extern void AddSC_world_map_scripts();
 
 // eastern kingdoms
-extern void AddSC_blackrock_depths();                       // blackrock_depths
+extern void AddSC_ascendant_council();                      // bastion_of_twilight
+extern void AddSC_boss_chogall();
+extern void AddSC_boss_halfus_wyrmbreaker();
+extern void AddSC_boss_sinestra();
+extern void AddSC_boss_valiona_and_theralion();
+extern void AddSC_instance_bastion_of_twilight();
+extern void AddSC_boss_beauty();                            // BM, blackrock_caverns
+extern void AddSC_boss_corla();
+extern void AddSC_boss_karsh_steelbender();
+extern void AddSC_boss_lord_obsidius();
+extern void AddSC_boss_romogg();
+extern void AddSC_instance_blackrock_caverns();
+extern void AddSC_blackrock_depths();                       // BM, blackrock_depths
 extern void AddSC_boss_ambassador_flamelash();
 extern void AddSC_boss_anubshiah();
 extern void AddSC_boss_coren_direbrew();
@@ -40,7 +52,7 @@ extern void AddSC_boss_high_interrogator_gerstahn();
 extern void AddSC_boss_magmus();
 extern void AddSC_boss_tomb_of_seven();
 extern void AddSC_instance_blackrock_depths();
-extern void AddSC_boss_drakkisath();                        // blackrock_spire
+extern void AddSC_boss_drakkisath();                        // BM, blackrock_spire
 extern void AddSC_boss_halycon();
 extern void AddSC_boss_highlordomokk();
 extern void AddSC_boss_mothersmolderweb();
@@ -53,7 +65,14 @@ extern void AddSC_boss_pyroguard_emberseer();
 extern void AddSC_boss_gyth();
 extern void AddSC_boss_rend_blackhand();
 extern void AddSC_instance_blackrock_spire();
-extern void AddSC_boss_razorgore();                         // blackwing_lair
+extern void AddSC_boss_adramedes();                         // BM, blackwing_descent
+extern void AddSC_boss_chimaeron();
+extern void AddSC_boss_magmaw();
+extern void AddSC_boss_maloriak();
+extern void AddSC_boss_nefarian_descent();
+extern void AddSC_instance_blackwing_descent();
+extern void AddSC_omnotron_defense();
+extern void AddSC_boss_razorgore();                         // BM, blackwing_lair
 extern void AddSC_boss_vaelastrasz();
 extern void AddSC_boss_broodlord();
 extern void AddSC_boss_firemaw();
@@ -63,12 +82,29 @@ extern void AddSC_boss_chromaggus();
 extern void AddSC_boss_nefarian();
 extern void AddSC_boss_victor_nefarius();
 extern void AddSC_instance_blackwing_lair();
+extern void AddSC_boss_lucifron();                          // BM, molten_core
+extern void AddSC_boss_magmadar();
+extern void AddSC_boss_gehennas();
+extern void AddSC_boss_garr();
+extern void AddSC_boss_baron_geddon();
+extern void AddSC_boss_shazzrah();
+extern void AddSC_boss_golemagg();
+extern void AddSC_boss_sulfuron();
+extern void AddSC_boss_majordomo();
+extern void AddSC_boss_ragnaros();
+extern void AddSC_instance_molten_core();
+extern void AddSC_molten_core();
 extern void AddSC_boss_mr_smite();                          // deadmines
 extern void AddSC_deadmines();
 extern void AddSC_instance_deadmines();
 extern void AddSC_gnomeregan();                             // gnomeregan
 extern void AddSC_boss_thermaplugg();
 extern void AddSC_instance_gnomeregan();
+extern void AddSC_boss_drahga_shadowburner();               // grim_batol
+extern void AddSC_boss_erudax();
+extern void AddSC_boss_forgemaster_throngus();
+extern void AddSC_boss_general_umbriss();
+extern void AddSC_instance_grim_batol();
 extern void AddSC_boss_attumen();                           // karazhan
 extern void AddSC_boss_curator();
 extern void AddSC_boss_maiden_of_virtue();
@@ -88,18 +124,6 @@ extern void AddSC_boss_vexallus();
 extern void AddSC_boss_priestess_delrissa();
 extern void AddSC_instance_magisters_terrace();
 extern void AddSC_magisters_terrace();
-extern void AddSC_boss_lucifron();                          // molten_core
-extern void AddSC_boss_magmadar();
-extern void AddSC_boss_gehennas();
-extern void AddSC_boss_garr();
-extern void AddSC_boss_baron_geddon();
-extern void AddSC_boss_shazzrah();
-extern void AddSC_boss_golemagg();
-extern void AddSC_boss_sulfuron();
-extern void AddSC_boss_majordomo();
-extern void AddSC_boss_ragnaros();
-extern void AddSC_instance_molten_core();
-extern void AddSC_molten_core();
 extern void AddSC_ebon_hold();                              // scarlet_enclave
 extern void AddSC_boss_arcanist_doan();                     // scarlet_monastery
 extern void AddSC_boss_azshir_the_sleepless();
@@ -143,6 +167,11 @@ extern void AddSC_boss_kalecgos();
 extern void AddSC_boss_kiljaeden();
 extern void AddSC_boss_muru();
 extern void AddSC_instance_sunwell_plateau();
+extern void AddSC_boss_commander_ulthok();                  // throne_of_the_tides
+extern void AddSC_boss_erunak_and_ghursha();
+extern void AddSC_boss_lady_nazjar();
+extern void AddSC_boss_ozumat();
+extern void AddSC_instance_throne_of_the_tides();
 extern void AddSC_boss_archaedas();                         // uldaman
 extern void AddSC_instance_uldaman();
 extern void AddSC_uldaman();
@@ -180,6 +209,8 @@ extern void AddSC_eastern_plaguelands();
 extern void AddSC_elwynn_forest();
 extern void AddSC_eversong_woods();
 extern void AddSC_ghostlands();
+extern void AddSC_gilneas();
+extern void AddSC_gilneas_city();
 extern void AddSC_hinterlands();
 extern void AddSC_ironforge();
 extern void AddSC_isle_of_queldanas();
@@ -192,19 +223,38 @@ extern void AddSC_stormwind_city();
 extern void AddSC_stranglethorn_vale();
 extern void AddSC_swamp_of_sorrows();
 extern void AddSC_tirisfal_glades();
+extern void AddSC_twilight_highlands();
 extern void AddSC_undercity();
+extern void AddSC_vashjir();
 extern void AddSC_western_plaguelands();
 extern void AddSC_westfall();
 extern void AddSC_wetlands();
 
 // kalimdor
 extern void AddSC_instance_blackfathom_deeps();             // blackfathom_deeps
+extern void AddSC_culling_of_stratholme();                  // COT, culling_of_stratholme
+extern void AddSC_instance_culling_of_stratholme();
 extern void AddSC_boss_aeonus();                            // COT, dark_portal
 extern void AddSC_boss_chrono_lord_deja();
 extern void AddSC_boss_temporus();
 extern void AddSC_dark_portal();
 extern void AddSC_instance_dark_portal();
-extern void AddSC_hyjal();                                  // COT, hyjal
+extern void AddSC_boss_deathwing();                         // COT, dragon_soul
+extern void AddSC_boss_hagara();
+extern void AddSC_boss_morchok();
+extern void AddSC_boss_ultraxion();
+extern void AddSC_boss_warlord_zonozz();
+extern void AddSC_boss_warmaster_blackhorn();
+extern void AddSC_boss_yorsahj();
+extern void AddSC_dragon_soul();
+extern void AddSC_instance_dragon_soul();
+extern void AddSC_end_of_time();                            // COT, end_of_time
+extern void AddSC_instance_end_of_time();
+extern void AddSC_boss_archbishop_benedictus();             // COT, hour_of_twilight
+extern void AddSC_boss_arcurion();
+extern void AddSC_boss_asira_dawnslayer();
+extern void AddSC_instance_hour_of_twilight();
+extern void AddSC_hyjal();                                  // COT, hyjal_summit
 extern void AddSC_boss_archimonde();
 extern void AddSC_instance_mount_hyjal();
 extern void AddSC_boss_captain_skarloc();                   // COT, old_hillsbrad
@@ -212,10 +262,25 @@ extern void AddSC_boss_epoch_hunter();
 extern void AddSC_boss_lieutenant_drake();
 extern void AddSC_instance_old_hillsbrad();
 extern void AddSC_old_hillsbrad();
-extern void AddSC_culling_of_stratholme();                  // COT, culling_of_stratholme
-extern void AddSC_instance_culling_of_stratholme();
+extern void AddSC_boss_mannoroth_and_varothen();            // COT, well_of_eternity
+extern void AddSC_boss_perotharn();
+extern void AddSC_boss_queen_azshara();
+extern void AddSC_instance_well_of_eternity();
 extern void AddSC_dire_maul();                              // dire_maul
 extern void AddSC_instance_dire_maul();
+extern void AddSC_boss_alysrazor();                         // firelands
+extern void AddSC_boss_baleroc();
+extern void AddSC_boss_bethtilac();
+extern void AddSC_boss_lord_rhyolith();
+extern void AddSC_boss_majordomo_staghelm();
+extern void AddSC_boss_ragnaros_firelands();
+extern void AddSC_boss_shannox();
+extern void AddSC_instance_firelands();
+extern void AddSC_boss_general_husam();                     // lost_city_of_tolvir
+extern void AddSC_boss_lockmaw();
+extern void AddSC_boss_prophet_barim();
+extern void AddSC_boss_siamat();
+extern void AddSC_instance_lost_city_of_tolvir();
 extern void AddSC_boss_celebras_the_cursed();               // maraudon
 extern void AddSC_boss_landslide();
 extern void AddSC_boss_noxxion();
@@ -244,6 +309,13 @@ extern void AddSC_boss_twinemperors();
 extern void AddSC_boss_viscidus();
 extern void AddSC_mob_anubisath_sentinel();
 extern void AddSC_instance_temple_of_ahnqiraj();
+extern void AddSC_boss_alakir();                            // throne_of_the_four_winds
+extern void AddSC_conclave_of_the_wind();
+extern void AddSC_instance_throne_of_the_four_winds();
+extern void AddSC_boss_altairus();                          // vortex_pinnacle
+extern void AddSC_boss_asaad();
+extern void AddSC_boss_grand_vizier_etan();
+extern void AddSC_instance_vortex_pinnacle();
 extern void AddSC_instance_wailing_caverns();               // wailing_caverns
 extern void AddSC_wailing_caverns();
 extern void AddSC_boss_zumrah();                            // zulfarrak
@@ -261,7 +333,9 @@ extern void AddSC_durotar();
 extern void AddSC_dustwallow_marsh();
 extern void AddSC_felwood();
 extern void AddSC_feralas();
+extern void AddSC_molten_front();
 extern void AddSC_moonglade();
+extern void AddSC_mount_hyjal();
 extern void AddSC_mulgore();
 extern void AddSC_orgrimmar();
 extern void AddSC_silithus();
@@ -271,9 +345,21 @@ extern void AddSC_teldrassil();
 extern void AddSC_the_barrens();
 extern void AddSC_thousand_needles();
 extern void AddSC_thunder_bluff();
+extern void AddSC_uldum();
 extern void AddSC_ungoro_crater();
 extern void AddSC_winterspring();
 
+// maelstrom
+extern void AddSC_boss_corborus();                          // stonecore
+extern void AddSC_boss_ozruk();
+extern void AddSC_priestess_azil();
+extern void AddSC_boss_slabhide();
+extern void AddSC_instance_stonecore();
+
+extern void AddSC_deepholm();
+extern void AddSC_kezan();
+extern void AddSC_lost_isles();
+
 // northrend
 extern void AddSC_boss_amanitar();                          // azjol-nerub, ahnkahet
 extern void AddSC_boss_jedoga();
@@ -528,7 +614,19 @@ void AddScripts()
     AddSC_world_map_scripts();
 
     // eastern kingdoms
-    AddSC_blackrock_depths();                               // blackrock_depths
+    AddSC_ascendant_council();                              // bastion_of_twilight
+    AddSC_boss_chogall();
+    AddSC_boss_halfus_wyrmbreaker();
+    AddSC_boss_sinestra();
+    AddSC_boss_valiona_and_theralion();
+    AddSC_instance_bastion_of_twilight();
+    AddSC_boss_beauty();                                    // BM, blackrock_caverns
+    AddSC_boss_corla();
+    AddSC_boss_karsh_steelbender();
+    AddSC_boss_lord_obsidius();
+    AddSC_boss_romogg();
+    AddSC_instance_blackrock_caverns();
+    AddSC_blackrock_depths();                               // BM, blackrock_depths
     AddSC_boss_ambassador_flamelash();
     AddSC_boss_anubshiah();
     AddSC_boss_coren_direbrew();
@@ -540,7 +638,7 @@ void AddScripts()
     AddSC_boss_magmus();
     AddSC_boss_tomb_of_seven();
     AddSC_instance_blackrock_depths();
-    AddSC_boss_drakkisath();                                // blackrock_spire
+    AddSC_boss_drakkisath();                                // BM, blackrock_spire
     AddSC_boss_halycon();
     AddSC_boss_highlordomokk();
     AddSC_boss_mothersmolderweb();
@@ -553,7 +651,14 @@ void AddScripts()
     AddSC_boss_gyth();
     AddSC_boss_rend_blackhand();
     AddSC_instance_blackrock_spire();
-    AddSC_boss_razorgore();                                 // blackwing_lair
+    AddSC_boss_adramedes();                                 // BM, blackwing_descent
+    AddSC_boss_chimaeron();
+    AddSC_boss_magmaw();
+    AddSC_boss_maloriak();
+    AddSC_boss_nefarian_descent();
+    AddSC_instance_blackwing_descent();
+    AddSC_omnotron_defense();
+    AddSC_boss_razorgore();                                 // BM, blackwing_lair
     AddSC_boss_vaelastrasz();
     AddSC_boss_broodlord();
     AddSC_boss_firemaw();
@@ -563,12 +668,29 @@ void AddScripts()
     AddSC_boss_nefarian();
     AddSC_boss_victor_nefarius();
     AddSC_instance_blackwing_lair();
+    AddSC_boss_lucifron();                                  // BM, molten_core
+    AddSC_boss_magmadar();
+    AddSC_boss_gehennas();
+    AddSC_boss_garr();
+    AddSC_boss_baron_geddon();
+    AddSC_boss_shazzrah();
+    AddSC_boss_golemagg();
+    AddSC_boss_sulfuron();
+    AddSC_boss_majordomo();
+    AddSC_boss_ragnaros();
+    AddSC_instance_molten_core();
+    AddSC_molten_core();
     AddSC_deadmines();                                      // deadmines
     AddSC_boss_mr_smite();
     AddSC_instance_deadmines();
     AddSC_gnomeregan();                                     // gnomeregan
     AddSC_boss_thermaplugg();
     AddSC_instance_gnomeregan();
+    AddSC_boss_drahga_shadowburner();                       // grim_batol
+    AddSC_boss_erudax();
+    AddSC_boss_forgemaster_throngus();
+    AddSC_boss_general_umbriss();
+    AddSC_instance_grim_batol();
     AddSC_boss_attumen();                                   // karazhan
     AddSC_boss_curator();
     AddSC_boss_maiden_of_virtue();
@@ -588,18 +710,6 @@ void AddScripts()
     AddSC_boss_priestess_delrissa();
     AddSC_instance_magisters_terrace();
     AddSC_magisters_terrace();
-    AddSC_boss_lucifron();                                  // molten_core
-    AddSC_boss_magmadar();
-    AddSC_boss_gehennas();
-    AddSC_boss_garr();
-    AddSC_boss_baron_geddon();
-    AddSC_boss_shazzrah();
-    AddSC_boss_golemagg();
-    AddSC_boss_sulfuron();
-    AddSC_boss_majordomo();
-    AddSC_boss_ragnaros();
-    AddSC_instance_molten_core();
-    AddSC_molten_core();
     AddSC_ebon_hold();                                      // scarlet_enclave
     AddSC_boss_arcanist_doan();                             // scarlet_monastery
     AddSC_boss_azshir_the_sleepless();
@@ -643,6 +753,11 @@ void AddScripts()
     AddSC_boss_kiljaeden();
     AddSC_boss_muru();
     AddSC_instance_sunwell_plateau();
+    AddSC_boss_commander_ulthok();                          // throne_of_the_tides
+    AddSC_boss_erunak_and_ghursha();
+    AddSC_boss_lady_nazjar();
+    AddSC_boss_ozumat();
+    AddSC_instance_throne_of_the_tides();
     AddSC_boss_archaedas();                                 // uldaman
     AddSC_instance_uldaman();
     AddSC_uldaman();
@@ -680,6 +795,8 @@ void AddScripts()
     AddSC_elwynn_forest();
     AddSC_eversong_woods();
     AddSC_ghostlands();
+    AddSC_gilneas();
+    AddSC_gilneas_city();
     AddSC_hinterlands();
     AddSC_ironforge();
     AddSC_isle_of_queldanas();
@@ -692,18 +809,37 @@ void AddScripts()
     AddSC_stranglethorn_vale();
     AddSC_swamp_of_sorrows();
     AddSC_tirisfal_glades();
+    AddSC_twilight_highlands();
     AddSC_undercity();
+    AddSC_vashjir();
     AddSC_western_plaguelands();
     AddSC_westfall();
     AddSC_wetlands();
 
     // kalimdor
     AddSC_instance_blackfathom_deeps();                     // blackfathom deeps
+    AddSC_culling_of_stratholme();                          // CoT, culling_of_stratholme
+    AddSC_instance_culling_of_stratholme();
     AddSC_boss_aeonus();                                    // CoT, dark_portal
     AddSC_boss_chrono_lord_deja();
     AddSC_boss_temporus();
     AddSC_dark_portal();
     AddSC_instance_dark_portal();
+    AddSC_boss_deathwing();                                 // CoT, dragon_soul
+    AddSC_boss_hagara();
+    AddSC_boss_morchok();
+    AddSC_boss_ultraxion();
+    AddSC_boss_warlord_zonozz();
+    AddSC_boss_warmaster_blackhorn();
+    AddSC_boss_yorsahj();
+    AddSC_dragon_soul();
+    AddSC_instance_dragon_soul();
+    AddSC_end_of_time();                                    // CoT, end_of_time
+    AddSC_instance_end_of_time();
+    AddSC_boss_archbishop_benedictus();                     // CoT, hour_of_twilight
+    AddSC_boss_arcurion();
+    AddSC_boss_asira_dawnslayer();
+    AddSC_instance_hour_of_twilight();
     AddSC_hyjal();                                          // CoT, hyjal
     AddSC_boss_archimonde();
     AddSC_instance_mount_hyjal();
@@ -712,10 +848,25 @@ void AddScripts()
     AddSC_boss_lieutenant_drake();
     AddSC_instance_old_hillsbrad();
     AddSC_old_hillsbrad();
-    AddSC_culling_of_stratholme();                          // CoT, culling_of_stratholme
-    AddSC_instance_culling_of_stratholme();
+    AddSC_boss_mannoroth_and_varothen();                    // CoT, well_of_eternity
+    AddSC_boss_perotharn();
+    AddSC_boss_queen_azshara();
+    AddSC_instance_well_of_eternity();
     AddSC_dire_maul();                                      // dire_maul
     AddSC_instance_dire_maul();
+    AddSC_boss_alysrazor();                                 // firelands
+    AddSC_boss_baleroc();
+    AddSC_boss_bethtilac();
+    AddSC_boss_lord_rhyolith();
+    AddSC_boss_majordomo_staghelm();
+    AddSC_boss_ragnaros_firelands();
+    AddSC_boss_shannox();
+    AddSC_instance_firelands();
+    AddSC_boss_general_husam();                             // lost_city_of_tolvir
+    AddSC_boss_lockmaw();
+    AddSC_boss_prophet_barim();
+    AddSC_boss_siamat();
+    AddSC_instance_lost_city_of_tolvir();
     AddSC_boss_celebras_the_cursed();                       // maraudon
     AddSC_boss_landslide();
     AddSC_boss_noxxion();
@@ -744,6 +895,13 @@ void AddScripts()
     AddSC_boss_viscidus();
     AddSC_mob_anubisath_sentinel();
     AddSC_instance_temple_of_ahnqiraj();
+    AddSC_boss_alakir();                                    // throne_of_the_four_winds
+    AddSC_conclave_of_the_wind();
+    AddSC_instance_throne_of_the_four_winds();
+    AddSC_boss_altairus();                                  // vortex_pinnacle
+    AddSC_boss_asaad();
+    AddSC_boss_grand_vizier_etan();
+    AddSC_instance_vortex_pinnacle();
     AddSC_instance_wailing_caverns();                       // wailing_caverns
     AddSC_wailing_caverns();
     AddSC_boss_zumrah();                                    // zulfarrak
@@ -761,7 +919,9 @@ void AddScripts()
     AddSC_dustwallow_marsh();
     AddSC_felwood();
     AddSC_feralas();
+    AddSC_molten_front();
     AddSC_moonglade();
+    AddSC_mount_hyjal();
     AddSC_mulgore();
     AddSC_orgrimmar();
     AddSC_silithus();
@@ -771,9 +931,21 @@ void AddScripts()
     AddSC_the_barrens();
     AddSC_thousand_needles();
     AddSC_thunder_bluff();
+    AddSC_uldum();
     AddSC_ungoro_crater();
     AddSC_winterspring();
 
+    // maelstrom
+    AddSC_boss_corborus();                                  // stonecore
+    AddSC_boss_ozruk();
+    AddSC_priestess_azil();
+    AddSC_boss_slabhide();
+    AddSC_instance_stonecore();
+
+    AddSC_deepholm();
+    AddSC_kezan();
+    AddSC_lost_isles();
+
     // northrend
     AddSC_boss_amanitar();                                  // azjol-nerub, ahnkahet
     AddSC_boss_jedoga();
